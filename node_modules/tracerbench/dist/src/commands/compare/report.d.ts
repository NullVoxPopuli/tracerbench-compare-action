import { IConfig } from "@oclif/config";
import { TBBaseCommand } from "../../command-config";
export interface IReportFlags {
    tbResultsFolder: string;
    config?: string;
    plotTitle?: string;
    isCIEnv?: boolean;
}
export default class CompareReport extends TBBaseCommand {
    static aliases: string[];
    static description: string;
    static flags: {
        tbResultsFolder: import("@oclif/command/lib/flags").IOptionFlag<string>;
        config: import("@oclif/command/lib/flags").IOptionFlag<string | undefined>;
        plotTitle: import("@oclif/command/lib/flags").IOptionFlag<string | undefined>;
        isCIEnv: import("@oclif/command/lib/flags").IOptionFlag<any>;
    };
    reportFlags: IReportFlags;
    constructor(argv: string[], config: IConfig);
    init(): Promise<void>;
    /**
     * Ensure the input file is valid and call the helper function "createConsumableHTML"
     * to generate the HTML string for the output file.
     */
    run(): Promise<void>;
    private parseFlags;
    private determineOutputFileName;
}
//# sourceMappingURL=report.d.ts.map