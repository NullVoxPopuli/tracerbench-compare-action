{"version":3,"file":"/Users/malynch/D/tracerbench/packages/cli/src/commands/profile.ts","sources":["/Users/malynch/D/tracerbench/packages/cli/src/commands/profile.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  analyze,\n  IConditions,\n  ITraceEvent,\n  liveTrace,\n  loadTrace,\n} from \"@tracerbench/core\";\nimport Protocol from \"devtools-protocol\";\nimport { existsSync, mkdirSync, readJson, writeFileSync } from \"fs-extra\";\nimport * as listr from \"listr\";\nimport { join, resolve } from \"path\";\n\nimport { TBBaseCommand } from \"../command-config\";\nimport { harpath } from \"../helpers/args\";\nimport {\n  cookiespath,\n  cpuThrottleRate,\n  network,\n  tbResultsFolder,\n  url,\n  usertimings,\n} from \"../helpers/flags\";\nimport {\n  byTime,\n  collect,\n  findFrame,\n  format,\n  IEvent,\n  isCommitLoad,\n  isFrameMark,\n  isFrameNavigationStart,\n  isMark,\n  isUserMark,\n  normalizeFnName,\n  setTraceEvents,\n} from \"../helpers/utils\";\n\ninterface ProfileContext {\n  cookies: Protocol.Network.CookieParam[];\n  harJSON: any;\n  traceJSONPath: string;\n  traceEvents: ITraceEvent[];\n  url: string;\n  analyzeResults: { node: string; hierarchyReports: string[] };\n}\n\nexport default class Profile extends TBBaseCommand {\n  // include backwards compat to trace cmd\n  static aliases = [\"trace\"];\n  public trace: ITraceEvent[] = [];\n  public static description = `Parses a CPU profile and aggregates time across heuristics.`;\n  public static args = [harpath];\n  public static flags = {\n    cpuThrottleRate: cpuThrottleRate({ required: true }),\n    tbResultsFolder: tbResultsFolder({ required: true }),\n    network: network(),\n    url: url({ required: true }),\n    cookiespath: cookiespath({ required: true }),\n    usertimings,\n  };\n\n  public async run(): Promise<void> {\n    const { flags, args } = this.parse(Profile);\n    const {\n      cpuThrottleRate,\n      cookiespath,\n      tbResultsFolder,\n      network,\n      usertimings,\n      url,\n    } = flags;\n    const { harpath } = args;\n    const cookies = [\n      {\n        name: \"\",\n        value: \"\",\n        domain: \"\",\n        path: \"\",\n      },\n    ];\n    const methods = [\"\"];\n    const conditions: IConditions = {\n      cpu: cpuThrottleRate,\n      network,\n    };\n\n    const tasks = new listr([\n      {\n        title: \"Reading cookies json\",\n        task: async (ctx: ProfileContext) => {\n          // read cookies json file from path and set to context\n          ctx.cookies = cookiespath.length\n            ? await readJson(resolve(cookiespath))\n            : cookies;\n        },\n      },\n      {\n        title: \"Preparing results folder\",\n        task: () => {\n          // if the folder for the tracerbench results file\n          // does not exist then create it\n          try {\n            if (!existsSync(tbResultsFolder)) {\n              mkdirSync(tbResultsFolder);\n            }\n          } catch (error) {\n            this.error(error);\n          }\n        },\n      },\n      {\n        title: \"Validating & Cloning HAR file\",\n        task: async (ctx: ProfileContext) => {\n          // validate har and clone it to trace.json which will be mutated\n          ctx.harJSON = await readJson(resolve(harpath));\n          ctx.traceJSONPath = join(tbResultsFolder, \"trace.json\");\n          writeFileSync(\n            ctx.traceJSONPath,\n            JSON.stringify(ctx.harJSON, null, 2)\n          );\n          // if no url get url from har otherwise set with cmd url\n          ctx.url = url.length ? url : getURLFromHAR(ctx);\n\n          function getURLFromHAR(ctx: ProfileContext): string {\n            try {\n              const url = ctx.harJSON.log.entries[0].request.url;\n              return url;\n            } catch (error) {\n              throw new Error(\n                `${error}. Could not extract the URL from the HAR. Explicitly pass via \"--url\" flag and rerun.`\n              );\n            }\n          }\n        },\n      },\n      {\n        title: \"Recording the live trace\",\n        task: async (ctx: ProfileContext) => {\n          const { cookies, url } = ctx;\n          // run the liveTrace\n          const { traceEvents } = await liveTrace(\n            url,\n            tbResultsFolder,\n            cookies,\n            conditions\n          );\n          ctx.traceEvents = traceEvents;\n        },\n      },\n      {\n        title: \"Analyzing the live trace\",\n        task: async (ctx: ProfileContext) => {\n          const { traceEvents, harJSON } = ctx;\n          // analyze the liveTrace\n          ctx.analyzeResults = await analyze({\n            traceEvents,\n            traceHARJSON: harJSON,\n            methods,\n          });\n        },\n      },\n      {\n        title: \"Setting trace events\",\n        task: async (ctx: ProfileContext) => {\n          const { traceEvents } = ctx;\n          // mutates this.trace\n          try {\n            this.trace = setTraceEvents(traceEvents);\n          } catch (error) {\n            this.error(`${error}`);\n          }\n        },\n      },\n    ]);\n\n    await tasks\n      .run()\n      .catch((error) => {\n        throw new Error(error);\n      })\n      .then(async (ctx) => {\n        // log logAnalyzeReports\n        this.log(`\\n`);\n        this.logAnalyzeReports(ctx.analyzeResults);\n        // log js-eval-time\n        this.log(`\\n`);\n        this.logJSEvalTime();\n        // log css-parse\n        this.log(`\\n`);\n        this.logCSSEvalTime();\n        // log list-functions\n        this.log(`\\n`);\n        this.listFrames();\n        // log user timings\n        if (usertimings) {\n          this.log(`\\n`);\n          await this.markerTimings(ctx.traceJSONPath, ctx.url);\n        }\n      });\n  }\n\n  private logAnalyzeReports(analyzeResults: {\n    node: string;\n    hierarchyReports: string[];\n  }): void {\n    this.log(`${analyzeResults.node}`);\n    analyzeResults.hierarchyReports.forEach((report) => {\n      this.log(`${report}`);\n    });\n  }\n\n  private listFrames(): void {\n    const methodsSet = new Set();\n    let clonedTrace: any = null;\n\n    try {\n      const profile = loadTrace(this.trace).cpuProfile(-1, -1);\n      profile.nodeMap.forEach((node: any) => {\n        const { functionName, url, lineNumber, columnNumber } = node.callFrame;\n\n        methodsSet.add(\n          `${url}:${lineNumber}:${columnNumber}.${normalizeFnName(\n            functionName\n          )}`\n        );\n      });\n    } catch (error) {\n      this.error(error);\n    }\n\n    try {\n      clonedTrace = this.trace;\n      const traceLoad = clonedTrace.filter(isCommitLoad);\n      traceLoad.forEach(\n        ({\n          args: {\n            data: { frame, url },\n          },\n        }: {\n          args: { data: { frame: any; url: any } };\n        }) => {\n          this.log(`Frame-URL: ${url} | Frame-ID: ${frame}`);\n        }\n      );\n    } catch (error) {\n      this.error(`${error}`);\n    }\n  }\n\n  private logCSSEvalTime(): void {\n    let totalCSSDuration = 0;\n\n    this.trace\n      .filter((event: ITraceEvent) => event.name === \"ParseAuthorStyleSheet\")\n      .filter((event: any) => event.args.data.styleSheetUrl)\n      .forEach((event: any) => {\n        const url = event.args.data.styleSheetUrl;\n        const durationInMs = event.dur / 1000;\n        totalCSSDuration += durationInMs;\n        this.log(`CSS: ${url}: ${durationInMs.toFixed(2)}`);\n      });\n\n    // log css-parse-time\n    this.log(\n      `CSS: Evaluation Total Duration: ${totalCSSDuration.toFixed(2)}ms`\n    );\n  }\n\n  private logJSEvalTime(): void {\n    let totalJSDuration = 0;\n\n    this.trace\n      .filter((event: ITraceEvent) => event.name === \"EvaluateScript\")\n      .filter((event: any) => event.args.data.url)\n      .forEach((event: any) => {\n        const url = event.args.data.url;\n        const durationInMs = (event.dur as number) / 1000;\n        totalJSDuration += durationInMs;\n        this.log(`JS: ${url}: ${durationInMs.toFixed(2)}`);\n      });\n\n    // log js-eval-time\n    this.log(`JS: Evaluation Total Duration: ${totalJSDuration.toFixed(2)}ms`);\n  }\n\n  // tracerbench marker-timings cmd moved here\n  private async markerTimings(\n    traceJSONPath: string,\n    url: string\n  ): Promise<void> {\n    const traceFrame: string = url;\n    const filter = collect(\"\", []);\n\n    let frame: any = null;\n    let startTime = -1;\n    let rawTraceData: any = null;\n    let customTrace: any = null;\n\n    if (!url) {\n      this.error(\n        `Could not extract the URL from the HAR. Explicitly pass via \"--url\" flag and rerun.`\n      );\n    }\n\n    try {\n      rawTraceData = await readJson(resolve(traceJSONPath));\n    } catch (e) {\n      this.error(e);\n    }\n\n    try {\n      customTrace = setTraceEvents(rawTraceData);\n    } catch (e) {\n      this.error(e);\n    }\n\n    if (traceFrame.startsWith(\"http\")) {\n      frame = findFrame(customTrace, traceFrame);\n    } else {\n      frame = traceFrame;\n    }\n    if (!frame) {\n      this.error(\n        `Could not extract frame from trace. Explicitly opt-out of usertimings via \"--usertimings\" boolean flag and rerun.`\n      );\n    }\n\n    customTrace\n      .filter((event: IEvent) => isMark(event) || isCommitLoad(event))\n      .sort(byTime)\n      .forEach((event: any) => {\n        if (isFrameNavigationStart(frame, event)) {\n          startTime = event.ts;\n          this.log(\n            `Marker Timings: ${format(event.ts, startTime)} ${event.name}`\n          );\n        } else if (isFrameMark(frame, event)) {\n          if (startTime === -1) {\n            startTime = event.ts;\n          }\n          this.log(\n            `Marker Timings: ${format(event.ts, startTime)} ${event.name}`\n          );\n        } else if (isUserMark(event)) {\n          if (\n            filter.length === 0 ||\n            filter.some((f: any) => event.name.indexOf(f) !== -1)\n          ) {\n            this.log(\n              `Marker Timings: ${format(event.ts, startTime)} ${event.name}`\n            );\n          }\n        } else if (isCommitLoad(event)) {\n          const { data } = event.args;\n          if (data.frame === frame) {\n            this.log(\n              `Marker Timings: ${format(event.ts, startTime)} ${event.name} ${\n                data.frame\n              } ${data.url}`\n            );\n          }\n        }\n      });\n  }\n}\n"]}