"use strict";function cov_1csyqvtbq(){var path="/Users/malynch/D/tracerbench/packages/cli/src/commands/compare/analyze.ts";var hash="24386756484f46bfd43f2ad5d1f9078244667416";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/malynch/D/tracerbench/packages/cli/src/commands/compare/analyze.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:4,column:19},end:{line:4,column:38}},"2":{start:{line:5,column:25},end:{line:5,column:56}},"3":{start:{line:6,column:16},end:{line:6,column:46}},"4":{start:{line:7,column:30},end:{line:7,column:74}},"5":{start:{line:10,column:32},end:{line:10,column:58}},"6":{start:{line:11,column:24},end:{line:11,column:65}},"7":{start:{line:12,column:8},end:{line:12,column:83}},"8":{start:{line:15,column:0},end:{line:15,column:33}},"9":{start:{line:16,column:0},end:{line:16,column:114}},"10":{start:{line:17,column:0},end:{line:19,column:2}},"11":{start:{line:20,column:0},end:{line:25,column:2}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:4},end:{line:9,column:5}},loc:{start:{line:9,column:16},end:{line:13,column:5}},line:9}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},f:{"0":0},b:{},inputSourceMap:{version:3,file:"/Users/malynch/D/tracerbench/packages/cli/src/commands/compare/analyze.ts",sources:["/Users/malynch/D/tracerbench/packages/cli/src/commands/compare/analyze.ts"],names:[],mappings:";;AAAA,6CAA6C;AAC7C,uCAAwC;AAExC,yDAAqD;AACrD,+CAK6B;AAC7B,2EAAsE;AAEtE,MAAqB,cAAe,SAAQ,8BAAa;IAahD,KAAK,CAAC,GAAG;QACd,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QACnD,MAAM,OAAO,GAAG,uBAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/C,OAAO,MAAM,uCAAiB,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;;AAjBH,iCAkBC;AAjBe,0BAAW,GACvB,oFAAoF,CAAC;AACzE,mBAAI,GAAG;IACnB,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,EAAE,mBAAmB,EAAE;CAC1E,CAAC;AACY,oBAAK,GAAG;IACpB,QAAQ,EAAE,gBAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IACtC,eAAe,EAAE,uBAAe,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IACpD,mBAAmB,EAAE,2BAAmB,EAAE;IAC1C,OAAO,EAAE,eAAO,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;CACrC,CAAC",sourcesContent:["/* eslint-disable filenames/match-exported */\nimport { readJsonSync } from \"fs-extra\";\n\nimport { TBBaseCommand } from \"../../command-config\";\nimport {\n  fidelity,\n  isCIEnv,\n  regressionThreshold,\n  tbResultsFolder,\n} from \"../../helpers/flags\";\nimport { logCompareResults } from \"../../helpers/log-compare-results\";\n\nexport default class CompareAnalyze extends TBBaseCommand {\n  public static description =\n    \"Run an analysis of a benchmark run from a results json file and output to terminal\";\n  public static args = [\n    { name: \"resultsFile\", required: true, description: \"Results JSON file\" },\n  ];\n  public static flags = {\n    fidelity: fidelity({ required: true }),\n    tbResultsFolder: tbResultsFolder({ required: true }),\n    regressionThreshold: regressionThreshold(),\n    isCIEnv: isCIEnv({ required: true }),\n  };\n\n  public async run(): Promise<string> {\n    const { args, flags } = this.parse(CompareAnalyze);\n    const results = readJsonSync(args.resultsFile);\n    return await logCompareResults(results, flags, this);\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"24386756484f46bfd43f2ad5d1f9078244667416"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_1csyqvtbq=function(){return actualCoverage;};return actualCoverage;}cov_1csyqvtbq().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});/* eslint-disable filenames/match-exported */const fs_extra_1=(cov_1csyqvtbq().s[1]++,require("fs-extra"));const command_config_1=(cov_1csyqvtbq().s[2]++,require("../../command-config"));const flags_1=(cov_1csyqvtbq().s[3]++,require("../../helpers/flags"));const log_compare_results_1=(cov_1csyqvtbq().s[4]++,require("../../helpers/log-compare-results"));class CompareAnalyze extends(command_config_1.TBBaseCommand){async run(){cov_1csyqvtbq().f[0]++;const{args,flags}=(cov_1csyqvtbq().s[5]++,this.parse(CompareAnalyze));const results=(cov_1csyqvtbq().s[6]++,fs_extra_1.readJsonSync(args.resultsFile));cov_1csyqvtbq().s[7]++;return await log_compare_results_1.logCompareResults(results,flags,this);}}cov_1csyqvtbq().s[8]++;exports.default=CompareAnalyze;cov_1csyqvtbq().s[9]++;CompareAnalyze.description="Run an analysis of a benchmark run from a results json file and output to terminal";cov_1csyqvtbq().s[10]++;CompareAnalyze.args=[{name:"resultsFile",required:true,description:"Results JSON file"}];cov_1csyqvtbq().s[11]++;CompareAnalyze.flags={fidelity:flags_1.fidelity({required:true}),tbResultsFolder:flags_1.tbResultsFolder({required:true}),regressionThreshold:flags_1.regressionThreshold(),isCIEnv:flags_1.isCIEnv({required:true})};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL21hbHluY2gvRC90cmFjZXJiZW5jaC9wYWNrYWdlcy9jbGkvc3JjL2NvbW1hbmRzL2NvbXBhcmUvYW5hbHl6ZS50cyIsInNvdXJjZXMiOlsiL1VzZXJzL21hbHluY2gvRC90cmFjZXJiZW5jaC9wYWNrYWdlcy9jbGkvc3JjL2NvbW1hbmRzL2NvbXBhcmUvYW5hbHl6ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDZDQUE2QztBQUM3Qyx1Q0FBd0M7QUFFeEMseURBQXFEO0FBQ3JELCtDQUs2QjtBQUM3QiwyRUFBc0U7QUFFdEUsTUFBcUIsY0FBZSxTQUFRLDhCQUFhO0lBYWhELEtBQUssQ0FBQyxHQUFHO1FBQ2QsTUFBTSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ25ELE1BQU0sT0FBTyxHQUFHLHVCQUFZLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQy9DLE9BQU8sTUFBTSx1Q0FBaUIsQ0FBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3ZELENBQUM7O0FBakJILGlDQWtCQztBQWpCZSwwQkFBVyxHQUN2QixvRkFBb0YsQ0FBQztBQUN6RSxtQkFBSSxHQUFHO0lBQ25CLEVBQUUsSUFBSSxFQUFFLGFBQWEsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxtQkFBbUIsRUFBRTtDQUMxRSxDQUFDO0FBQ1ksb0JBQUssR0FBRztJQUNwQixRQUFRLEVBQUUsZ0JBQVEsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQztJQUN0QyxlQUFlLEVBQUUsdUJBQWUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQztJQUNwRCxtQkFBbUIsRUFBRSwyQkFBbUIsRUFBRTtJQUMxQyxPQUFPLEVBQUUsZUFBTyxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDO0NBQ3JDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBmaWxlbmFtZXMvbWF0Y2gtZXhwb3J0ZWQgKi9cbmltcG9ydCB7IHJlYWRKc29uU3luYyB9IGZyb20gXCJmcy1leHRyYVwiO1xuXG5pbXBvcnQgeyBUQkJhc2VDb21tYW5kIH0gZnJvbSBcIi4uLy4uL2NvbW1hbmQtY29uZmlnXCI7XG5pbXBvcnQge1xuICBmaWRlbGl0eSxcbiAgaXNDSUVudixcbiAgcmVncmVzc2lvblRocmVzaG9sZCxcbiAgdGJSZXN1bHRzRm9sZGVyLFxufSBmcm9tIFwiLi4vLi4vaGVscGVycy9mbGFnc1wiO1xuaW1wb3J0IHsgbG9nQ29tcGFyZVJlc3VsdHMgfSBmcm9tIFwiLi4vLi4vaGVscGVycy9sb2ctY29tcGFyZS1yZXN1bHRzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbXBhcmVBbmFseXplIGV4dGVuZHMgVEJCYXNlQ29tbWFuZCB7XG4gIHB1YmxpYyBzdGF0aWMgZGVzY3JpcHRpb24gPVxuICAgIFwiUnVuIGFuIGFuYWx5c2lzIG9mIGEgYmVuY2htYXJrIHJ1biBmcm9tIGEgcmVzdWx0cyBqc29uIGZpbGUgYW5kIG91dHB1dCB0byB0ZXJtaW5hbFwiO1xuICBwdWJsaWMgc3RhdGljIGFyZ3MgPSBbXG4gICAgeyBuYW1lOiBcInJlc3VsdHNGaWxlXCIsIHJlcXVpcmVkOiB0cnVlLCBkZXNjcmlwdGlvbjogXCJSZXN1bHRzIEpTT04gZmlsZVwiIH0sXG4gIF07XG4gIHB1YmxpYyBzdGF0aWMgZmxhZ3MgPSB7XG4gICAgZmlkZWxpdHk6IGZpZGVsaXR5KHsgcmVxdWlyZWQ6IHRydWUgfSksXG4gICAgdGJSZXN1bHRzRm9sZGVyOiB0YlJlc3VsdHNGb2xkZXIoeyByZXF1aXJlZDogdHJ1ZSB9KSxcbiAgICByZWdyZXNzaW9uVGhyZXNob2xkOiByZWdyZXNzaW9uVGhyZXNob2xkKCksXG4gICAgaXNDSUVudjogaXNDSUVudih7IHJlcXVpcmVkOiB0cnVlIH0pLFxuICB9O1xuXG4gIHB1YmxpYyBhc3luYyBydW4oKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICBjb25zdCB7IGFyZ3MsIGZsYWdzIH0gPSB0aGlzLnBhcnNlKENvbXBhcmVBbmFseXplKTtcbiAgICBjb25zdCByZXN1bHRzID0gcmVhZEpzb25TeW5jKGFyZ3MucmVzdWx0c0ZpbGUpO1xuICAgIHJldHVybiBhd2FpdCBsb2dDb21wYXJlUmVzdWx0cyhyZXN1bHRzLCBmbGFncywgdGhpcyk7XG4gIH1cbn1cbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWx5bmNoL0QvdHJhY2VyYmVuY2gvcGFja2FnZXMvY2xpL3NyYy9jb21tYW5kcy9jb21wYXJlL2FuYWx5emUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjhtSEFBQSw2Q0FDQSxLQUFBLENBQUEsVUFBQSx5QkFBQSxPQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsQ0FFQSxLQUFBLENBQUEsZ0JBQUEseUJBQUEsT0FBQSxDQUFBLHNCQUFBLENBQUEsQ0FBQSxDQUNBLEtBQUEsQ0FBQSxPQUFBLHlCQUFBLE9BQUEsQ0FBQSxxQkFBQSxDQUFBLENBQUEsQ0FNQSxLQUFBLENBQUEscUJBQUEseUJBQUEsT0FBQSxDQUFBLG1DQUFBLENBQUEsQ0FBQSxDQUVBLEtBQXFCLENBQUEsY0FBckIsU0FBNEMsZ0JBQUEsQ0FBQSxhQUE1QyxDQUF5RCxDQWFoRCxLQUFNLENBQUEsR0FBTixFQUFTLHdCQUNkLEtBQU0sQ0FBRSxJQUFGLENBQVEsS0FBUiwwQkFBa0IsS0FBSyxLQUFMLENBQVcsY0FBWCxDQUFsQixDQUFOLENBQ0EsS0FBTSxDQUFBLE9BQU8seUJBQUcsVUFBQSxDQUFBLFlBQUEsQ0FBYSxJQUFJLENBQUMsV0FBbEIsQ0FBSCxDQUFiLENBRmMsdUJBR2QsTUFBTyxNQUFNLENBQUEscUJBQUEsQ0FBQSxpQkFBQSxDQUFrQixPQUFsQixDQUEyQixLQUEzQixDQUFrQyxJQUFsQyxDQUFiLENBQ0QsQ0FqQnNELEMsdUJBQXpELE9BQUEsQ0FBQSxPQUFBLENBQUEsY0FBQSxDLHVCQUNnQixjQUFBLENBQUEsV0FBQSxDQUNaLG9GQURZLEMsd0JBRUEsY0FBQSxDQUFBLElBQUEsQ0FBTyxDQUNuQixDQUFFLElBQUksQ0FBRSxhQUFSLENBQXVCLFFBQVEsQ0FBRSxJQUFqQyxDQUF1QyxXQUFXLENBQUUsbUJBQXBELENBRG1CLENBQVAsQyx3QkFHQSxjQUFBLENBQUEsS0FBQSxDQUFRLENBQ3BCLFFBQVEsQ0FBRSxPQUFBLENBQUEsUUFBQSxDQUFTLENBQUUsUUFBUSxDQUFFLElBQVosQ0FBVCxDQURVLENBRXBCLGVBQWUsQ0FBRSxPQUFBLENBQUEsZUFBQSxDQUFnQixDQUFFLFFBQVEsQ0FBRSxJQUFaLENBQWhCLENBRkcsQ0FHcEIsbUJBQW1CLENBQUUsT0FBQSxDQUFBLG1CQUFBLEVBSEQsQ0FJcEIsT0FBTyxDQUFFLE9BQUEsQ0FBQSxPQUFBLENBQVEsQ0FBRSxRQUFRLENBQUUsSUFBWixDQUFSLENBSlcsQ0FBUixDIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgZmlsZW5hbWVzL21hdGNoLWV4cG9ydGVkICovXG5pbXBvcnQgeyByZWFkSnNvblN5bmMgfSBmcm9tIFwiZnMtZXh0cmFcIjtcblxuaW1wb3J0IHsgVEJCYXNlQ29tbWFuZCB9IGZyb20gXCIuLi8uLi9jb21tYW5kLWNvbmZpZ1wiO1xuaW1wb3J0IHtcbiAgZmlkZWxpdHksXG4gIGlzQ0lFbnYsXG4gIHJlZ3Jlc3Npb25UaHJlc2hvbGQsXG4gIHRiUmVzdWx0c0ZvbGRlcixcbn0gZnJvbSBcIi4uLy4uL2hlbHBlcnMvZmxhZ3NcIjtcbmltcG9ydCB7IGxvZ0NvbXBhcmVSZXN1bHRzIH0gZnJvbSBcIi4uLy4uL2hlbHBlcnMvbG9nLWNvbXBhcmUtcmVzdWx0c1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb21wYXJlQW5hbHl6ZSBleHRlbmRzIFRCQmFzZUNvbW1hbmQge1xuICBwdWJsaWMgc3RhdGljIGRlc2NyaXB0aW9uID1cbiAgICBcIlJ1biBhbiBhbmFseXNpcyBvZiBhIGJlbmNobWFyayBydW4gZnJvbSBhIHJlc3VsdHMganNvbiBmaWxlIGFuZCBvdXRwdXQgdG8gdGVybWluYWxcIjtcbiAgcHVibGljIHN0YXRpYyBhcmdzID0gW1xuICAgIHsgbmFtZTogXCJyZXN1bHRzRmlsZVwiLCByZXF1aXJlZDogdHJ1ZSwgZGVzY3JpcHRpb246IFwiUmVzdWx0cyBKU09OIGZpbGVcIiB9LFxuICBdO1xuICBwdWJsaWMgc3RhdGljIGZsYWdzID0ge1xuICAgIGZpZGVsaXR5OiBmaWRlbGl0eSh7IHJlcXVpcmVkOiB0cnVlIH0pLFxuICAgIHRiUmVzdWx0c0ZvbGRlcjogdGJSZXN1bHRzRm9sZGVyKHsgcmVxdWlyZWQ6IHRydWUgfSksXG4gICAgcmVncmVzc2lvblRocmVzaG9sZDogcmVncmVzc2lvblRocmVzaG9sZCgpLFxuICAgIGlzQ0lFbnY6IGlzQ0lFbnYoeyByZXF1aXJlZDogdHJ1ZSB9KSxcbiAgfTtcblxuICBwdWJsaWMgYXN5bmMgcnVuKCk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgY29uc3QgeyBhcmdzLCBmbGFncyB9ID0gdGhpcy5wYXJzZShDb21wYXJlQW5hbHl6ZSk7XG4gICAgY29uc3QgcmVzdWx0cyA9IHJlYWRKc29uU3luYyhhcmdzLnJlc3VsdHNGaWxlKTtcbiAgICByZXR1cm4gYXdhaXQgbG9nQ29tcGFyZVJlc3VsdHMocmVzdWx0cywgZmxhZ3MsIHRoaXMpO1xuICB9XG59XG4iXX0=