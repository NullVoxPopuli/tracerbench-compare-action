"use strict";function cov_2kfdky94pf(){var path="/Users/malynch/D/tracerbench/packages/cli/src/helpers/device-settings.ts";var hash="e71a85df3cae958992d6362f0fcaded104936468";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/malynch/D/tracerbench/packages/cli/src/helpers/device-settings.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:61}},"2":{start:{line:4,column:17},end:{line:4,column:41}},"3":{start:{line:5,column:24},end:{line:5,column:50}},"4":{start:{line:6,column:16},end:{line:6,column:34}},"5":{start:{line:7,column:23},end:{line:16,column:2}},"6":{start:{line:8,column:4},end:{line:15,column:6}},"7":{start:{line:26,column:4},end:{line:44,column:5}},"8":{start:{line:27,column:8},end:{line:43,column:9}},"9":{start:{line:28,column:12},end:{line:30,column:13}},"10":{start:{line:29,column:16},end:{line:29,column:100}},"11":{start:{line:31,column:12},end:{line:42,column:14}},"12":{start:{line:45,column:4},end:{line:45,column:89}},"13":{start:{line:47,column:0},end:{line:47,column:98}},"14":{start:{line:48,column:0},end:{line:48,column:33}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:7,column:56},end:{line:7,column:57}},loc:{start:{line:7,column:66},end:{line:16,column:1}},line:7},"1":{name:"getEmulateDeviceSettingForKeyAndOrientation",decl:{start:{line:24,column:9},end:{line:24,column:52}},loc:{start:{line:24,column:84},end:{line:46,column:1}},line:24}},branchMap:{"0":{loc:{start:{line:10,column:27},end:{line:10,column:72}},type:"binary-expr",locations:[{start:{line:10,column:27},end:{line:10,column:67}},{start:{line:10,column:71},end:{line:10,column:72}}],line:10},"1":{loc:{start:{line:24,column:58},end:{line:24,column:82}},type:"default-arg",locations:[{start:{line:24,column:72},end:{line:24,column:82}}],line:24},"2":{loc:{start:{line:27,column:8},end:{line:43,column:9}},type:"if",locations:[{start:{line:27,column:8},end:{line:43,column:9}},{start:{line:27,column:8},end:{line:43,column:9}}],line:27},"3":{loc:{start:{line:28,column:12},end:{line:30,column:13}},type:"if",locations:[{start:{line:28,column:12},end:{line:30,column:13}},{start:{line:28,column:12},end:{line:30,column:13}}],line:28}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0],"2":[0,0],"3":[0,0]},inputSourceMap:{version:3,file:"/Users/malynch/D/tracerbench/packages/cli/src/helpers/device-settings.ts",sources:["/Users/malynch/D/tracerbench/packages/cli/src/helpers/device-settings.ts"],names:[],mappings:";;;AAAA,0CAAyC;AAGzC,mDAA8D;AAC9D,mCAA2C;AAgC3C,MAAM,cAAc,GAAoC,4BAAY,CAAC,GAAG,CACtE,CAAC,IAAmB,EAAE,EAAE;IACtB,OAAO;QACL,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM;QAC3B,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC;QAChE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACvD,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;QACpC,QAAQ,EAAE,wBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QAC7C,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK;KACxB,CAAC;AACJ,CAAC,CACF,CAAC;AAEF;;;;;;GAMG;AACH,SAAgB,2CAA2C,CACzD,GAAW,EACX,WAAW,GAAG,UAAU;IAExB,IAAI,aAAa,CAAC;IAElB,KAAK,aAAa,IAAI,cAAc,EAAE;QACpC,IAAI,GAAG,KAAK,aAAa,CAAC,QAAQ,EAAE;YAClC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;gBACvC,MAAM,IAAI,iBAAQ,CAChB,GAAG,WAAW,oBAAoB,GAAG,iBAAiB,CACvD,CAAC;aACH;YACD,OAAO;gBACL,qBAAqB,EAAE;oBACrB,KAAK,EAAE,aAAa,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,KAAK;oBAC/C,MAAM,EAAE,aAAa,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,MAAM;oBACjD,iBAAiB,EAAE,aAAa,CAAC,iBAAiB;oBAClD,MAAM,EAAE,aAAa,CAAC,MAAM;iBAC7B;gBACD,iBAAiB,EAAE;oBACjB,SAAS,EAAE,aAAa,CAAC,SAAS;iBACnC;gBACD,QAAQ,EAAE,aAAa,CAAC,QAAQ;aACjC,CAAC;SACH;KACF;IAED,MAAM,IAAI,iBAAQ,CAAC,kDAAkD,GAAG,EAAE,CAAC,CAAC;AAC9E,CAAC;AA7BD,kGA6BC;AAED,kBAAe,cAAc,CAAC",sourcesContent:["import { CLIError } from \"@oclif/errors\";\nimport Protocol from \"devtools-protocol\";\n\nimport { deviceLookup, IDeviceLookup } from \"./device-lookup\";\nimport { convertToTypable } from \"./utils\";\n\ninterface ScreenDimensions {\n  width: number;\n  height: number;\n}\n\nexport interface Screens {\n  horizontal: ScreenDimensions;\n  vertical?: ScreenDimensions;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n}\n\nexport interface EmulateDeviceSettingBase {\n  userAgent: string;\n  deviceScaleFactor: number;\n  mobile: boolean;\n  typeable: string;\n}\n\nexport interface EmulateDeviceSetting {\n  deviceMetricsOverride: Protocol.Emulation.SetDeviceMetricsOverrideRequest;\n  userAgentOverride: Protocol.Emulation.SetUserAgentOverrideRequest;\n  typeable: string;\n}\n\nexport interface EmulateDeviceSettingCliOption\n  extends EmulateDeviceSettingBase {\n  screens: Screens;\n}\n\nconst deviceSettings: EmulateDeviceSettingCliOption[] = deviceLookup.map(\n  (item: IDeviceLookup) => {\n    return {\n      screens: item.device.screen,\n      deviceScaleFactor: item.device.screen[\"device-pixel-ratio\"] || 0,\n      mobile: item.device.capabilities.indexOf(\"mobile\") > -1,\n      userAgent: item.device[\"user-agent\"],\n      typeable: convertToTypable(item.device.title),\n      name: item.device.title,\n    };\n  }\n);\n\n/**\n * Iterate over deviceSettings until a match is found in the option's typable field. Extract the contents into EmulateDeviceSetting\n * formatted object\n *\n * @param key - One of typeable strings such as iphone-x\n * @param orientation - Either \"vertical\" or \"horizontal\"\n */\nexport function getEmulateDeviceSettingForKeyAndOrientation(\n  key: string,\n  orientation = \"vertical\"\n): EmulateDeviceSetting {\n  let deviceSetting;\n\n  for (deviceSetting of deviceSettings) {\n    if (key === deviceSetting.typeable) {\n      if (!deviceSetting.screens[orientation]) {\n        throw new CLIError(\n          `${orientation} orientation for ${key} does not exist`\n        );\n      }\n      return {\n        deviceMetricsOverride: {\n          width: deviceSetting.screens[orientation].width,\n          height: deviceSetting.screens[orientation].height,\n          deviceScaleFactor: deviceSetting.deviceScaleFactor,\n          mobile: deviceSetting.mobile,\n        },\n        userAgentOverride: {\n          userAgent: deviceSetting.userAgent,\n        },\n        typeable: deviceSetting.typeable,\n      };\n    }\n  }\n\n  throw new CLIError(`Device emulation settings not found for device ${key}`);\n}\n\nexport default deviceSettings;\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"e71a85df3cae958992d6362f0fcaded104936468"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2kfdky94pf=function(){return actualCoverage;};}return actualCoverage;}cov_2kfdky94pf();cov_2kfdky94pf().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_2kfdky94pf().s[1]++;exports.getEmulateDeviceSettingForKeyAndOrientation=void 0;const errors_1=(cov_2kfdky94pf().s[2]++,require("@oclif/errors"));const device_lookup_1=(cov_2kfdky94pf().s[3]++,require("./device-lookup"));const utils_1=(cov_2kfdky94pf().s[4]++,require("./utils"));const deviceSettings=(cov_2kfdky94pf().s[5]++,device_lookup_1.deviceLookup.map(item=>{cov_2kfdky94pf().f[0]++;cov_2kfdky94pf().s[6]++;return{screens:item.device.screen,deviceScaleFactor:(cov_2kfdky94pf().b[0][0]++,item.device.screen["device-pixel-ratio"])||(cov_2kfdky94pf().b[0][1]++,0),mobile:item.device.capabilities.indexOf("mobile")>-1,userAgent:item.device["user-agent"],typeable:utils_1.convertToTypable(item.device.title),name:item.device.title};}));/**
 * Iterate over deviceSettings until a match is found in the option's typable field. Extract the contents into EmulateDeviceSetting
 * formatted object
 *
 * @param key - One of typeable strings such as iphone-x
 * @param orientation - Either "vertical" or "horizontal"
 */function getEmulateDeviceSettingForKeyAndOrientation(key,orientation=(cov_2kfdky94pf().b[1][0]++,"vertical")){cov_2kfdky94pf().f[1]++;let deviceSetting;cov_2kfdky94pf().s[7]++;for(deviceSetting of deviceSettings){cov_2kfdky94pf().s[8]++;if(key===deviceSetting.typeable){cov_2kfdky94pf().b[2][0]++;cov_2kfdky94pf().s[9]++;if(!deviceSetting.screens[orientation]){cov_2kfdky94pf().b[3][0]++;cov_2kfdky94pf().s[10]++;throw new errors_1.CLIError(`${orientation} orientation for ${key} does not exist`);}else{cov_2kfdky94pf().b[3][1]++;}cov_2kfdky94pf().s[11]++;return{deviceMetricsOverride:{width:deviceSetting.screens[orientation].width,height:deviceSetting.screens[orientation].height,deviceScaleFactor:deviceSetting.deviceScaleFactor,mobile:deviceSetting.mobile},userAgentOverride:{userAgent:deviceSetting.userAgent},typeable:deviceSetting.typeable};}else{cov_2kfdky94pf().b[2][1]++;}}cov_2kfdky94pf().s[12]++;throw new errors_1.CLIError(`Device emulation settings not found for device ${key}`);}cov_2kfdky94pf().s[13]++;exports.getEmulateDeviceSettingForKeyAndOrientation=getEmulateDeviceSettingForKeyAndOrientation;cov_2kfdky94pf().s[14]++;exports.default=deviceSettings;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL21hbHluY2gvRC90cmFjZXJiZW5jaC9wYWNrYWdlcy9jbGkvc3JjL2hlbHBlcnMvZGV2aWNlLXNldHRpbmdzLnRzIiwic291cmNlcyI6WyIvVXNlcnMvbWFseW5jaC9EL3RyYWNlcmJlbmNoL3BhY2thZ2VzL2NsaS9zcmMvaGVscGVycy9kZXZpY2Utc2V0dGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMENBQXlDO0FBR3pDLG1EQUE4RDtBQUM5RCxtQ0FBMkM7QUFnQzNDLE1BQU0sY0FBYyxHQUFvQyw0QkFBWSxDQUFDLEdBQUcsQ0FDdEUsQ0FBQyxJQUFtQixFQUFFLEVBQUU7SUFDdEIsT0FBTztRQUNMLE9BQU8sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU07UUFDM0IsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDO1FBQ2hFLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3ZELFNBQVMsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQztRQUNwQyxRQUFRLEVBQUUsd0JBQWdCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFDN0MsSUFBSSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSztLQUN4QixDQUFDO0FBQ0osQ0FBQyxDQUNGLENBQUM7QUFFRjs7Ozs7O0dBTUc7QUFDSCxTQUFnQiwyQ0FBMkMsQ0FDekQsR0FBVyxFQUNYLFdBQVcsR0FBRyxVQUFVO0lBRXhCLElBQUksYUFBYSxDQUFDO0lBRWxCLEtBQUssYUFBYSxJQUFJLGNBQWMsRUFBRTtRQUNwQyxJQUFJLEdBQUcsS0FBSyxhQUFhLENBQUMsUUFBUSxFQUFFO1lBQ2xDLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxFQUFFO2dCQUN2QyxNQUFNLElBQUksaUJBQVEsQ0FDaEIsR0FBRyxXQUFXLG9CQUFvQixHQUFHLGlCQUFpQixDQUN2RCxDQUFDO2FBQ0g7WUFDRCxPQUFPO2dCQUNMLHFCQUFxQixFQUFFO29CQUNyQixLQUFLLEVBQUUsYUFBYSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxLQUFLO29CQUMvQyxNQUFNLEVBQUUsYUFBYSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxNQUFNO29CQUNqRCxpQkFBaUIsRUFBRSxhQUFhLENBQUMsaUJBQWlCO29CQUNsRCxNQUFNLEVBQUUsYUFBYSxDQUFDLE1BQU07aUJBQzdCO2dCQUNELGlCQUFpQixFQUFFO29CQUNqQixTQUFTLEVBQUUsYUFBYSxDQUFDLFNBQVM7aUJBQ25DO2dCQUNELFFBQVEsRUFBRSxhQUFhLENBQUMsUUFBUTthQUNqQyxDQUFDO1NBQ0g7S0FDRjtJQUVELE1BQU0sSUFBSSxpQkFBUSxDQUFDLGtEQUFrRCxHQUFHLEVBQUUsQ0FBQyxDQUFDO0FBQzlFLENBQUM7QUE3QkQsa0dBNkJDO0FBRUQsa0JBQWUsY0FBYyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ0xJRXJyb3IgfSBmcm9tIFwiQG9jbGlmL2Vycm9yc1wiO1xuaW1wb3J0IFByb3RvY29sIGZyb20gXCJkZXZ0b29scy1wcm90b2NvbFwiO1xuXG5pbXBvcnQgeyBkZXZpY2VMb29rdXAsIElEZXZpY2VMb29rdXAgfSBmcm9tIFwiLi9kZXZpY2UtbG9va3VwXCI7XG5pbXBvcnQgeyBjb252ZXJ0VG9UeXBhYmxlIH0gZnJvbSBcIi4vdXRpbHNcIjtcblxuaW50ZXJmYWNlIFNjcmVlbkRpbWVuc2lvbnMge1xuICB3aWR0aDogbnVtYmVyO1xuICBoZWlnaHQ6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTY3JlZW5zIHtcbiAgaG9yaXpvbnRhbDogU2NyZWVuRGltZW5zaW9ucztcbiAgdmVydGljYWw/OiBTY3JlZW5EaW1lbnNpb25zO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICBba2V5OiBzdHJpbmddOiBhbnk7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRW11bGF0ZURldmljZVNldHRpbmdCYXNlIHtcbiAgdXNlckFnZW50OiBzdHJpbmc7XG4gIGRldmljZVNjYWxlRmFjdG9yOiBudW1iZXI7XG4gIG1vYmlsZTogYm9vbGVhbjtcbiAgdHlwZWFibGU6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBFbXVsYXRlRGV2aWNlU2V0dGluZyB7XG4gIGRldmljZU1ldHJpY3NPdmVycmlkZTogUHJvdG9jb2wuRW11bGF0aW9uLlNldERldmljZU1ldHJpY3NPdmVycmlkZVJlcXVlc3Q7XG4gIHVzZXJBZ2VudE92ZXJyaWRlOiBQcm90b2NvbC5FbXVsYXRpb24uU2V0VXNlckFnZW50T3ZlcnJpZGVSZXF1ZXN0O1xuICB0eXBlYWJsZTogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEVtdWxhdGVEZXZpY2VTZXR0aW5nQ2xpT3B0aW9uXG4gIGV4dGVuZHMgRW11bGF0ZURldmljZVNldHRpbmdCYXNlIHtcbiAgc2NyZWVuczogU2NyZWVucztcbn1cblxuY29uc3QgZGV2aWNlU2V0dGluZ3M6IEVtdWxhdGVEZXZpY2VTZXR0aW5nQ2xpT3B0aW9uW10gPSBkZXZpY2VMb29rdXAubWFwKFxuICAoaXRlbTogSURldmljZUxvb2t1cCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICBzY3JlZW5zOiBpdGVtLmRldmljZS5zY3JlZW4sXG4gICAgICBkZXZpY2VTY2FsZUZhY3RvcjogaXRlbS5kZXZpY2Uuc2NyZWVuW1wiZGV2aWNlLXBpeGVsLXJhdGlvXCJdIHx8IDAsXG4gICAgICBtb2JpbGU6IGl0ZW0uZGV2aWNlLmNhcGFiaWxpdGllcy5pbmRleE9mKFwibW9iaWxlXCIpID4gLTEsXG4gICAgICB1c2VyQWdlbnQ6IGl0ZW0uZGV2aWNlW1widXNlci1hZ2VudFwiXSxcbiAgICAgIHR5cGVhYmxlOiBjb252ZXJ0VG9UeXBhYmxlKGl0ZW0uZGV2aWNlLnRpdGxlKSxcbiAgICAgIG5hbWU6IGl0ZW0uZGV2aWNlLnRpdGxlLFxuICAgIH07XG4gIH1cbik7XG5cbi8qKlxuICogSXRlcmF0ZSBvdmVyIGRldmljZVNldHRpbmdzIHVudGlsIGEgbWF0Y2ggaXMgZm91bmQgaW4gdGhlIG9wdGlvbidzIHR5cGFibGUgZmllbGQuIEV4dHJhY3QgdGhlIGNvbnRlbnRzIGludG8gRW11bGF0ZURldmljZVNldHRpbmdcbiAqIGZvcm1hdHRlZCBvYmplY3RcbiAqXG4gKiBAcGFyYW0ga2V5IC0gT25lIG9mIHR5cGVhYmxlIHN0cmluZ3Mgc3VjaCBhcyBpcGhvbmUteFxuICogQHBhcmFtIG9yaWVudGF0aW9uIC0gRWl0aGVyIFwidmVydGljYWxcIiBvciBcImhvcml6b250YWxcIlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0RW11bGF0ZURldmljZVNldHRpbmdGb3JLZXlBbmRPcmllbnRhdGlvbihcbiAga2V5OiBzdHJpbmcsXG4gIG9yaWVudGF0aW9uID0gXCJ2ZXJ0aWNhbFwiXG4pOiBFbXVsYXRlRGV2aWNlU2V0dGluZyB7XG4gIGxldCBkZXZpY2VTZXR0aW5nO1xuXG4gIGZvciAoZGV2aWNlU2V0dGluZyBvZiBkZXZpY2VTZXR0aW5ncykge1xuICAgIGlmIChrZXkgPT09IGRldmljZVNldHRpbmcudHlwZWFibGUpIHtcbiAgICAgIGlmICghZGV2aWNlU2V0dGluZy5zY3JlZW5zW29yaWVudGF0aW9uXSkge1xuICAgICAgICB0aHJvdyBuZXcgQ0xJRXJyb3IoXG4gICAgICAgICAgYCR7b3JpZW50YXRpb259IG9yaWVudGF0aW9uIGZvciAke2tleX0gZG9lcyBub3QgZXhpc3RgXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICByZXR1cm4ge1xuICAgICAgICBkZXZpY2VNZXRyaWNzT3ZlcnJpZGU6IHtcbiAgICAgICAgICB3aWR0aDogZGV2aWNlU2V0dGluZy5zY3JlZW5zW29yaWVudGF0aW9uXS53aWR0aCxcbiAgICAgICAgICBoZWlnaHQ6IGRldmljZVNldHRpbmcuc2NyZWVuc1tvcmllbnRhdGlvbl0uaGVpZ2h0LFxuICAgICAgICAgIGRldmljZVNjYWxlRmFjdG9yOiBkZXZpY2VTZXR0aW5nLmRldmljZVNjYWxlRmFjdG9yLFxuICAgICAgICAgIG1vYmlsZTogZGV2aWNlU2V0dGluZy5tb2JpbGUsXG4gICAgICAgIH0sXG4gICAgICAgIHVzZXJBZ2VudE92ZXJyaWRlOiB7XG4gICAgICAgICAgdXNlckFnZW50OiBkZXZpY2VTZXR0aW5nLnVzZXJBZ2VudCxcbiAgICAgICAgfSxcbiAgICAgICAgdHlwZWFibGU6IGRldmljZVNldHRpbmcudHlwZWFibGUsXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIHRocm93IG5ldyBDTElFcnJvcihgRGV2aWNlIGVtdWxhdGlvbiBzZXR0aW5ncyBub3QgZm91bmQgZm9yIGRldmljZSAke2tleX1gKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZGV2aWNlU2V0dGluZ3M7XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWx5bmNoL0QvdHJhY2VyYmVuY2gvcGFja2FnZXMvY2xpL3NyYy9oZWxwZXJzL2RldmljZS1zZXR0aW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoieWxOQStDRTsrUEEvQ0YsS0FBQSxDQUFBLFFBQUEsMEJBQUEsT0FBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBLENBR0EsS0FBQSxDQUFBLGVBQUEsMEJBQUEsT0FBQSxDQUFBLGlCQUFBLENBQUEsQ0FBQSxDQUNBLEtBQUEsQ0FBQSxPQUFBLDBCQUFBLE9BQUEsQ0FBQSxTQUFBLENBQUEsQ0FBQSxDQWdDQSxLQUFNLENBQUEsY0FBYywwQkFBb0MsZUFBQSxDQUFBLFlBQUEsQ0FBYSxHQUFiLENBQ3JELElBQUQsRUFBd0IsaURBQ3RCLE1BQU8sQ0FDTCxPQUFPLENBQUUsSUFBSSxDQUFDLE1BQUwsQ0FBWSxNQURoQixDQUVMLGlCQUFpQixDQUFFLDRCQUFBLElBQUksQ0FBQyxNQUFMLENBQVksTUFBWixDQUFtQixvQkFBbkIsZ0NBQTRDLENBQTVDLENBRmQsQ0FHTCxNQUFNLENBQUUsSUFBSSxDQUFDLE1BQUwsQ0FBWSxZQUFaLENBQXlCLE9BQXpCLENBQWlDLFFBQWpDLEVBQTZDLENBQUMsQ0FIakQsQ0FJTCxTQUFTLENBQUUsSUFBSSxDQUFDLE1BQUwsQ0FBWSxZQUFaLENBSk4sQ0FLTCxRQUFRLENBQUUsT0FBQSxDQUFBLGdCQUFBLENBQWlCLElBQUksQ0FBQyxNQUFMLENBQVksS0FBN0IsQ0FMTCxDQU1MLElBQUksQ0FBRSxJQUFJLENBQUMsTUFBTCxDQUFZLEtBTmIsQ0FBUCxDQVFELENBVnFELENBQXBDLENBQXBCLENBYUE7Ozs7OztHQU9BLFFBQWdCLENBQUEsMkNBQWhCLENBQ0UsR0FERixDQUVFLFdBQVcsNkJBQUcsVUFBSCxDQUZiLENBRTBCLHlCQUV4QixHQUFJLENBQUEsYUFBSixDQUZ3Qix3QkFJeEIsSUFBSyxhQUFMLEdBQXNCLENBQUEsY0FBdEIsQ0FBc0MseUJBQ3BDLEdBQUksR0FBRyxHQUFLLGFBQWEsQ0FBQyxRQUExQixDQUFvQyxvREFDbEMsR0FBSSxDQUFDLGFBQWEsQ0FBQyxPQUFkLENBQXNCLFdBQXRCLENBQUwsQ0FBeUMscURBQ3ZDLEtBQU0sSUFBSSxDQUFBLFFBQUEsQ0FBQSxRQUFKLENBQ0osR0FBRyxXQUFXLG9CQUFvQixHQUFHLGlCQURqQyxDQUFOLENBR0QsQ0FKRCxpQ0FEa0MseUJBTWxDLE1BQU8sQ0FDTCxxQkFBcUIsQ0FBRSxDQUNyQixLQUFLLENBQUUsYUFBYSxDQUFDLE9BQWQsQ0FBc0IsV0FBdEIsRUFBbUMsS0FEckIsQ0FFckIsTUFBTSxDQUFFLGFBQWEsQ0FBQyxPQUFkLENBQXNCLFdBQXRCLEVBQW1DLE1BRnRCLENBR3JCLGlCQUFpQixDQUFFLGFBQWEsQ0FBQyxpQkFIWixDQUlyQixNQUFNLENBQUUsYUFBYSxDQUFDLE1BSkQsQ0FEbEIsQ0FPTCxpQkFBaUIsQ0FBRSxDQUNqQixTQUFTLENBQUUsYUFBYSxDQUFDLFNBRFIsQ0FQZCxDQVVMLFFBQVEsQ0FBRSxhQUFhLENBQUMsUUFWbkIsQ0FBUCxDQVlELENBbEJELGlDQW1CRCxDQXhCdUIseUJBMEJ4QixLQUFNLElBQUksQ0FBQSxRQUFBLENBQUEsUUFBSixDQUFhLGtEQUFrRCxHQUFHLEVBQWxFLENBQU4sQ0FDRCxDLHlCQTdCRCxPQUFBLENBQUEsMkNBQUEsQ0FBQSwyQ0FBQSxDLHlCQStCQSxPQUFBLENBQUEsT0FBQSxDQUFlLGNBQWYsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENMSUVycm9yIH0gZnJvbSBcIkBvY2xpZi9lcnJvcnNcIjtcbmltcG9ydCBQcm90b2NvbCBmcm9tIFwiZGV2dG9vbHMtcHJvdG9jb2xcIjtcblxuaW1wb3J0IHsgZGV2aWNlTG9va3VwLCBJRGV2aWNlTG9va3VwIH0gZnJvbSBcIi4vZGV2aWNlLWxvb2t1cFwiO1xuaW1wb3J0IHsgY29udmVydFRvVHlwYWJsZSB9IGZyb20gXCIuL3V0aWxzXCI7XG5cbmludGVyZmFjZSBTY3JlZW5EaW1lbnNpb25zIHtcbiAgd2lkdGg6IG51bWJlcjtcbiAgaGVpZ2h0OiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2NyZWVucyB7XG4gIGhvcml6b250YWw6IFNjcmVlbkRpbWVuc2lvbnM7XG4gIHZlcnRpY2FsPzogU2NyZWVuRGltZW5zaW9ucztcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgW2tleTogc3RyaW5nXTogYW55O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEVtdWxhdGVEZXZpY2VTZXR0aW5nQmFzZSB7XG4gIHVzZXJBZ2VudDogc3RyaW5nO1xuICBkZXZpY2VTY2FsZUZhY3RvcjogbnVtYmVyO1xuICBtb2JpbGU6IGJvb2xlYW47XG4gIHR5cGVhYmxlOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRW11bGF0ZURldmljZVNldHRpbmcge1xuICBkZXZpY2VNZXRyaWNzT3ZlcnJpZGU6IFByb3RvY29sLkVtdWxhdGlvbi5TZXREZXZpY2VNZXRyaWNzT3ZlcnJpZGVSZXF1ZXN0O1xuICB1c2VyQWdlbnRPdmVycmlkZTogUHJvdG9jb2wuRW11bGF0aW9uLlNldFVzZXJBZ2VudE92ZXJyaWRlUmVxdWVzdDtcbiAgdHlwZWFibGU6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBFbXVsYXRlRGV2aWNlU2V0dGluZ0NsaU9wdGlvblxuICBleHRlbmRzIEVtdWxhdGVEZXZpY2VTZXR0aW5nQmFzZSB7XG4gIHNjcmVlbnM6IFNjcmVlbnM7XG59XG5cbmNvbnN0IGRldmljZVNldHRpbmdzOiBFbXVsYXRlRGV2aWNlU2V0dGluZ0NsaU9wdGlvbltdID0gZGV2aWNlTG9va3VwLm1hcChcbiAgKGl0ZW06IElEZXZpY2VMb29rdXApID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgc2NyZWVuczogaXRlbS5kZXZpY2Uuc2NyZWVuLFxuICAgICAgZGV2aWNlU2NhbGVGYWN0b3I6IGl0ZW0uZGV2aWNlLnNjcmVlbltcImRldmljZS1waXhlbC1yYXRpb1wiXSB8fCAwLFxuICAgICAgbW9iaWxlOiBpdGVtLmRldmljZS5jYXBhYmlsaXRpZXMuaW5kZXhPZihcIm1vYmlsZVwiKSA+IC0xLFxuICAgICAgdXNlckFnZW50OiBpdGVtLmRldmljZVtcInVzZXItYWdlbnRcIl0sXG4gICAgICB0eXBlYWJsZTogY29udmVydFRvVHlwYWJsZShpdGVtLmRldmljZS50aXRsZSksXG4gICAgICBuYW1lOiBpdGVtLmRldmljZS50aXRsZSxcbiAgICB9O1xuICB9XG4pO1xuXG4vKipcbiAqIEl0ZXJhdGUgb3ZlciBkZXZpY2VTZXR0aW5ncyB1bnRpbCBhIG1hdGNoIGlzIGZvdW5kIGluIHRoZSBvcHRpb24ncyB0eXBhYmxlIGZpZWxkLiBFeHRyYWN0IHRoZSBjb250ZW50cyBpbnRvIEVtdWxhdGVEZXZpY2VTZXR0aW5nXG4gKiBmb3JtYXR0ZWQgb2JqZWN0XG4gKlxuICogQHBhcmFtIGtleSAtIE9uZSBvZiB0eXBlYWJsZSBzdHJpbmdzIHN1Y2ggYXMgaXBob25lLXhcbiAqIEBwYXJhbSBvcmllbnRhdGlvbiAtIEVpdGhlciBcInZlcnRpY2FsXCIgb3IgXCJob3Jpem9udGFsXCJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEVtdWxhdGVEZXZpY2VTZXR0aW5nRm9yS2V5QW5kT3JpZW50YXRpb24oXG4gIGtleTogc3RyaW5nLFxuICBvcmllbnRhdGlvbiA9IFwidmVydGljYWxcIlxuKTogRW11bGF0ZURldmljZVNldHRpbmcge1xuICBsZXQgZGV2aWNlU2V0dGluZztcblxuICBmb3IgKGRldmljZVNldHRpbmcgb2YgZGV2aWNlU2V0dGluZ3MpIHtcbiAgICBpZiAoa2V5ID09PSBkZXZpY2VTZXR0aW5nLnR5cGVhYmxlKSB7XG4gICAgICBpZiAoIWRldmljZVNldHRpbmcuc2NyZWVuc1tvcmllbnRhdGlvbl0pIHtcbiAgICAgICAgdGhyb3cgbmV3IENMSUVycm9yKFxuICAgICAgICAgIGAke29yaWVudGF0aW9ufSBvcmllbnRhdGlvbiBmb3IgJHtrZXl9IGRvZXMgbm90IGV4aXN0YFxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZGV2aWNlTWV0cmljc092ZXJyaWRlOiB7XG4gICAgICAgICAgd2lkdGg6IGRldmljZVNldHRpbmcuc2NyZWVuc1tvcmllbnRhdGlvbl0ud2lkdGgsXG4gICAgICAgICAgaGVpZ2h0OiBkZXZpY2VTZXR0aW5nLnNjcmVlbnNbb3JpZW50YXRpb25dLmhlaWdodCxcbiAgICAgICAgICBkZXZpY2VTY2FsZUZhY3RvcjogZGV2aWNlU2V0dGluZy5kZXZpY2VTY2FsZUZhY3RvcixcbiAgICAgICAgICBtb2JpbGU6IGRldmljZVNldHRpbmcubW9iaWxlLFxuICAgICAgICB9LFxuICAgICAgICB1c2VyQWdlbnRPdmVycmlkZToge1xuICAgICAgICAgIHVzZXJBZ2VudDogZGV2aWNlU2V0dGluZy51c2VyQWdlbnQsXG4gICAgICAgIH0sXG4gICAgICAgIHR5cGVhYmxlOiBkZXZpY2VTZXR0aW5nLnR5cGVhYmxlLFxuICAgICAgfTtcbiAgICB9XG4gIH1cblxuICB0aHJvdyBuZXcgQ0xJRXJyb3IoYERldmljZSBlbXVsYXRpb24gc2V0dGluZ3Mgbm90IGZvdW5kIGZvciBkZXZpY2UgJHtrZXl9YCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGRldmljZVNldHRpbmdzO1xuIl19