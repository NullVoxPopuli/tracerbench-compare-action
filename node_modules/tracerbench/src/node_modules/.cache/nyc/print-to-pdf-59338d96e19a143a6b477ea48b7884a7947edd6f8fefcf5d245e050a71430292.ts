"use strict";function cov_1gmj5dnhe7(){var path="/Users/malynch/D/tracerbench/packages/cli/src/helpers/print-to-pdf.ts";var hash="2aaa9957711076a1e2ee19d93e55e21ffc50f3fe";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/malynch/D/tracerbench/packages/cli/src/helpers/print-to-pdf.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:34},end:{line:3,column:68}},"2":{start:{line:4,column:19},end:{line:4,column:38}},"3":{start:{line:5,column:12},end:{line:5,column:26}},"4":{start:{line:14,column:20},end:{line:14,column:66}},"5":{start:{line:15,column:19},end:{line:15,column:76}},"6":{start:{line:16,column:4},end:{line:34,column:5}},"7":{start:{line:17,column:24},end:{line:17,column:41}},"8":{start:{line:18,column:29},end:{line:20,column:10}},"9":{start:{line:21,column:21},end:{line:21,column:59}},"10":{start:{line:22,column:8},end:{line:22,column:39}},"11":{start:{line:23,column:8},end:{line:26,column:11}},"12":{start:{line:27,column:25},end:{line:27,column:63}},"13":{start:{line:28,column:8},end:{line:28,column:74}},"14":{start:{line:29,column:8},end:{line:29,column:29}},"15":{start:{line:32,column:8},end:{line:32,column:29}},"16":{start:{line:33,column:8},end:{line:33,column:31}},"17":{start:{line:35,column:4},end:{line:35,column:11}},"18":{start:{line:37,column:0},end:{line:37,column:29}}},fnMap:{"0":{name:"printToPDF",decl:{start:{line:13,column:15},end:{line:13,column:25}},loc:{start:{line:13,column:43},end:{line:36,column:1}},line:13}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},f:{"0":0},b:{},inputSourceMap:{version:3,file:"/Users/malynch/D/tracerbench/packages/cli/src/helpers/print-to-pdf.ts",sources:["/Users/malynch/D/tracerbench/packages/cli/src/helpers/print-to-pdf.ts"],names:[],mappings:";;AAAA,qEAAsD;AACtD,uCAAyC;AACzC,2BAA2B;AAE3B;;;;;;GAMG;AACY,KAAK,UAAU,UAAU,CACtC,GAAW,EACX,UAAkB;IAElB,MAAM,OAAO,GAAG,GAAG,CAAC,iCAAiC,CAAC,CAAC,KAAK,EAAE,CAAC;IAC/D,MAAM,MAAM,GAAG,qCAAW,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;IAC/C,IAAI;QACF,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC;QAClC,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC,qBAAqB,EAAE;YAC7D,GAAG,EAAE,aAAa;SACnB,CAAC,CAAC;QACH,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QAEpD,MAAM,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC/B,MAAM,OAAO,CAAC,GAAG,CAAC;YAChB,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC;YACjC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,GAAG,EAAE,CAAC;SACpC,CAAC,CAAC;QACH,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;QAExD,wBAAa,CAAC,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;QAEvD,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;KACtB;YAAS;QACR,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC;QACrB,MAAM,MAAM,CAAC,OAAO,EAAE,CAAC;KACxB;IACD,OAAO;AACT,CAAC;AA5BD,6BA4BC",sourcesContent:["import { spawnChrome } from \"chrome-debugging-client\";\nimport { writeFileSync } from \"fs-extra\";\nimport * as ora from \"ora\";\n\n/**\n * Spawn a chrome process and visit the given url. Wait until page load event is fired\n * and then create PDF.\n *\n * @param url - URL of page for chrome to visit\n * @param outputPath - Output pdf to this file\n */\nexport default async function printToPDF(\n  url: string,\n  outputPath: string\n): Promise<void> {\n  const spinner = ora(\"\\n Generating Benchmark Reports\").start();\n  const chrome = spawnChrome({ headless: true });\n  try {\n    const browser = chrome.connection;\n    const { targetId } = await browser.send(\"Target.createTarget\", {\n      url: \"about:blank\",\n    });\n    const page = await browser.attachToTarget(targetId);\n\n    await page.send(\"Page.enable\");\n    await Promise.all([\n      page.until(\"Page.loadEventFired\"),\n      page.send(\"Page.navigate\", { url }),\n    ]);\n    const { data } = await page.send(\"Page.printToPDF\", {});\n\n    writeFileSync(outputPath, Buffer.from(data, \"base64\"));\n\n    await chrome.close();\n  } finally {\n    await spinner.stop();\n    await chrome.dispose();\n  }\n  return;\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"2aaa9957711076a1e2ee19d93e55e21ffc50f3fe"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_1gmj5dnhe7=function(){return actualCoverage;};return actualCoverage;}cov_1gmj5dnhe7().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const chrome_debugging_client_1=(cov_1gmj5dnhe7().s[1]++,require("chrome-debugging-client"));const fs_extra_1=(cov_1gmj5dnhe7().s[2]++,require("fs-extra"));const ora=(cov_1gmj5dnhe7().s[3]++,require("ora"));/**
 * Spawn a chrome process and visit the given url. Wait until page load event is fired
 * and then create PDF.
 *
 * @param url - URL of page for chrome to visit
 * @param outputPath - Output pdf to this file
 */async function printToPDF(url,outputPath){cov_1gmj5dnhe7().f[0]++;const spinner=(cov_1gmj5dnhe7().s[4]++,ora("\n Generating Benchmark Reports").start());const chrome=(cov_1gmj5dnhe7().s[5]++,chrome_debugging_client_1.spawnChrome({headless:true}));cov_1gmj5dnhe7().s[6]++;try{const browser=(cov_1gmj5dnhe7().s[7]++,chrome.connection);const{targetId}=(cov_1gmj5dnhe7().s[8]++,await browser.send("Target.createTarget",{url:"about:blank"}));const page=(cov_1gmj5dnhe7().s[9]++,await browser.attachToTarget(targetId));cov_1gmj5dnhe7().s[10]++;await page.send("Page.enable");cov_1gmj5dnhe7().s[11]++;await Promise.all([page.until("Page.loadEventFired"),page.send("Page.navigate",{url})]);const{data}=(cov_1gmj5dnhe7().s[12]++,await page.send("Page.printToPDF",{}));cov_1gmj5dnhe7().s[13]++;fs_extra_1.writeFileSync(outputPath,Buffer.from(data,"base64"));cov_1gmj5dnhe7().s[14]++;await chrome.close();}finally{cov_1gmj5dnhe7().s[15]++;await spinner.stop();cov_1gmj5dnhe7().s[16]++;await chrome.dispose();}cov_1gmj5dnhe7().s[17]++;return;}cov_1gmj5dnhe7().s[18]++;exports.default=printToPDF;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL21hbHluY2gvRC90cmFjZXJiZW5jaC9wYWNrYWdlcy9jbGkvc3JjL2hlbHBlcnMvcHJpbnQtdG8tcGRmLnRzIiwic291cmNlcyI6WyIvVXNlcnMvbWFseW5jaC9EL3RyYWNlcmJlbmNoL3BhY2thZ2VzL2NsaS9zcmMvaGVscGVycy9wcmludC10by1wZGYudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxxRUFBc0Q7QUFDdEQsdUNBQXlDO0FBQ3pDLDJCQUEyQjtBQUUzQjs7Ozs7O0dBTUc7QUFDWSxLQUFLLFVBQVUsVUFBVSxDQUN0QyxHQUFXLEVBQ1gsVUFBa0I7SUFFbEIsTUFBTSxPQUFPLEdBQUcsR0FBRyxDQUFDLGlDQUFpQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDL0QsTUFBTSxNQUFNLEdBQUcscUNBQVcsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQy9DLElBQUk7UUFDRixNQUFNLE9BQU8sR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDO1FBQ2xDLE1BQU0sRUFBRSxRQUFRLEVBQUUsR0FBRyxNQUFNLE9BQU8sQ0FBQyxJQUFJLENBQUMscUJBQXFCLEVBQUU7WUFDN0QsR0FBRyxFQUFFLGFBQWE7U0FDbkIsQ0FBQyxDQUFDO1FBQ0gsTUFBTSxJQUFJLEdBQUcsTUFBTSxPQUFPLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBRXBELE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUMvQixNQUFNLE9BQU8sQ0FBQyxHQUFHLENBQUM7WUFDaEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQztZQUNqQyxJQUFJLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDO1NBQ3BDLENBQUMsQ0FBQztRQUNILE1BQU0sRUFBRSxJQUFJLEVBQUUsR0FBRyxNQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFFeEQsd0JBQWEsQ0FBQyxVQUFVLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUV2RCxNQUFNLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQztLQUN0QjtZQUFTO1FBQ1IsTUFBTSxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDckIsTUFBTSxNQUFNLENBQUMsT0FBTyxFQUFFLENBQUM7S0FDeEI7SUFDRCxPQUFPO0FBQ1QsQ0FBQztBQTVCRCw2QkE0QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzcGF3bkNocm9tZSB9IGZyb20gXCJjaHJvbWUtZGVidWdnaW5nLWNsaWVudFwiO1xuaW1wb3J0IHsgd3JpdGVGaWxlU3luYyB9IGZyb20gXCJmcy1leHRyYVwiO1xuaW1wb3J0ICogYXMgb3JhIGZyb20gXCJvcmFcIjtcblxuLyoqXG4gKiBTcGF3biBhIGNocm9tZSBwcm9jZXNzIGFuZCB2aXNpdCB0aGUgZ2l2ZW4gdXJsLiBXYWl0IHVudGlsIHBhZ2UgbG9hZCBldmVudCBpcyBmaXJlZFxuICogYW5kIHRoZW4gY3JlYXRlIFBERi5cbiAqXG4gKiBAcGFyYW0gdXJsIC0gVVJMIG9mIHBhZ2UgZm9yIGNocm9tZSB0byB2aXNpdFxuICogQHBhcmFtIG91dHB1dFBhdGggLSBPdXRwdXQgcGRmIHRvIHRoaXMgZmlsZVxuICovXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBwcmludFRvUERGKFxuICB1cmw6IHN0cmluZyxcbiAgb3V0cHV0UGF0aDogc3RyaW5nXG4pOiBQcm9taXNlPHZvaWQ+IHtcbiAgY29uc3Qgc3Bpbm5lciA9IG9yYShcIlxcbiBHZW5lcmF0aW5nIEJlbmNobWFyayBSZXBvcnRzXCIpLnN0YXJ0KCk7XG4gIGNvbnN0IGNocm9tZSA9IHNwYXduQ2hyb21lKHsgaGVhZGxlc3M6IHRydWUgfSk7XG4gIHRyeSB7XG4gICAgY29uc3QgYnJvd3NlciA9IGNocm9tZS5jb25uZWN0aW9uO1xuICAgIGNvbnN0IHsgdGFyZ2V0SWQgfSA9IGF3YWl0IGJyb3dzZXIuc2VuZChcIlRhcmdldC5jcmVhdGVUYXJnZXRcIiwge1xuICAgICAgdXJsOiBcImFib3V0OmJsYW5rXCIsXG4gICAgfSk7XG4gICAgY29uc3QgcGFnZSA9IGF3YWl0IGJyb3dzZXIuYXR0YWNoVG9UYXJnZXQodGFyZ2V0SWQpO1xuXG4gICAgYXdhaXQgcGFnZS5zZW5kKFwiUGFnZS5lbmFibGVcIik7XG4gICAgYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgcGFnZS51bnRpbChcIlBhZ2UubG9hZEV2ZW50RmlyZWRcIiksXG4gICAgICBwYWdlLnNlbmQoXCJQYWdlLm5hdmlnYXRlXCIsIHsgdXJsIH0pLFxuICAgIF0pO1xuICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgcGFnZS5zZW5kKFwiUGFnZS5wcmludFRvUERGXCIsIHt9KTtcblxuICAgIHdyaXRlRmlsZVN5bmMob3V0cHV0UGF0aCwgQnVmZmVyLmZyb20oZGF0YSwgXCJiYXNlNjRcIikpO1xuXG4gICAgYXdhaXQgY2hyb21lLmNsb3NlKCk7XG4gIH0gZmluYWxseSB7XG4gICAgYXdhaXQgc3Bpbm5lci5zdG9wKCk7XG4gICAgYXdhaXQgY2hyb21lLmRpc3Bvc2UoKTtcbiAgfVxuICByZXR1cm47XG59XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWx5bmNoL0QvdHJhY2VyYmVuY2gvcGFja2FnZXMvY2xpL3NyYy9oZWxwZXJzL3ByaW50LXRvLXBkZi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiNDVJQUFBLEtBQUEsQ0FBQSx5QkFBQSwwQkFBQSxPQUFBLENBQUEseUJBQUEsQ0FBQSxDQUFBLENBQ0EsS0FBQSxDQUFBLFVBQUEsMEJBQUEsT0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBLENBQ0EsS0FBQSxDQUFBLEdBQUEsMEJBQUEsT0FBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBLENBRUE7Ozs7OztHQU9lLGNBQWUsQ0FBQSxVQUFmLENBQ2IsR0FEYSxDQUViLFVBRmEsQ0FFSyx5QkFFbEIsS0FBTSxDQUFBLE9BQU8sMEJBQUcsR0FBRyxDQUFDLGlDQUFELENBQUgsQ0FBdUMsS0FBdkMsRUFBSCxDQUFiLENBQ0EsS0FBTSxDQUFBLE1BQU0sMEJBQUcseUJBQUEsQ0FBQSxXQUFBLENBQVksQ0FBRSxRQUFRLENBQUUsSUFBWixDQUFaLENBQUgsQ0FBWixDQUhrQix3QkFJbEIsR0FBSSxDQUNGLEtBQU0sQ0FBQSxPQUFPLDBCQUFHLE1BQU0sQ0FBQyxVQUFWLENBQWIsQ0FDQSxLQUFNLENBQUUsUUFBRiwyQkFBZSxLQUFNLENBQUEsT0FBTyxDQUFDLElBQVIsQ0FBYSxxQkFBYixDQUFvQyxDQUM3RCxHQUFHLENBQUUsYUFEd0QsQ0FBcEMsQ0FBckIsQ0FBTixDQUdBLEtBQU0sQ0FBQSxJQUFJLDBCQUFHLEtBQU0sQ0FBQSxPQUFPLENBQUMsY0FBUixDQUF1QixRQUF2QixDQUFULENBQVYsQ0FMRSx5QkFPRixLQUFNLENBQUEsSUFBSSxDQUFDLElBQUwsQ0FBVSxhQUFWLENBQU4sQ0FQRSx5QkFRRixLQUFNLENBQUEsT0FBTyxDQUFDLEdBQVIsQ0FBWSxDQUNoQixJQUFJLENBQUMsS0FBTCxDQUFXLHFCQUFYLENBRGdCLENBRWhCLElBQUksQ0FBQyxJQUFMLENBQVUsZUFBVixDQUEyQixDQUFFLEdBQUYsQ0FBM0IsQ0FGZ0IsQ0FBWixDQUFOLENBSUEsS0FBTSxDQUFFLElBQUYsNEJBQVcsS0FBTSxDQUFBLElBQUksQ0FBQyxJQUFMLENBQVUsaUJBQVYsQ0FBNkIsRUFBN0IsQ0FBakIsQ0FBTixDQVpFLHlCQWNGLFVBQUEsQ0FBQSxhQUFBLENBQWMsVUFBZCxDQUEwQixNQUFNLENBQUMsSUFBUCxDQUFZLElBQVosQ0FBa0IsUUFBbEIsQ0FBMUIsRUFkRSx5QkFnQkYsS0FBTSxDQUFBLE1BQU0sQ0FBQyxLQUFQLEVBQU4sQ0FDRCxDQWpCRCxPQWlCVSwwQkFDUixLQUFNLENBQUEsT0FBTyxDQUFDLElBQVIsRUFBTixDQURRLHlCQUVSLEtBQU0sQ0FBQSxNQUFNLENBQUMsT0FBUCxFQUFOLENBQ0QsQ0F4QmlCLHlCQXlCbEIsT0FDRCxDLHlCQTVCRCxPQUFBLENBQUEsT0FBQSxDQUFBLFVBQUEsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNwYXduQ2hyb21lIH0gZnJvbSBcImNocm9tZS1kZWJ1Z2dpbmctY2xpZW50XCI7XG5pbXBvcnQgeyB3cml0ZUZpbGVTeW5jIH0gZnJvbSBcImZzLWV4dHJhXCI7XG5pbXBvcnQgKiBhcyBvcmEgZnJvbSBcIm9yYVwiO1xuXG4vKipcbiAqIFNwYXduIGEgY2hyb21lIHByb2Nlc3MgYW5kIHZpc2l0IHRoZSBnaXZlbiB1cmwuIFdhaXQgdW50aWwgcGFnZSBsb2FkIGV2ZW50IGlzIGZpcmVkXG4gKiBhbmQgdGhlbiBjcmVhdGUgUERGLlxuICpcbiAqIEBwYXJhbSB1cmwgLSBVUkwgb2YgcGFnZSBmb3IgY2hyb21lIHRvIHZpc2l0XG4gKiBAcGFyYW0gb3V0cHV0UGF0aCAtIE91dHB1dCBwZGYgdG8gdGhpcyBmaWxlXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIHByaW50VG9QREYoXG4gIHVybDogc3RyaW5nLFxuICBvdXRwdXRQYXRoOiBzdHJpbmdcbik6IFByb21pc2U8dm9pZD4ge1xuICBjb25zdCBzcGlubmVyID0gb3JhKFwiXFxuIEdlbmVyYXRpbmcgQmVuY2htYXJrIFJlcG9ydHNcIikuc3RhcnQoKTtcbiAgY29uc3QgY2hyb21lID0gc3Bhd25DaHJvbWUoeyBoZWFkbGVzczogdHJ1ZSB9KTtcbiAgdHJ5IHtcbiAgICBjb25zdCBicm93c2VyID0gY2hyb21lLmNvbm5lY3Rpb247XG4gICAgY29uc3QgeyB0YXJnZXRJZCB9ID0gYXdhaXQgYnJvd3Nlci5zZW5kKFwiVGFyZ2V0LmNyZWF0ZVRhcmdldFwiLCB7XG4gICAgICB1cmw6IFwiYWJvdXQ6YmxhbmtcIixcbiAgICB9KTtcbiAgICBjb25zdCBwYWdlID0gYXdhaXQgYnJvd3Nlci5hdHRhY2hUb1RhcmdldCh0YXJnZXRJZCk7XG5cbiAgICBhd2FpdCBwYWdlLnNlbmQoXCJQYWdlLmVuYWJsZVwiKTtcbiAgICBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICBwYWdlLnVudGlsKFwiUGFnZS5sb2FkRXZlbnRGaXJlZFwiKSxcbiAgICAgIHBhZ2Uuc2VuZChcIlBhZ2UubmF2aWdhdGVcIiwgeyB1cmwgfSksXG4gICAgXSk7XG4gICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBwYWdlLnNlbmQoXCJQYWdlLnByaW50VG9QREZcIiwge30pO1xuXG4gICAgd3JpdGVGaWxlU3luYyhvdXRwdXRQYXRoLCBCdWZmZXIuZnJvbShkYXRhLCBcImJhc2U2NFwiKSk7XG5cbiAgICBhd2FpdCBjaHJvbWUuY2xvc2UoKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBhd2FpdCBzcGlubmVyLnN0b3AoKTtcbiAgICBhd2FpdCBjaHJvbWUuZGlzcG9zZSgpO1xuICB9XG4gIHJldHVybjtcbn1cbiJdfQ==