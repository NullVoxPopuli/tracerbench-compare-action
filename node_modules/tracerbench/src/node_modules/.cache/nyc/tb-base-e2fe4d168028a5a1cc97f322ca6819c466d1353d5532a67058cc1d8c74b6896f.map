{"version":3,"file":"/Users/malynch/D/tracerbench/packages/cli/src/command-config/tb-base.ts","sources":["/Users/malynch/D/tracerbench/packages/cli/src/command-config/tb-base.ts"],"names":[],"mappings":";;AAAA,6CAA6C;AAC7C,4CAAyC;AAEzC,0CAAuC;AAA9B,0BAAA,KAAK,CAAA;AAEd,sDAA+D;AAC/D,MAA8B,aAAc,SAAQ,iBAAO;IAKzD,YAAY,IAAc,EAAE,MAAe;QACzC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QALf,iBAAY,GAAc,gCAAe,CAAC;QAM/C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;CACF;AATD,gCASC","sourcesContent":["/* eslint-disable filenames/match-exported */\nimport { Command } from \"@oclif/command\";\nimport { IConfig } from \"@oclif/config\";\nexport { flags } from \"@oclif/command\";\n\nimport { defaultFlagArgs, ITBConfig } from \"../command-config\";\nexport default abstract class TBBaseCommand extends Command {\n  public parsedConfig: ITBConfig = defaultFlagArgs;\n  // flags explicitly specified within the cli when\n  // running the command. these will override all\n  public explicitFlags: string[];\n  constructor(argv: string[], config: IConfig) {\n    super(argv, config);\n    this.explicitFlags = argv;\n  }\n}\n"]}