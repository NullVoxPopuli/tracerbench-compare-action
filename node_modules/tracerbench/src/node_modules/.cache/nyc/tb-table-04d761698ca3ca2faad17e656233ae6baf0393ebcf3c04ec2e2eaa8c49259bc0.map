{"version":3,"file":"/Users/malynch/D/tracerbench/packages/cli/src/helpers/tb-table.ts","sources":["/Users/malynch/D/tracerbench/packages/cli/src/helpers/tb-table.ts"],"names":[],"mappings":"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","sourcesContent":["import { Stats } from \"@tracerbench/stats\";\nimport * as chalk from \"chalk\";\nimport * as Table from \"cli-table3\";\n\nimport { ICompareJSONResult } from \"./log-compare-results\";\nimport { chalkScheme } from \"./utils\";\n\nexport default class TBTable {\n  public table: Table.Table;\n  public display: Stats[];\n  public estimatorDeltas: number[];\n  public isSigArray: boolean[];\n  private heading: string;\n\n  constructor(heading: string) {\n    this.heading = heading;\n    this.table = new Table({\n      colWidths: [40, 30],\n    });\n    this.display = [];\n    this.isSigArray = [];\n    this.estimatorDeltas = [];\n  }\n\n  // return table data for JSON results\n  // confidence interval and estimatorDelta are inverted\n  // to show a regression as a positive number\n  // and an improvement as a negative number ie (N * -1)\n  // JSON results, stdout, PDF, HTML have parity\n  public getData(): ICompareJSONResult[] {\n    const a: ICompareJSONResult[] = [];\n    this.display.forEach((stat) => {\n      a.push({\n        heading: this.heading,\n        phaseName: stat.name,\n        isSignificant: stat.confidenceInterval.isSig,\n        estimatorDelta: `${stat.estimator * -1}ms`,\n        controlSampleCount: stat.sampleCount.control,\n        experimentSampleCount: stat.sampleCount.experiment,\n        confidenceInterval: [\n          `${stat.confidenceInterval.max * -1}ms`,\n          `${stat.confidenceInterval.min * -1}ms`,\n        ],\n        controlSevenFigureSummary: stat.sevenFigureSummary.control,\n        experimentSevenFigureSummary: stat.sevenFigureSummary.experiment,\n      });\n\n      this.isSigArray.push(stat.confidenceInterval.isSig);\n      this.estimatorDeltas.push(stat.estimator);\n    });\n    return a;\n  }\n\n  public render(): string {\n    this.setTableData();\n    return this.table.toString();\n  }\n\n  private setTableData(): Table.Table {\n    const controlLabelWithColor = chalkScheme.tbBranding.lime(\"Control\");\n    const experimentLabelWithColor = chalkScheme.tbBranding.aqua(\"Experiment\");\n    this.display.forEach((stat) => {\n      // setting the color for the Hodges–Lehmann estimated delta\n      const estimatorForDisplay = stat.estimator * -1;\n      let hlDeltaWithColor;\n\n      if (stat.confidenceInterval.isSig) {\n        if (estimatorForDisplay > 0) {\n          hlDeltaWithColor = chalk.red(`${estimatorForDisplay}ms`);\n        } else if (!estimatorForDisplay) {\n          hlDeltaWithColor = chalk.grey(`${estimatorForDisplay}ms`);\n        } else {\n          hlDeltaWithColor = chalk.green(`${estimatorForDisplay}ms`);\n        }\n      } else {\n        hlDeltaWithColor = chalk.grey(`${estimatorForDisplay}ms`);\n      }\n\n      this.table.push(\n        [\n          {\n            colSpan: 2,\n            content: `${chalkScheme.tbBranding.blue(\n              `${this.heading} : ${stat.name}`\n            )}`,\n          },\n        ],\n        [\n          {\n            vAlign: \"center\",\n            rowSpan: 2,\n            colSpan: 1,\n            content: \"Sample Counts:\",\n          },\n          `${controlLabelWithColor}: ${stat.sampleCount.control}`,\n        ],\n        [`${experimentLabelWithColor}: ${stat.sampleCount.experiment}`],\n        [],\n        [\n          {\n            vAlign: \"center\",\n            rowSpan: 7,\n            colSpan: 1,\n            content: `${controlLabelWithColor} Seven Figure Summary:`,\n          },\n          `MIN: ${stat.sevenFigureSummary.control.min}ms`,\n        ],\n        [`MAX: ${stat.sevenFigureSummary.control.max}ms`],\n        [`10th: ${stat.sevenFigureSummary.control[10]}ms`],\n        [`25th: ${stat.sevenFigureSummary.control[25]}ms`],\n        [`50th: ${stat.sevenFigureSummary.control[50]}ms`],\n        [`75th: ${stat.sevenFigureSummary.control[75]}ms`],\n        [`90th: ${stat.sevenFigureSummary.control[90]}ms`],\n        [],\n        [\n          {\n            vAlign: \"center\",\n            rowSpan: 7,\n            colSpan: 1,\n            content: `${experimentLabelWithColor} Seven Figure Summary:`,\n          },\n          `MIN: ${stat.sevenFigureSummary.experiment.min}ms`,\n        ],\n        [`MAX: ${stat.sevenFigureSummary.experiment.max}ms`],\n        [`10th: ${stat.sevenFigureSummary.experiment[10]}ms`],\n        [`25th: ${stat.sevenFigureSummary.experiment[25]}ms`],\n        [`50th: ${stat.sevenFigureSummary.experiment[50]}ms`],\n        [`75th: ${stat.sevenFigureSummary.experiment[75]}ms`],\n        [`90th: ${stat.sevenFigureSummary.experiment[90]}ms`],\n        [],\n        [\n          {\n            content: \"Hodges–Lehmann estimated delta:\",\n          },\n          // Reverse the signs when displaying\n          { content: `${hlDeltaWithColor}` },\n        ],\n        [],\n        [\n          {\n            content: `95% confident the delta is between:`,\n          },\n          {\n            // For display flip the min and max\n            content: `${stat.confidenceInterval.max * -1}ms to ${\n              stat.confidenceInterval.min * -1\n            }ms`,\n          },\n        ],\n        [],\n        [\n          { content: \"Is Significant:\" },\n          { content: `${stat.confidenceInterval.isSig}` },\n        ],\n        [],\n        [\"Control Sparkline\", { content: `${stat.sparkLine.control}` }],\n        [\n          \"Experiment Sparkline\",\n          {\n            content: `${stat.sparkLine.experiment}`,\n          },\n        ]\n      );\n    });\n\n    return this.table;\n  }\n}\n"]}