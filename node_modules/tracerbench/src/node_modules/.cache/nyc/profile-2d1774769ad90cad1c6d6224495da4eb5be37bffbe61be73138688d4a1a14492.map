{"version":3,"file":"/Users/malynch/D/tracerbench/packages/cli/src/commands/profile.ts","sources":["/Users/malynch/D/tracerbench/packages/cli/src/commands/profile.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport {\n  analyze,\n  IAnalyze,\n  IConditions,\n  ITraceEvent,\n  liveTrace,\n  loadTrace,\n} from \"@tracerbench/core\";\nimport { existsSync, mkdirSync, readJson, writeFileSync } from \"fs-extra\";\nimport { join, resolve } from \"path\";\n\nimport { TBBaseCommand } from \"../command-config\";\nimport { harpath } from \"../helpers/args\";\nimport {\n  cookiespath,\n  cpuThrottleRate,\n  network,\n  tbResultsFolder,\n  url,\n  usertimings,\n} from \"../helpers/flags\";\nimport {\n  byTime,\n  collect,\n  findFrame,\n  format,\n  IEvent,\n  isCommitLoad,\n  isFrameMark,\n  isFrameNavigationStart,\n  isMark,\n  isUserMark,\n  normalizeFnName,\n  setTraceEvents,\n} from \"../helpers/utils\";\n\nexport default class Profile extends TBBaseCommand {\n  // include backwards compat to trace cmd\n  static aliases = [\"trace\"];\n  public static description = `Parses a CPU profile and aggregates time across heuristics.`;\n  public static args = [harpath];\n  public static flags = {\n    cpuThrottleRate: cpuThrottleRate({ required: true }),\n    tbResultsFolder: tbResultsFolder({ required: true }),\n    network: network(),\n    url: url({ required: true }),\n    cookiespath: cookiespath({ required: true }),\n    usertimings,\n  };\n\n  public async run() {\n    const { flags, args } = this.parse(Profile);\n    const {\n      cpuThrottleRate,\n      cookiespath,\n      tbResultsFolder,\n      network,\n      usertimings,\n    } = flags;\n    const { harpath } = args;\n    let { url } = flags;\n    let cookies = [\n      {\n        name: \"\",\n        value: \"\",\n        domain: \"\",\n        path: \"\",\n      },\n    ];\n    const methods = [\"\"];\n    const conditions: IConditions = {\n      cpu: cpuThrottleRate,\n      network,\n    };\n    if (cookiespath.length) {\n      cookies = await readJson(resolve(cookiespath));\n    }\n    // if the folder for the tracerbench results file\n    // does not exist then create it\n    try {\n      if (!existsSync(tbResultsFolder)) {\n        mkdirSync(tbResultsFolder);\n      }\n    } catch (error) {\n      this.error(error);\n    }\n    // validate har and clone it to trace.json which will be mutated\n    const harJSON = await readJson(resolve(harpath));\n    const traceJSONPath = join(tbResultsFolder, \"trace.json\");\n    writeFileSync(traceJSONPath, JSON.stringify(harJSON, null, 2));\n\n    // if no url get url from har\n    if (!url.length) {\n      try {\n        url = harJSON.log.entries[0].request.url;\n      } catch (error) {\n        this.error(\n          `${error}. Could not extract the URL from the HAR. Explicitly pass via \"--url\" flag and rerun.`\n        );\n      }\n    }\n\n    // run the liveTrace\n    const { traceEvents } = await liveTrace(\n      url,\n      tbResultsFolder,\n      cookies,\n      conditions\n    );\n\n    const analyzeOptions: IAnalyze = {\n      traceEvents,\n      traceHARJSON: harJSON,\n      methods,\n    };\n\n    // analyze the liveTrace\n    await analyze(analyzeOptions);\n\n    // js-eval-time\n    let trace: any;\n    let totalJSDuration = 0;\n    let totalCSSDuration = 0;\n\n    const methodsSet = new Set();\n\n    try {\n      trace = setTraceEvents(traceEvents);\n    } catch (error) {\n      this.error(`${error}`);\n    }\n\n    trace\n      .filter((event: ITraceEvent) => event.name === \"EvaluateScript\")\n      .filter((event: any) => event.args.data.url)\n      .forEach((event: any) => {\n        const url = event.args.data.url;\n        const durationInMs = (event.dur as number) / 1000;\n        totalJSDuration += durationInMs;\n        this.log(`JS: ${url}: ${durationInMs.toFixed(2)}`);\n      });\n\n    // log js-eval-time\n    this.log(\n      `JS: Evaluation Total Duration: ${totalJSDuration.toFixed(2)}ms \\n\\n`\n    );\n\n    // css-parse\n    trace\n      .filter((event: ITraceEvent) => event.name === \"ParseAuthorStyleSheet\")\n      .filter((event: any) => event.args.data.styleSheetUrl)\n      .forEach((event: any) => {\n        const url = event.args.data.styleSheetUrl;\n        const durationInMs = event.dur / 1000;\n        totalCSSDuration += durationInMs;\n        this.log(`CSS: ${url}: ${durationInMs.toFixed(2)}`);\n      });\n\n    // log css-parse-time\n    this.log(\n      `CSS: Evaluation Total Duration: ${totalCSSDuration.toFixed(2)}ms \\n\\n`\n    );\n\n    // list-functions\n    try {\n      const profile = loadTrace(trace).cpuProfile(-1, -1);\n      profile.nodeMap.forEach((node: any) => {\n        const { functionName, url, lineNumber, columnNumber } = node.callFrame;\n\n        methodsSet.add(\n          `${url}:${lineNumber}:${columnNumber}.${normalizeFnName(\n            functionName\n          )}`\n        );\n      });\n    } catch (error) {\n      this.error(error);\n    }\n\n    try {\n      trace = setTraceEvents(traceEvents);\n      const traceLoad = trace.filter(isCommitLoad);\n      traceLoad.forEach(\n        ({\n          args: {\n            data: { frame, url },\n          },\n        }: {\n          args: { data: { frame: any; url: any } };\n        }) => {\n          this.log(`Frame-URL: ${url} | Frame-ID: ${frame}`);\n        }\n      );\n    } catch (error) {\n      this.error(`${error}`);\n    }\n\n    if (usertimings) {\n      await this.markerTimings(traceJSONPath, url);\n    }\n  }\n\n  // tracerbench marker-timings cmd moved here\n  private async markerTimings(\n    traceJSONPath: string,\n    url: string\n  ): Promise<void> {\n    const traceFrame: string = url;\n    const filter = collect(\"\", []);\n\n    let frame: any = null;\n    let startTime = -1;\n    let rawTraceData: any = null;\n    let trace: any = null;\n\n    if (!url) {\n      this.error(\n        `Could not extract the URL from the HAR. Explicitly pass via \"--url\" flag and rerun.`\n      );\n    }\n\n    try {\n      rawTraceData = await readJson(resolve(traceJSONPath));\n    } catch (e) {\n      this.error(e);\n    }\n\n    try {\n      trace = setTraceEvents(rawTraceData);\n    } catch (e) {\n      this.error(e);\n    }\n\n    if (traceFrame.startsWith(\"http\")) {\n      frame = findFrame(trace, traceFrame);\n    } else {\n      frame = traceFrame;\n    }\n    if (!frame) {\n      this.error(\n        `Could not extract frame from trace. Explicitly opt-out of usertimings via \"--usertimings\" boolean flag and rerun.`\n      );\n    }\n\n    trace\n      .filter((event: IEvent) => isMark(event) || isCommitLoad(event))\n      .sort(byTime)\n      .forEach((event: any) => {\n        if (isFrameNavigationStart(frame, event)) {\n          startTime = event.ts;\n          this.log(\n            `Marker Timings: ${format(event.ts, startTime)} ${event.name}`\n          );\n        } else if (isFrameMark(frame, event)) {\n          if (startTime === -1) {\n            startTime = event.ts;\n          }\n          this.log(\n            `Marker Timings: ${format(event.ts, startTime)} ${event.name}`\n          );\n        } else if (isUserMark(event)) {\n          if (\n            filter.length === 0 ||\n            filter.some((f: any) => event.name.indexOf(f) !== -1)\n          ) {\n            this.log(\n              `Marker Timings: ${format(event.ts, startTime)} ${event.name}`\n            );\n          }\n        } else if (isCommitLoad(event)) {\n          const { data } = event.args;\n          if (data.frame === frame) {\n            this.log(\n              `Marker Timings: ${format(event.ts, startTime)} ${event.name} ${\n                data.frame\n              } ${data.url}`\n            );\n          }\n        }\n      });\n  }\n}\n"]}