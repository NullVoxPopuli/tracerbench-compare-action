"use strict";function cov_13ydqtj7tm(){var path="/Users/malynch/D/tracerbench/packages/cli/src/commands/record-har/auth.ts";var hash="126c98dcd3967474708bea40d28fd6dad8a79962";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/malynch/D/tracerbench/packages/cli/src/commands/record-har/auth.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:4,column:15},end:{line:4,column:43}},"2":{start:{line:5,column:19},end:{line:5,column:38}},"3":{start:{line:6,column:15},end:{line:6,column:30}},"4":{start:{line:7,column:25},end:{line:7,column:56}},"5":{start:{line:8,column:28},end:{line:8,column:77}},"6":{start:{line:9,column:16},end:{line:9,column:46}},"7":{start:{line:12,column:26},end:{line:12,column:51}},"8":{start:{line:13,column:8},end:{line:13,column:96}},"9":{start:{line:16,column:70},end:{line:17,column:25}},"10":{start:{line:18,column:30},end:{line:18,column:47}},"11":{start:{line:20,column:8},end:{line:24,column:9}},"12":{start:{line:21,column:12},end:{line:23,column:52}},"13":{start:{line:26,column:24},end:{line:26,column:85}},"14":{start:{line:27,column:28},end:{line:27,column:81}},"15":{start:{line:28,column:8},end:{line:28,column:71}},"16":{start:{line:29,column:8},end:{line:29,column:58}},"17":{start:{line:30,column:8},end:{line:30,column:23}},"18":{start:{line:33,column:0},end:{line:33,column:32}},"19":{start:{line:34,column:0},end:{line:34,column:112}},"20":{start:{line:35,column:0},end:{line:43,column:2}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:4},end:{line:11,column:5}},loc:{start:{line:11,column:17},end:{line:14,column:5}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:15,column:4},end:{line:15,column:5}},loc:{start:{line:15,column:16},end:{line:31,column:5}},line:15}},branchMap:{"0":{loc:{start:{line:20,column:8},end:{line:24,column:9}},type:"if",locations:[{start:{line:20,column:8},end:{line:24,column:9}},{start:{line:20,column:8},end:{line:24,column:9}}],line:20},"1":{loc:{start:{line:21,column:26},end:{line:23,column:51}},type:"cond-expr",locations:[{start:{line:22,column:18},end:{line:22,column:71}},{start:{line:23,column:18},end:{line:23,column:51}}],line:21}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0]},inputSourceMap:{version:3,file:"/Users/malynch/D/tracerbench/packages/cli/src/commands/record-har/auth.ts",sources:["/Users/malynch/D/tracerbench/packages/cli/src/commands/record-har/auth.ts"],names:[],mappings:";;AAAA,6CAA6C;AAC7C,4CAA+C;AAE/C,uCAAyC;AACzC,+BAAqC;AAErC,yDAAgE;AAChE,8EAAuE;AACvE,+CAQ6B;AAY7B,MAAqB,aAAc,SAAQ,8BAAa;IAY/C,KAAK,CAAC,IAAI;QACf,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QAC5C,IAAI,CAAC,YAAY,GAAG,0BAAS,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IACzE,CAAC;IAEM,KAAK,CAAC,GAAG;QACd,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI;aAC/D,YAAoC,CAAC;QACxC,IAAI,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC;QAExC,sDAAsD;QACtD,IAAI,QAAQ,EAAE;YACZ,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC;gBACtC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,iCAAa,CAAC;gBACnC,CAAC,CAAC,iCAAa,CAAC;SACnB;QAED,qDAAqD;QACrD,MAAM,OAAO,GAAG,MAAM,iBAAU,CAAC,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;QAEvE,MAAM,WAAW,GAAG,cAAO,CAAC,WAAI,CAAC,IAAI,EAAE,GAAG,QAAQ,OAAO,CAAC,CAAC,CAAC;QAE5D,wBAAa,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QAEpD,IAAI,CAAC,GAAG,CAAC,0BAA0B,WAAW,EAAE,CAAC,CAAC;QAElD,OAAO,OAAO,CAAC;IACjB,CAAC;;AAvCH,gCAwCC;AAvCe,yBAAW,GACvB,mFAAmF,CAAC;AACxE,mBAAK,GAAG;IACpB,GAAG,EAAE,WAAG,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;IAChD,IAAI,EAAE,YAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC;IACxD,QAAQ,EAAE,gBAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;IAC1D,QAAQ,EAAE,gBAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IACtC,QAAQ,EAAE,gBAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IACtC,MAAM,EAAE,cAAM,EAAE;IAChB,QAAQ,EAAR,gBAAQ;CACT,CAAC",sourcesContent:["/* eslint-disable filenames/match-exported */\nimport { authClient } from \"@tracerbench/core\";\nimport Protocol from \"devtools-protocol\";\nimport { writeFileSync } from \"fs-extra\";\nimport { join, resolve } from \"path\";\n\nimport { getConfig, TBBaseCommand } from \"../../command-config\";\nimport { headlessFlags } from \"../../command-config/default-flag-args\";\nimport {\n  config,\n  dest,\n  filename,\n  headless,\n  password,\n  url,\n  username,\n} from \"../../helpers/flags\";\n\ntype RecordHARAuthOptions = {\n  url: string;\n  dest: string;\n  filename: string;\n  username: string;\n  config: string;\n  headless: boolean;\n  password: string;\n};\n\nexport default class RecordHARAuth extends TBBaseCommand {\n  public static description =\n    \"Authenticate with a given login URL, username, password and retrieve auth cookies\";\n  public static flags = {\n    url: url({ required: true, default: undefined }),\n    dest: dest({ required: true, default: `process.cwd()` }),\n    filename: filename({ required: true, default: \"cookies\" }),\n    username: username({ required: true }),\n    password: password({ required: true }),\n    config: config(),\n    headless,\n  };\n  public async init(): Promise<void> {\n    const { flags } = this.parse(RecordHARAuth);\n    this.parsedConfig = getConfig(flags.config, flags, this.explicitFlags);\n  }\n\n  public async run(): Promise<Protocol.Network.CookieParam[]> {\n    const { headless, url, username, password, filename, dest } = this\n      .parsedConfig as RecordHARAuthOptions;\n    let { browserArgs } = this.parsedConfig;\n\n    // if headless flag is true include the headless flags\n    if (headless) {\n      browserArgs = Array.isArray(browserArgs)\n        ? browserArgs.concat(headlessFlags)\n        : headlessFlags;\n    }\n\n    // login to the url provided and retrieve the cookies\n    const cookies = await authClient(url, username, password, browserArgs);\n\n    const cookiesPath = resolve(join(dest, `${filename}.json`));\n\n    writeFileSync(cookiesPath, JSON.stringify(cookies));\n\n    this.log(`  \u2714 Cookies retrieved: ${cookiesPath}`);\n\n    return cookies;\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"126c98dcd3967474708bea40d28fd6dad8a79962"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_13ydqtj7tm=function(){return actualCoverage;};}return actualCoverage;}cov_13ydqtj7tm();cov_13ydqtj7tm().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});/* eslint-disable filenames/match-exported */const core_1=(cov_13ydqtj7tm().s[1]++,require("@tracerbench/core"));const fs_extra_1=(cov_13ydqtj7tm().s[2]++,require("fs-extra"));const path_1=(cov_13ydqtj7tm().s[3]++,require("path"));const command_config_1=(cov_13ydqtj7tm().s[4]++,require("../../command-config"));const default_flag_args_1=(cov_13ydqtj7tm().s[5]++,require("../../command-config/default-flag-args"));const flags_1=(cov_13ydqtj7tm().s[6]++,require("../../helpers/flags"));class RecordHARAuth extends(command_config_1.TBBaseCommand){async init(){cov_13ydqtj7tm().f[0]++;const{flags}=(cov_13ydqtj7tm().s[7]++,this.parse(RecordHARAuth));cov_13ydqtj7tm().s[8]++;this.parsedConfig=command_config_1.getConfig(flags.config,flags,this.explicitFlags);}async run(){cov_13ydqtj7tm().f[1]++;const{headless,url,username,password,filename,dest}=(cov_13ydqtj7tm().s[9]++,this.parsedConfig);let{browserArgs}=(cov_13ydqtj7tm().s[10]++,this.parsedConfig);// if headless flag is true include the headless flags
cov_13ydqtj7tm().s[11]++;if(headless){cov_13ydqtj7tm().b[0][0]++;cov_13ydqtj7tm().s[12]++;browserArgs=Array.isArray(browserArgs)?(cov_13ydqtj7tm().b[1][0]++,browserArgs.concat(default_flag_args_1.headlessFlags)):(cov_13ydqtj7tm().b[1][1]++,default_flag_args_1.headlessFlags);}else{cov_13ydqtj7tm().b[0][1]++;}// login to the url provided and retrieve the cookies
const cookies=(cov_13ydqtj7tm().s[13]++,await core_1.authClient(url,username,password,browserArgs));const cookiesPath=(cov_13ydqtj7tm().s[14]++,path_1.resolve(path_1.join(dest,`${filename}.json`)));cov_13ydqtj7tm().s[15]++;fs_extra_1.writeFileSync(cookiesPath,JSON.stringify(cookies));cov_13ydqtj7tm().s[16]++;this.log(`  âœ” Cookies retrieved: ${cookiesPath}`);cov_13ydqtj7tm().s[17]++;return cookies;}}cov_13ydqtj7tm().s[18]++;exports.default=RecordHARAuth;cov_13ydqtj7tm().s[19]++;RecordHARAuth.description="Authenticate with a given login URL, username, password and retrieve auth cookies";cov_13ydqtj7tm().s[20]++;RecordHARAuth.flags={url:flags_1.url({required:true,default:undefined}),dest:flags_1.dest({required:true,default:`process.cwd()`}),filename:flags_1.filename({required:true,default:"cookies"}),username:flags_1.username({required:true}),password:flags_1.password({required:true}),config:flags_1.config(),headless:flags_1.headless};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL21hbHluY2gvRC90cmFjZXJiZW5jaC9wYWNrYWdlcy9jbGkvc3JjL2NvbW1hbmRzL3JlY29yZC1oYXIvYXV0aC50cyIsInNvdXJjZXMiOlsiL1VzZXJzL21hbHluY2gvRC90cmFjZXJiZW5jaC9wYWNrYWdlcy9jbGkvc3JjL2NvbW1hbmRzL3JlY29yZC1oYXIvYXV0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDZDQUE2QztBQUM3Qyw0Q0FBK0M7QUFFL0MsdUNBQXlDO0FBQ3pDLCtCQUFxQztBQUVyQyx5REFBZ0U7QUFDaEUsOEVBQXVFO0FBQ3ZFLCtDQVE2QjtBQVk3QixNQUFxQixhQUFjLFNBQVEsOEJBQWE7SUFZL0MsS0FBSyxDQUFDLElBQUk7UUFDZixNQUFNLEVBQUUsS0FBSyxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUM1QyxJQUFJLENBQUMsWUFBWSxHQUFHLDBCQUFTLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ3pFLENBQUM7SUFFTSxLQUFLLENBQUMsR0FBRztRQUNkLE1BQU0sRUFBRSxRQUFRLEVBQUUsR0FBRyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxHQUFHLElBQUk7YUFDL0QsWUFBb0MsQ0FBQztRQUN4QyxJQUFJLEVBQUUsV0FBVyxFQUFFLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztRQUV4QyxzREFBc0Q7UUFDdEQsSUFBSSxRQUFRLEVBQUU7WUFDWixXQUFXLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUM7Z0JBQ3RDLENBQUMsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLGlDQUFhLENBQUM7Z0JBQ25DLENBQUMsQ0FBQyxpQ0FBYSxDQUFDO1NBQ25CO1FBRUQscURBQXFEO1FBQ3JELE1BQU0sT0FBTyxHQUFHLE1BQU0saUJBQVUsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxXQUFXLENBQUMsQ0FBQztRQUV2RSxNQUFNLFdBQVcsR0FBRyxjQUFPLENBQUMsV0FBSSxDQUFDLElBQUksRUFBRSxHQUFHLFFBQVEsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUU1RCx3QkFBYSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFFcEQsSUFBSSxDQUFDLEdBQUcsQ0FBQywwQkFBMEIsV0FBVyxFQUFFLENBQUMsQ0FBQztRQUVsRCxPQUFPLE9BQU8sQ0FBQztJQUNqQixDQUFDOztBQXZDSCxnQ0F3Q0M7QUF2Q2UseUJBQVcsR0FDdkIsbUZBQW1GLENBQUM7QUFDeEUsbUJBQUssR0FBRztJQUNwQixHQUFHLEVBQUUsV0FBRyxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLENBQUM7SUFDaEQsSUFBSSxFQUFFLFlBQUksQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxDQUFDO0lBQ3hELFFBQVEsRUFBRSxnQkFBUSxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLENBQUM7SUFDMUQsUUFBUSxFQUFFLGdCQUFRLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDdEMsUUFBUSxFQUFFLGdCQUFRLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDdEMsTUFBTSxFQUFFLGNBQU0sRUFBRTtJQUNoQixRQUFRLEVBQVIsZ0JBQVE7Q0FDVCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgZmlsZW5hbWVzL21hdGNoLWV4cG9ydGVkICovXG5pbXBvcnQgeyBhdXRoQ2xpZW50IH0gZnJvbSBcIkB0cmFjZXJiZW5jaC9jb3JlXCI7XG5pbXBvcnQgUHJvdG9jb2wgZnJvbSBcImRldnRvb2xzLXByb3RvY29sXCI7XG5pbXBvcnQgeyB3cml0ZUZpbGVTeW5jIH0gZnJvbSBcImZzLWV4dHJhXCI7XG5pbXBvcnQgeyBqb2luLCByZXNvbHZlIH0gZnJvbSBcInBhdGhcIjtcblxuaW1wb3J0IHsgZ2V0Q29uZmlnLCBUQkJhc2VDb21tYW5kIH0gZnJvbSBcIi4uLy4uL2NvbW1hbmQtY29uZmlnXCI7XG5pbXBvcnQgeyBoZWFkbGVzc0ZsYWdzIH0gZnJvbSBcIi4uLy4uL2NvbW1hbmQtY29uZmlnL2RlZmF1bHQtZmxhZy1hcmdzXCI7XG5pbXBvcnQge1xuICBjb25maWcsXG4gIGRlc3QsXG4gIGZpbGVuYW1lLFxuICBoZWFkbGVzcyxcbiAgcGFzc3dvcmQsXG4gIHVybCxcbiAgdXNlcm5hbWUsXG59IGZyb20gXCIuLi8uLi9oZWxwZXJzL2ZsYWdzXCI7XG5cbnR5cGUgUmVjb3JkSEFSQXV0aE9wdGlvbnMgPSB7XG4gIHVybDogc3RyaW5nO1xuICBkZXN0OiBzdHJpbmc7XG4gIGZpbGVuYW1lOiBzdHJpbmc7XG4gIHVzZXJuYW1lOiBzdHJpbmc7XG4gIGNvbmZpZzogc3RyaW5nO1xuICBoZWFkbGVzczogYm9vbGVhbjtcbiAgcGFzc3dvcmQ6IHN0cmluZztcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlY29yZEhBUkF1dGggZXh0ZW5kcyBUQkJhc2VDb21tYW5kIHtcbiAgcHVibGljIHN0YXRpYyBkZXNjcmlwdGlvbiA9XG4gICAgXCJBdXRoZW50aWNhdGUgd2l0aCBhIGdpdmVuIGxvZ2luIFVSTCwgdXNlcm5hbWUsIHBhc3N3b3JkIGFuZCByZXRyaWV2ZSBhdXRoIGNvb2tpZXNcIjtcbiAgcHVibGljIHN0YXRpYyBmbGFncyA9IHtcbiAgICB1cmw6IHVybCh7IHJlcXVpcmVkOiB0cnVlLCBkZWZhdWx0OiB1bmRlZmluZWQgfSksXG4gICAgZGVzdDogZGVzdCh7IHJlcXVpcmVkOiB0cnVlLCBkZWZhdWx0OiBgcHJvY2Vzcy5jd2QoKWAgfSksXG4gICAgZmlsZW5hbWU6IGZpbGVuYW1lKHsgcmVxdWlyZWQ6IHRydWUsIGRlZmF1bHQ6IFwiY29va2llc1wiIH0pLFxuICAgIHVzZXJuYW1lOiB1c2VybmFtZSh7IHJlcXVpcmVkOiB0cnVlIH0pLFxuICAgIHBhc3N3b3JkOiBwYXNzd29yZCh7IHJlcXVpcmVkOiB0cnVlIH0pLFxuICAgIGNvbmZpZzogY29uZmlnKCksXG4gICAgaGVhZGxlc3MsXG4gIH07XG4gIHB1YmxpYyBhc3luYyBpbml0KCk6IFByb21pc2U8dm9pZD4ge1xuICAgIGNvbnN0IHsgZmxhZ3MgfSA9IHRoaXMucGFyc2UoUmVjb3JkSEFSQXV0aCk7XG4gICAgdGhpcy5wYXJzZWRDb25maWcgPSBnZXRDb25maWcoZmxhZ3MuY29uZmlnLCBmbGFncywgdGhpcy5leHBsaWNpdEZsYWdzKTtcbiAgfVxuXG4gIHB1YmxpYyBhc3luYyBydW4oKTogUHJvbWlzZTxQcm90b2NvbC5OZXR3b3JrLkNvb2tpZVBhcmFtW10+IHtcbiAgICBjb25zdCB7IGhlYWRsZXNzLCB1cmwsIHVzZXJuYW1lLCBwYXNzd29yZCwgZmlsZW5hbWUsIGRlc3QgfSA9IHRoaXNcbiAgICAgIC5wYXJzZWRDb25maWcgYXMgUmVjb3JkSEFSQXV0aE9wdGlvbnM7XG4gICAgbGV0IHsgYnJvd3NlckFyZ3MgfSA9IHRoaXMucGFyc2VkQ29uZmlnO1xuXG4gICAgLy8gaWYgaGVhZGxlc3MgZmxhZyBpcyB0cnVlIGluY2x1ZGUgdGhlIGhlYWRsZXNzIGZsYWdzXG4gICAgaWYgKGhlYWRsZXNzKSB7XG4gICAgICBicm93c2VyQXJncyA9IEFycmF5LmlzQXJyYXkoYnJvd3NlckFyZ3MpXG4gICAgICAgID8gYnJvd3NlckFyZ3MuY29uY2F0KGhlYWRsZXNzRmxhZ3MpXG4gICAgICAgIDogaGVhZGxlc3NGbGFncztcbiAgICB9XG5cbiAgICAvLyBsb2dpbiB0byB0aGUgdXJsIHByb3ZpZGVkIGFuZCByZXRyaWV2ZSB0aGUgY29va2llc1xuICAgIGNvbnN0IGNvb2tpZXMgPSBhd2FpdCBhdXRoQ2xpZW50KHVybCwgdXNlcm5hbWUsIHBhc3N3b3JkLCBicm93c2VyQXJncyk7XG5cbiAgICBjb25zdCBjb29raWVzUGF0aCA9IHJlc29sdmUoam9pbihkZXN0LCBgJHtmaWxlbmFtZX0uanNvbmApKTtcblxuICAgIHdyaXRlRmlsZVN5bmMoY29va2llc1BhdGgsIEpTT04uc3RyaW5naWZ5KGNvb2tpZXMpKTtcblxuICAgIHRoaXMubG9nKGAgIOKclCBDb29raWVzIHJldHJpZXZlZDogJHtjb29raWVzUGF0aH1gKTtcblxuICAgIHJldHVybiBjb29raWVzO1xuICB9XG59XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWx5bmNoL0QvdHJhY2VyYmVuY2gvcGFja2FnZXMvY2xpL3NyYy9jb21tYW5kcy9yZWNvcmQtaGFyL2F1dGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IncyTUE4Q0k7NEtBOUNKLDZDQUNBLEtBQUEsQ0FBQSxNQUFBLDBCQUFBLE9BQUEsQ0FBQSxtQkFBQSxDQUFBLENBQUEsQ0FFQSxLQUFBLENBQUEsVUFBQSwwQkFBQSxPQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsQ0FDQSxLQUFBLENBQUEsTUFBQSwwQkFBQSxPQUFBLENBQUEsTUFBQSxDQUFBLENBQUEsQ0FFQSxLQUFBLENBQUEsZ0JBQUEsMEJBQUEsT0FBQSxDQUFBLHNCQUFBLENBQUEsQ0FBQSxDQUNBLEtBQUEsQ0FBQSxtQkFBQSwwQkFBQSxPQUFBLENBQUEsd0NBQUEsQ0FBQSxDQUFBLENBQ0EsS0FBQSxDQUFBLE9BQUEsMEJBQUEsT0FBQSxDQUFBLHFCQUFBLENBQUEsQ0FBQSxDQW9CQSxLQUFxQixDQUFBLGFBQXJCLFNBQTJDLGdCQUFBLENBQUEsYUFBM0MsQ0FBd0QsQ0FZL0MsS0FBTSxDQUFBLElBQU4sRUFBVSx5QkFDZixLQUFNLENBQUUsS0FBRiwyQkFBWSxLQUFLLEtBQUwsQ0FBVyxhQUFYLENBQVosQ0FBTixDQURlLHdCQUVmLEtBQUssWUFBTCxDQUFvQixnQkFBQSxDQUFBLFNBQUEsQ0FBVSxLQUFLLENBQUMsTUFBaEIsQ0FBd0IsS0FBeEIsQ0FBK0IsS0FBSyxhQUFwQyxDQUFwQixDQUNELENBRU0sS0FBTSxDQUFBLEdBQU4sRUFBUyx5QkFDZCxLQUFNLENBQUUsUUFBRixDQUFZLEdBQVosQ0FBaUIsUUFBakIsQ0FBMkIsUUFBM0IsQ0FBcUMsUUFBckMsQ0FBK0MsSUFBL0MsMkJBQXdELEtBQzNELFlBREcsQ0FBTixDQUVBLEdBQUksQ0FBRSxXQUFGLDRCQUFrQixLQUFLLFlBQXZCLENBQUosQ0FFQTtBQUxjLHlCQU1kLEdBQUksUUFBSixDQUFjLHFEQUNaLFdBQVcsQ0FBRyxLQUFLLENBQUMsT0FBTixDQUFjLFdBQWQsOEJBQ1YsV0FBVyxDQUFDLE1BQVosQ0FBbUIsbUJBQUEsQ0FBQSxhQUFuQixDQURVLDhCQUVWLG1CQUFBLENBQUEsYUFGVSxDQUFkLENBR0QsQ0FKRCxpQ0FNQTtBQUNBLEtBQU0sQ0FBQSxPQUFPLDJCQUFHLEtBQU0sQ0FBQSxNQUFBLENBQUEsVUFBQSxDQUFXLEdBQVgsQ0FBZ0IsUUFBaEIsQ0FBMEIsUUFBMUIsQ0FBb0MsV0FBcEMsQ0FBVCxDQUFiLENBRUEsS0FBTSxDQUFBLFdBQVcsMkJBQUcsTUFBQSxDQUFBLE9BQUEsQ0FBUSxNQUFBLENBQUEsSUFBQSxDQUFLLElBQUwsQ0FBVyxHQUFHLFFBQVEsT0FBdEIsQ0FBUixDQUFILENBQWpCLENBZmMseUJBaUJkLFVBQUEsQ0FBQSxhQUFBLENBQWMsV0FBZCxDQUEyQixJQUFJLENBQUMsU0FBTCxDQUFlLE9BQWYsQ0FBM0IsRUFqQmMseUJBbUJkLEtBQUssR0FBTCxDQUFTLDBCQUEwQixXQUFXLEVBQTlDLEVBbkJjLHlCQXFCZCxNQUFPLENBQUEsT0FBUCxDQUNELENBdkNxRCxDLHlCQUF4RCxPQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQyx5QkFDZ0IsYUFBQSxDQUFBLFdBQUEsQ0FDWixtRkFEWSxDLHlCQUVBLGFBQUEsQ0FBQSxLQUFBLENBQVEsQ0FDcEIsR0FBRyxDQUFFLE9BQUEsQ0FBQSxHQUFBLENBQUksQ0FBRSxRQUFRLENBQUUsSUFBWixDQUFrQixPQUFPLENBQUUsU0FBM0IsQ0FBSixDQURlLENBRXBCLElBQUksQ0FBRSxPQUFBLENBQUEsSUFBQSxDQUFLLENBQUUsUUFBUSxDQUFFLElBQVosQ0FBa0IsT0FBTyxDQUFFLGVBQTNCLENBQUwsQ0FGYyxDQUdwQixRQUFRLENBQUUsT0FBQSxDQUFBLFFBQUEsQ0FBUyxDQUFFLFFBQVEsQ0FBRSxJQUFaLENBQWtCLE9BQU8sQ0FBRSxTQUEzQixDQUFULENBSFUsQ0FJcEIsUUFBUSxDQUFFLE9BQUEsQ0FBQSxRQUFBLENBQVMsQ0FBRSxRQUFRLENBQUUsSUFBWixDQUFULENBSlUsQ0FLcEIsUUFBUSxDQUFFLE9BQUEsQ0FBQSxRQUFBLENBQVMsQ0FBRSxRQUFRLENBQUUsSUFBWixDQUFULENBTFUsQ0FNcEIsTUFBTSxDQUFFLE9BQUEsQ0FBQSxNQUFBLEVBTlksQ0FPcEIsUUFBUSxDQUFSLE9BQUEsQ0FBQSxRQVBvQixDQUFSLEMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBmaWxlbmFtZXMvbWF0Y2gtZXhwb3J0ZWQgKi9cbmltcG9ydCB7IGF1dGhDbGllbnQgfSBmcm9tIFwiQHRyYWNlcmJlbmNoL2NvcmVcIjtcbmltcG9ydCBQcm90b2NvbCBmcm9tIFwiZGV2dG9vbHMtcHJvdG9jb2xcIjtcbmltcG9ydCB7IHdyaXRlRmlsZVN5bmMgfSBmcm9tIFwiZnMtZXh0cmFcIjtcbmltcG9ydCB7IGpvaW4sIHJlc29sdmUgfSBmcm9tIFwicGF0aFwiO1xuXG5pbXBvcnQgeyBnZXRDb25maWcsIFRCQmFzZUNvbW1hbmQgfSBmcm9tIFwiLi4vLi4vY29tbWFuZC1jb25maWdcIjtcbmltcG9ydCB7IGhlYWRsZXNzRmxhZ3MgfSBmcm9tIFwiLi4vLi4vY29tbWFuZC1jb25maWcvZGVmYXVsdC1mbGFnLWFyZ3NcIjtcbmltcG9ydCB7XG4gIGNvbmZpZyxcbiAgZGVzdCxcbiAgZmlsZW5hbWUsXG4gIGhlYWRsZXNzLFxuICBwYXNzd29yZCxcbiAgdXJsLFxuICB1c2VybmFtZSxcbn0gZnJvbSBcIi4uLy4uL2hlbHBlcnMvZmxhZ3NcIjtcblxudHlwZSBSZWNvcmRIQVJBdXRoT3B0aW9ucyA9IHtcbiAgdXJsOiBzdHJpbmc7XG4gIGRlc3Q6IHN0cmluZztcbiAgZmlsZW5hbWU6IHN0cmluZztcbiAgdXNlcm5hbWU6IHN0cmluZztcbiAgY29uZmlnOiBzdHJpbmc7XG4gIGhlYWRsZXNzOiBib29sZWFuO1xuICBwYXNzd29yZDogc3RyaW5nO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVjb3JkSEFSQXV0aCBleHRlbmRzIFRCQmFzZUNvbW1hbmQge1xuICBwdWJsaWMgc3RhdGljIGRlc2NyaXB0aW9uID1cbiAgICBcIkF1dGhlbnRpY2F0ZSB3aXRoIGEgZ2l2ZW4gbG9naW4gVVJMLCB1c2VybmFtZSwgcGFzc3dvcmQgYW5kIHJldHJpZXZlIGF1dGggY29va2llc1wiO1xuICBwdWJsaWMgc3RhdGljIGZsYWdzID0ge1xuICAgIHVybDogdXJsKHsgcmVxdWlyZWQ6IHRydWUsIGRlZmF1bHQ6IHVuZGVmaW5lZCB9KSxcbiAgICBkZXN0OiBkZXN0KHsgcmVxdWlyZWQ6IHRydWUsIGRlZmF1bHQ6IGBwcm9jZXNzLmN3ZCgpYCB9KSxcbiAgICBmaWxlbmFtZTogZmlsZW5hbWUoeyByZXF1aXJlZDogdHJ1ZSwgZGVmYXVsdDogXCJjb29raWVzXCIgfSksXG4gICAgdXNlcm5hbWU6IHVzZXJuYW1lKHsgcmVxdWlyZWQ6IHRydWUgfSksXG4gICAgcGFzc3dvcmQ6IHBhc3N3b3JkKHsgcmVxdWlyZWQ6IHRydWUgfSksXG4gICAgY29uZmlnOiBjb25maWcoKSxcbiAgICBoZWFkbGVzcyxcbiAgfTtcbiAgcHVibGljIGFzeW5jIGluaXQoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgY29uc3QgeyBmbGFncyB9ID0gdGhpcy5wYXJzZShSZWNvcmRIQVJBdXRoKTtcbiAgICB0aGlzLnBhcnNlZENvbmZpZyA9IGdldENvbmZpZyhmbGFncy5jb25maWcsIGZsYWdzLCB0aGlzLmV4cGxpY2l0RmxhZ3MpO1xuICB9XG5cbiAgcHVibGljIGFzeW5jIHJ1bigpOiBQcm9taXNlPFByb3RvY29sLk5ldHdvcmsuQ29va2llUGFyYW1bXT4ge1xuICAgIGNvbnN0IHsgaGVhZGxlc3MsIHVybCwgdXNlcm5hbWUsIHBhc3N3b3JkLCBmaWxlbmFtZSwgZGVzdCB9ID0gdGhpc1xuICAgICAgLnBhcnNlZENvbmZpZyBhcyBSZWNvcmRIQVJBdXRoT3B0aW9ucztcbiAgICBsZXQgeyBicm93c2VyQXJncyB9ID0gdGhpcy5wYXJzZWRDb25maWc7XG5cbiAgICAvLyBpZiBoZWFkbGVzcyBmbGFnIGlzIHRydWUgaW5jbHVkZSB0aGUgaGVhZGxlc3MgZmxhZ3NcbiAgICBpZiAoaGVhZGxlc3MpIHtcbiAgICAgIGJyb3dzZXJBcmdzID0gQXJyYXkuaXNBcnJheShicm93c2VyQXJncylcbiAgICAgICAgPyBicm93c2VyQXJncy5jb25jYXQoaGVhZGxlc3NGbGFncylcbiAgICAgICAgOiBoZWFkbGVzc0ZsYWdzO1xuICAgIH1cblxuICAgIC8vIGxvZ2luIHRvIHRoZSB1cmwgcHJvdmlkZWQgYW5kIHJldHJpZXZlIHRoZSBjb29raWVzXG4gICAgY29uc3QgY29va2llcyA9IGF3YWl0IGF1dGhDbGllbnQodXJsLCB1c2VybmFtZSwgcGFzc3dvcmQsIGJyb3dzZXJBcmdzKTtcblxuICAgIGNvbnN0IGNvb2tpZXNQYXRoID0gcmVzb2x2ZShqb2luKGRlc3QsIGAke2ZpbGVuYW1lfS5qc29uYCkpO1xuXG4gICAgd3JpdGVGaWxlU3luYyhjb29raWVzUGF0aCwgSlNPTi5zdHJpbmdpZnkoY29va2llcykpO1xuXG4gICAgdGhpcy5sb2coYCAg4pyUIENvb2tpZXMgcmV0cmlldmVkOiAke2Nvb2tpZXNQYXRofWApO1xuXG4gICAgcmV0dXJuIGNvb2tpZXM7XG4gIH1cbn1cbiJdfQ==