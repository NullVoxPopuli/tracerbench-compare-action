{"version":3,"file":"/Users/malynch/D/tracerbench/packages/cli/src/commands/marker-timings.ts","sources":["/Users/malynch/D/tracerbench/packages/cli/src/commands/marker-timings.ts"],"names":[],"mappings":"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","sourcesContent":["import { readJSONSync } from \"fs-extra\";\nimport * as path from \"path\";\n\nimport { TBBaseCommand } from \"../command-config\";\nimport { filter, traceFrame, tracepath, url } from \"../helpers/flags\";\nimport {\n  byTime,\n  collect,\n  findFrame,\n  format,\n  IEvent,\n  isCommitLoad,\n  isFrameMark,\n  isFrameNavigationStart,\n  isMark,\n  isUserMark,\n  setTraceEvents,\n} from \"../helpers/utils\";\n\nexport default class MarkerTimings extends TBBaseCommand {\n  public static description = \"Get list of all user-timings from trace\";\n\n  public static flags = {\n    tracepath: tracepath({ required: true }),\n    filter: filter(),\n    url: url({ required: true }),\n    traceFrame: traceFrame(),\n  };\n\n  public async run(): Promise<void> {\n    const { flags } = this.parse(MarkerTimings);\n    const { tracepath } = flags;\n    const filter = collect(flags.filter, []);\n    const traceFrame: string = flags.traceFrame ? flags.traceFrame : flags.url;\n\n    let frame: any = null;\n    let startTime = -1;\n    let rawTraceData: any = null;\n    let trace: any = null;\n\n    if (!traceFrame && !url) {\n      this.error(`Either a traceFrame or url are required flags.`);\n    }\n\n    try {\n      rawTraceData = readJSONSync(path.resolve(tracepath));\n    } catch (e) {\n      this.error(e);\n    }\n\n    try {\n      trace = setTraceEvents(rawTraceData);\n    } catch (e) {\n      this.error(e);\n    }\n\n    if (traceFrame.startsWith(\"http\")) {\n      frame = findFrame(trace, traceFrame);\n    } else {\n      frame = traceFrame;\n    }\n    if (!frame) {\n      this.error(`frame not found`);\n    }\n\n    trace\n      .filter((event: IEvent) => isMark(event) || isCommitLoad(event))\n      .sort(byTime)\n      .forEach((event: any) => {\n        if (isFrameNavigationStart(frame, event)) {\n          startTime = event.ts;\n          this.log(\n            `Marker Timings: ${format(event.ts, startTime)} ${event.name}`\n          );\n        } else if (isFrameMark(frame, event)) {\n          if (startTime === -1) {\n            startTime = event.ts;\n          }\n          this.log(\n            `Marker Timings: ${format(event.ts, startTime)} ${event.name}`\n          );\n        } else if (isUserMark(event)) {\n          if (\n            filter.length === 0 ||\n            filter.some((f: any) => event.name.indexOf(f) !== -1)\n          ) {\n            this.log(\n              `Marker Timings: ${format(event.ts, startTime)} ${event.name}`\n            );\n          }\n        } else if (isCommitLoad(event)) {\n          const { data } = event.args;\n          if (data.frame === frame) {\n            this.log(\n              `Marker Timings: ${format(event.ts, startTime)} ${event.name} ${\n                data.frame\n              } ${data.url}`\n            );\n          }\n        }\n      });\n  }\n}\n"]}