"use strict";function cov_2mhsuzh4f2(){var path="/Users/malynch/D/tracerbench/packages/cli/src/commands/record-har.ts";var hash="5838ab971862e2b40572d9531595d26cc24543ef";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/malynch/D/tracerbench/packages/cli/src/commands/record-har.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:4,column:15},end:{line:4,column:43}},"2":{start:{line:5,column:19},end:{line:5,column:38}},"3":{start:{line:6,column:15},end:{line:6,column:30}},"4":{start:{line:7,column:25},end:{line:7,column:53}},"5":{start:{line:8,column:28},end:{line:8,column:74}},"6":{start:{line:9,column:16},end:{line:9,column:43}},"7":{start:{line:12,column:26},end:{line:12,column:47}},"8":{start:{line:13,column:8},end:{line:13,column:96}},"9":{start:{line:16,column:26},end:{line:16,column:47}},"10":{start:{line:17,column:61},end:{line:17,column:66}},"11":{start:{line:18,column:55},end:{line:18,column:72}},"12":{start:{line:19,column:30},end:{line:19,column:47}},"13":{start:{line:20,column:27},end:{line:23,column:9}},"14":{start:{line:24,column:22},end:{line:31,column:9}},"15":{start:{line:32,column:8},end:{line:35,column:9}},"16":{start:{line:34,column:12},end:{line:34,column:77}},"17":{start:{line:37,column:8},end:{line:41,column:9}},"18":{start:{line:38,column:12},end:{line:40,column:52}},"19":{start:{line:43,column:27},end:{line:43,column:102}},"20":{start:{line:44,column:24},end:{line:44,column:60}},"21":{start:{line:45,column:8},end:{line:45,column:70}},"22":{start:{line:46,column:8},end:{line:46,column:64}},"23":{start:{line:49,column:0},end:{line:49,column:28}},"24":{start:{line:50,column:0},end:{line:50,column:59}},"25":{start:{line:51,column:0},end:{line:59,column:2}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:4},end:{line:11,column:5}},loc:{start:{line:11,column:17},end:{line:14,column:5}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:15,column:4},end:{line:15,column:5}},loc:{start:{line:15,column:16},end:{line:47,column:5}},line:15}},branchMap:{"0":{loc:{start:{line:21,column:21},end:{line:21,column:47}},type:"cond-expr",locations:[{start:{line:21,column:31},end:{line:21,column:38}},{start:{line:21,column:41},end:{line:21,column:47}}],line:21},"1":{loc:{start:{line:22,column:17},end:{line:22,column:68}},type:"cond-expr",locations:[{start:{line:22,column:35},end:{line:22,column:64}},{start:{line:22,column:67},end:{line:22,column:68}}],line:22},"2":{loc:{start:{line:32,column:8},end:{line:35,column:9}},type:"if",locations:[{start:{line:32,column:8},end:{line:35,column:9}},{start:{line:32,column:8},end:{line:35,column:9}}],line:32},"3":{loc:{start:{line:37,column:8},end:{line:41,column:9}},type:"if",locations:[{start:{line:37,column:8},end:{line:41,column:9}},{start:{line:37,column:8},end:{line:41,column:9}}],line:37},"4":{loc:{start:{line:38,column:26},end:{line:40,column:51}},type:"cond-expr",locations:[{start:{line:39,column:18},end:{line:39,column:71}},{start:{line:40,column:18},end:{line:40,column:51}}],line:38}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},inputSourceMap:{version:3,file:"/Users/malynch/D/tracerbench/packages/cli/src/commands/record-har.ts",sources:["/Users/malynch/D/tracerbench/packages/cli/src/commands/record-har.ts"],names:[],mappings:";;AAAA,qEAAqE;AACrE,4CAAiE;AACjE,uCAAmD;AACnD,+BAAqC;AAErC,sDAA6D;AAC7D,2EAAoE;AACpE,4CAQ0B;AAE1B,MAAqB,SAAU,SAAQ,8BAAa;IAW3C,KAAK,CAAC,IAAI;QACf,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,YAAY,GAAG,0BAAS,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IACzE,CAAC;IAEM,KAAK,CAAC,GAAG;QACd,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACxC,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;QAC3D,MAAM,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC;QACjE,IAAI,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC;QACxC,MAAM,UAAU,GAAgB;YAC9B,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM;YACnC,GAAG,EAAE,eAAe,CAAC,CAAC,CAAC,QAAQ,CAAC,eAAyB,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;SACnE,CAAC;QACF,IAAI,OAAO,GAAG;YACZ;gBACE,IAAI,EAAE,EAAE;gBACR,KAAK,EAAE,EAAE;gBACT,MAAM,EAAE,EAAE;gBACV,IAAI,EAAE,EAAE;aACT;SACF,CAAC;QACF,IAAI,WAAW,CAAC,MAAM,EAAE;YACtB,wBAAwB;YACxB,OAAO,GAAG,MAAM,mBAAQ,CAAC,cAAO,CAAC,WAAW,CAAC,CAAC,CAAC;SAChD;QAED,sDAAsD;QACtD,IAAI,QAAQ,EAAE;YACZ,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC;gBACtC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,iCAAa,CAAC;gBACnC,CAAC,CAAC,iCAAa,CAAC;SACnB;QAED,oDAAoD;QACpD,MAAM,UAAU,GAAG,MAAM,sBAAe,CACtC,GAAG,EACH,OAAO,EACP,MAAM,EACN,UAAU,EACV,WAAW,CACZ,CAAC;QAEF,MAAM,OAAO,GAAG,WAAI,CAAC,IAAI,EAAE,GAAG,QAAQ,MAAM,CAAC,CAAC;QAE9C,wBAAa,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;QAEnD,IAAI,CAAC,GAAG,CAAC,oCAAoC,OAAO,EAAE,CAAC,CAAC;IAC1D,CAAC;;AA3DH,4BA4DC;AA3De,qBAAW,GAAG,kCAAkC,CAAC;AACjD,eAAK,GAAG;IACpB,GAAG,EAAE,WAAG,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;IAChD,IAAI,EAAE,YAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IAC9B,WAAW,EAAE,mBAAW,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IAC5C,QAAQ,EAAE,gBAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,aAAa,EAAE,CAAC;IAC9D,MAAM,EAAE,cAAM,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IAClC,MAAM,EAAE,cAAM,EAAE;IAChB,QAAQ,EAAR,gBAAQ;CACT,CAAC",sourcesContent:["/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { IConditions, recordHARClient } from \"@tracerbench/core\";\nimport { readJson, writeFileSync } from \"fs-extra\";\nimport { join, resolve } from \"path\";\n\nimport { getConfig, TBBaseCommand } from \"../command-config\";\nimport { headlessFlags } from \"../command-config/default-flag-args\";\nimport {\n  config,\n  cookiespath,\n  dest,\n  filename,\n  headless,\n  marker,\n  url,\n} from \"../helpers/flags\";\n\nexport default class RecordHAR extends TBBaseCommand {\n  public static description = \"Generates a HAR file from a URL.\";\n  public static flags = {\n    url: url({ required: true, default: undefined }),\n    dest: dest({ required: true }),\n    cookiespath: cookiespath({ required: true }),\n    filename: filename({ required: true, default: \"tracerbench\" }),\n    marker: marker({ required: true }),\n    config: config(),\n    headless,\n  };\n  public async init() {\n    const { flags } = this.parse(RecordHAR);\n    this.parsedConfig = getConfig(flags.config, flags, this.explicitFlags);\n  }\n\n  public async run() {\n    const { flags } = this.parse(RecordHAR);\n    const { url, dest, cookiespath, filename, marker } = flags;\n    const { network, cpuThrottleRate, headless } = this.parsedConfig;\n    let { browserArgs } = this.parsedConfig;\n    const conditions: IConditions = {\n      network: network ? network : \"none\",\n      cpu: cpuThrottleRate ? parseInt(cpuThrottleRate as string, 10) : 1,\n    };\n    let cookies = [\n      {\n        name: \"\",\n        value: \"\",\n        domain: \"\",\n        path: \"\",\n      },\n    ];\n    if (cookiespath.length) {\n      // grab the auth cookies\n      cookies = await readJson(resolve(cookiespath));\n    }\n\n    // if headless flag is true include the headless flags\n    if (headless) {\n      browserArgs = Array.isArray(browserArgs)\n        ? browserArgs.concat(headlessFlags)\n        : headlessFlags;\n    }\n\n    // record the actual HAR and return the archive file\n    const harArchive = await recordHARClient(\n      url,\n      cookies,\n      marker,\n      conditions,\n      browserArgs\n    );\n\n    const harPath = join(dest, `${filename}.har`);\n\n    writeFileSync(harPath, JSON.stringify(harArchive));\n\n    this.log(`HAR recorded and available here: ${harPath}`);\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"5838ab971862e2b40572d9531595d26cc24543ef"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_2mhsuzh4f2=function(){return actualCoverage;};return actualCoverage;}cov_2mhsuzh4f2().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});/* eslint-disable @typescript-eslint/explicit-function-return-type */const core_1=(cov_2mhsuzh4f2().s[1]++,require("@tracerbench/core"));const fs_extra_1=(cov_2mhsuzh4f2().s[2]++,require("fs-extra"));const path_1=(cov_2mhsuzh4f2().s[3]++,require("path"));const command_config_1=(cov_2mhsuzh4f2().s[4]++,require("../command-config"));const default_flag_args_1=(cov_2mhsuzh4f2().s[5]++,require("../command-config/default-flag-args"));const flags_1=(cov_2mhsuzh4f2().s[6]++,require("../helpers/flags"));class RecordHAR extends(command_config_1.TBBaseCommand){async init(){cov_2mhsuzh4f2().f[0]++;const{flags}=(cov_2mhsuzh4f2().s[7]++,this.parse(RecordHAR));cov_2mhsuzh4f2().s[8]++;this.parsedConfig=command_config_1.getConfig(flags.config,flags,this.explicitFlags);}async run(){cov_2mhsuzh4f2().f[1]++;const{flags}=(cov_2mhsuzh4f2().s[9]++,this.parse(RecordHAR));const{url,dest,cookiespath,filename,marker}=(cov_2mhsuzh4f2().s[10]++,flags);const{network,cpuThrottleRate,headless}=(cov_2mhsuzh4f2().s[11]++,this.parsedConfig);let{browserArgs}=(cov_2mhsuzh4f2().s[12]++,this.parsedConfig);const conditions=(cov_2mhsuzh4f2().s[13]++,{network:network?(cov_2mhsuzh4f2().b[0][0]++,network):(cov_2mhsuzh4f2().b[0][1]++,"none"),cpu:cpuThrottleRate?(cov_2mhsuzh4f2().b[1][0]++,parseInt(cpuThrottleRate,10)):(cov_2mhsuzh4f2().b[1][1]++,1)});let cookies=(cov_2mhsuzh4f2().s[14]++,[{name:"",value:"",domain:"",path:""}]);cov_2mhsuzh4f2().s[15]++;if(cookiespath.length){cov_2mhsuzh4f2().b[2][0]++;cov_2mhsuzh4f2().s[16]++;// grab the auth cookies
cookies=await fs_extra_1.readJson(path_1.resolve(cookiespath));}else{cov_2mhsuzh4f2().b[2][1]++;}// if headless flag is true include the headless flags
cov_2mhsuzh4f2().s[17]++;if(headless){cov_2mhsuzh4f2().b[3][0]++;cov_2mhsuzh4f2().s[18]++;browserArgs=Array.isArray(browserArgs)?(cov_2mhsuzh4f2().b[4][0]++,browserArgs.concat(default_flag_args_1.headlessFlags)):(cov_2mhsuzh4f2().b[4][1]++,default_flag_args_1.headlessFlags);}else{cov_2mhsuzh4f2().b[3][1]++;}// record the actual HAR and return the archive file
const harArchive=(cov_2mhsuzh4f2().s[19]++,await core_1.recordHARClient(url,cookies,marker,conditions,browserArgs));const harPath=(cov_2mhsuzh4f2().s[20]++,path_1.join(dest,`${filename}.har`));cov_2mhsuzh4f2().s[21]++;fs_extra_1.writeFileSync(harPath,JSON.stringify(harArchive));cov_2mhsuzh4f2().s[22]++;this.log(`HAR recorded and available here: ${harPath}`);}}cov_2mhsuzh4f2().s[23]++;exports.default=RecordHAR;cov_2mhsuzh4f2().s[24]++;RecordHAR.description="Generates a HAR file from a URL.";cov_2mhsuzh4f2().s[25]++;RecordHAR.flags={url:flags_1.url({required:true,default:undefined}),dest:flags_1.dest({required:true}),cookiespath:flags_1.cookiespath({required:true}),filename:flags_1.filename({required:true,default:"tracerbench"}),marker:flags_1.marker({required:true}),config:flags_1.config(),headless:flags_1.headless};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL21hbHluY2gvRC90cmFjZXJiZW5jaC9wYWNrYWdlcy9jbGkvc3JjL2NvbW1hbmRzL3JlY29yZC1oYXIudHMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWx5bmNoL0QvdHJhY2VyYmVuY2gvcGFja2FnZXMvY2xpL3NyYy9jb21tYW5kcy9yZWNvcmQtaGFyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEscUVBQXFFO0FBQ3JFLDRDQUFpRTtBQUNqRSx1Q0FBbUQ7QUFDbkQsK0JBQXFDO0FBRXJDLHNEQUE2RDtBQUM3RCwyRUFBb0U7QUFDcEUsNENBUTBCO0FBRTFCLE1BQXFCLFNBQVUsU0FBUSw4QkFBYTtJQVczQyxLQUFLLENBQUMsSUFBSTtRQUNmLE1BQU0sRUFBRSxLQUFLLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3hDLElBQUksQ0FBQyxZQUFZLEdBQUcsMEJBQVMsQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDekUsQ0FBQztJQUVNLEtBQUssQ0FBQyxHQUFHO1FBQ2QsTUFBTSxFQUFFLEtBQUssRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDeEMsTUFBTSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsR0FBRyxLQUFLLENBQUM7UUFDM0QsTUFBTSxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsUUFBUSxFQUFFLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztRQUNqRSxJQUFJLEVBQUUsV0FBVyxFQUFFLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztRQUN4QyxNQUFNLFVBQVUsR0FBZ0I7WUFDOUIsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxNQUFNO1lBQ25DLEdBQUcsRUFBRSxlQUFlLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxlQUF5QixFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ25FLENBQUM7UUFDRixJQUFJLE9BQU8sR0FBRztZQUNaO2dCQUNFLElBQUksRUFBRSxFQUFFO2dCQUNSLEtBQUssRUFBRSxFQUFFO2dCQUNULE1BQU0sRUFBRSxFQUFFO2dCQUNWLElBQUksRUFBRSxFQUFFO2FBQ1Q7U0FDRixDQUFDO1FBQ0YsSUFBSSxXQUFXLENBQUMsTUFBTSxFQUFFO1lBQ3RCLHdCQUF3QjtZQUN4QixPQUFPLEdBQUcsTUFBTSxtQkFBUSxDQUFDLGNBQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO1NBQ2hEO1FBRUQsc0RBQXNEO1FBQ3RELElBQUksUUFBUSxFQUFFO1lBQ1osV0FBVyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDO2dCQUN0QyxDQUFDLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxpQ0FBYSxDQUFDO2dCQUNuQyxDQUFDLENBQUMsaUNBQWEsQ0FBQztTQUNuQjtRQUVELG9EQUFvRDtRQUNwRCxNQUFNLFVBQVUsR0FBRyxNQUFNLHNCQUFlLENBQ3RDLEdBQUcsRUFDSCxPQUFPLEVBQ1AsTUFBTSxFQUNOLFVBQVUsRUFDVixXQUFXLENBQ1osQ0FBQztRQUVGLE1BQU0sT0FBTyxHQUFHLFdBQUksQ0FBQyxJQUFJLEVBQUUsR0FBRyxRQUFRLE1BQU0sQ0FBQyxDQUFDO1FBRTlDLHdCQUFhLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztRQUVuRCxJQUFJLENBQUMsR0FBRyxDQUFDLG9DQUFvQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0lBQzFELENBQUM7O0FBM0RILDRCQTREQztBQTNEZSxxQkFBVyxHQUFHLGtDQUFrQyxDQUFDO0FBQ2pELGVBQUssR0FBRztJQUNwQixHQUFHLEVBQUUsV0FBRyxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLENBQUM7SUFDaEQsSUFBSSxFQUFFLFlBQUksQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQztJQUM5QixXQUFXLEVBQUUsbUJBQVcsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQztJQUM1QyxRQUFRLEVBQUUsZ0JBQVEsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBRSxDQUFDO0lBQzlELE1BQU0sRUFBRSxjQUFNLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDbEMsTUFBTSxFQUFFLGNBQU0sRUFBRTtJQUNoQixRQUFRLEVBQVIsZ0JBQVE7Q0FDVCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L2V4cGxpY2l0LWZ1bmN0aW9uLXJldHVybi10eXBlICovXG5pbXBvcnQgeyBJQ29uZGl0aW9ucywgcmVjb3JkSEFSQ2xpZW50IH0gZnJvbSBcIkB0cmFjZXJiZW5jaC9jb3JlXCI7XG5pbXBvcnQgeyByZWFkSnNvbiwgd3JpdGVGaWxlU3luYyB9IGZyb20gXCJmcy1leHRyYVwiO1xuaW1wb3J0IHsgam9pbiwgcmVzb2x2ZSB9IGZyb20gXCJwYXRoXCI7XG5cbmltcG9ydCB7IGdldENvbmZpZywgVEJCYXNlQ29tbWFuZCB9IGZyb20gXCIuLi9jb21tYW5kLWNvbmZpZ1wiO1xuaW1wb3J0IHsgaGVhZGxlc3NGbGFncyB9IGZyb20gXCIuLi9jb21tYW5kLWNvbmZpZy9kZWZhdWx0LWZsYWctYXJnc1wiO1xuaW1wb3J0IHtcbiAgY29uZmlnLFxuICBjb29raWVzcGF0aCxcbiAgZGVzdCxcbiAgZmlsZW5hbWUsXG4gIGhlYWRsZXNzLFxuICBtYXJrZXIsXG4gIHVybCxcbn0gZnJvbSBcIi4uL2hlbHBlcnMvZmxhZ3NcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVjb3JkSEFSIGV4dGVuZHMgVEJCYXNlQ29tbWFuZCB7XG4gIHB1YmxpYyBzdGF0aWMgZGVzY3JpcHRpb24gPSBcIkdlbmVyYXRlcyBhIEhBUiBmaWxlIGZyb20gYSBVUkwuXCI7XG4gIHB1YmxpYyBzdGF0aWMgZmxhZ3MgPSB7XG4gICAgdXJsOiB1cmwoeyByZXF1aXJlZDogdHJ1ZSwgZGVmYXVsdDogdW5kZWZpbmVkIH0pLFxuICAgIGRlc3Q6IGRlc3QoeyByZXF1aXJlZDogdHJ1ZSB9KSxcbiAgICBjb29raWVzcGF0aDogY29va2llc3BhdGgoeyByZXF1aXJlZDogdHJ1ZSB9KSxcbiAgICBmaWxlbmFtZTogZmlsZW5hbWUoeyByZXF1aXJlZDogdHJ1ZSwgZGVmYXVsdDogXCJ0cmFjZXJiZW5jaFwiIH0pLFxuICAgIG1hcmtlcjogbWFya2VyKHsgcmVxdWlyZWQ6IHRydWUgfSksXG4gICAgY29uZmlnOiBjb25maWcoKSxcbiAgICBoZWFkbGVzcyxcbiAgfTtcbiAgcHVibGljIGFzeW5jIGluaXQoKSB7XG4gICAgY29uc3QgeyBmbGFncyB9ID0gdGhpcy5wYXJzZShSZWNvcmRIQVIpO1xuICAgIHRoaXMucGFyc2VkQ29uZmlnID0gZ2V0Q29uZmlnKGZsYWdzLmNvbmZpZywgZmxhZ3MsIHRoaXMuZXhwbGljaXRGbGFncyk7XG4gIH1cblxuICBwdWJsaWMgYXN5bmMgcnVuKCkge1xuICAgIGNvbnN0IHsgZmxhZ3MgfSA9IHRoaXMucGFyc2UoUmVjb3JkSEFSKTtcbiAgICBjb25zdCB7IHVybCwgZGVzdCwgY29va2llc3BhdGgsIGZpbGVuYW1lLCBtYXJrZXIgfSA9IGZsYWdzO1xuICAgIGNvbnN0IHsgbmV0d29yaywgY3B1VGhyb3R0bGVSYXRlLCBoZWFkbGVzcyB9ID0gdGhpcy5wYXJzZWRDb25maWc7XG4gICAgbGV0IHsgYnJvd3NlckFyZ3MgfSA9IHRoaXMucGFyc2VkQ29uZmlnO1xuICAgIGNvbnN0IGNvbmRpdGlvbnM6IElDb25kaXRpb25zID0ge1xuICAgICAgbmV0d29yazogbmV0d29yayA/IG5ldHdvcmsgOiBcIm5vbmVcIixcbiAgICAgIGNwdTogY3B1VGhyb3R0bGVSYXRlID8gcGFyc2VJbnQoY3B1VGhyb3R0bGVSYXRlIGFzIHN0cmluZywgMTApIDogMSxcbiAgICB9O1xuICAgIGxldCBjb29raWVzID0gW1xuICAgICAge1xuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB2YWx1ZTogXCJcIixcbiAgICAgICAgZG9tYWluOiBcIlwiLFxuICAgICAgICBwYXRoOiBcIlwiLFxuICAgICAgfSxcbiAgICBdO1xuICAgIGlmIChjb29raWVzcGF0aC5sZW5ndGgpIHtcbiAgICAgIC8vIGdyYWIgdGhlIGF1dGggY29va2llc1xuICAgICAgY29va2llcyA9IGF3YWl0IHJlYWRKc29uKHJlc29sdmUoY29va2llc3BhdGgpKTtcbiAgICB9XG5cbiAgICAvLyBpZiBoZWFkbGVzcyBmbGFnIGlzIHRydWUgaW5jbHVkZSB0aGUgaGVhZGxlc3MgZmxhZ3NcbiAgICBpZiAoaGVhZGxlc3MpIHtcbiAgICAgIGJyb3dzZXJBcmdzID0gQXJyYXkuaXNBcnJheShicm93c2VyQXJncylcbiAgICAgICAgPyBicm93c2VyQXJncy5jb25jYXQoaGVhZGxlc3NGbGFncylcbiAgICAgICAgOiBoZWFkbGVzc0ZsYWdzO1xuICAgIH1cblxuICAgIC8vIHJlY29yZCB0aGUgYWN0dWFsIEhBUiBhbmQgcmV0dXJuIHRoZSBhcmNoaXZlIGZpbGVcbiAgICBjb25zdCBoYXJBcmNoaXZlID0gYXdhaXQgcmVjb3JkSEFSQ2xpZW50KFxuICAgICAgdXJsLFxuICAgICAgY29va2llcyxcbiAgICAgIG1hcmtlcixcbiAgICAgIGNvbmRpdGlvbnMsXG4gICAgICBicm93c2VyQXJnc1xuICAgICk7XG5cbiAgICBjb25zdCBoYXJQYXRoID0gam9pbihkZXN0LCBgJHtmaWxlbmFtZX0uaGFyYCk7XG5cbiAgICB3cml0ZUZpbGVTeW5jKGhhclBhdGgsIEpTT04uc3RyaW5naWZ5KGhhckFyY2hpdmUpKTtcblxuICAgIHRoaXMubG9nKGBIQVIgcmVjb3JkZWQgYW5kIGF2YWlsYWJsZSBoZXJlOiAke2hhclBhdGh9YCk7XG4gIH1cbn1cbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWx5bmNoL0QvdHJhY2VyYmVuY2gvcGFja2FnZXMvY2xpL3NyYy9jb21tYW5kcy9yZWNvcmQtaGFyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJxa1FBQUEscUVBQ0EsS0FBQSxDQUFBLE1BQUEsMEJBQUEsT0FBQSxDQUFBLG1CQUFBLENBQUEsQ0FBQSxDQUNBLEtBQUEsQ0FBQSxVQUFBLDBCQUFBLE9BQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxDQUNBLEtBQUEsQ0FBQSxNQUFBLDBCQUFBLE9BQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxDQUVBLEtBQUEsQ0FBQSxnQkFBQSwwQkFBQSxPQUFBLENBQUEsbUJBQUEsQ0FBQSxDQUFBLENBQ0EsS0FBQSxDQUFBLG1CQUFBLDBCQUFBLE9BQUEsQ0FBQSxxQ0FBQSxDQUFBLENBQUEsQ0FDQSxLQUFBLENBQUEsT0FBQSwwQkFBQSxPQUFBLENBQUEsa0JBQUEsQ0FBQSxDQUFBLENBVUEsS0FBcUIsQ0FBQSxTQUFyQixTQUF1QyxnQkFBQSxDQUFBLGFBQXZDLENBQW9ELENBVzNDLEtBQU0sQ0FBQSxJQUFOLEVBQVUseUJBQ2YsS0FBTSxDQUFFLEtBQUYsMkJBQVksS0FBSyxLQUFMLENBQVcsU0FBWCxDQUFaLENBQU4sQ0FEZSx3QkFFZixLQUFLLFlBQUwsQ0FBb0IsZ0JBQUEsQ0FBQSxTQUFBLENBQVUsS0FBSyxDQUFDLE1BQWhCLENBQXdCLEtBQXhCLENBQStCLEtBQUssYUFBcEMsQ0FBcEIsQ0FDRCxDQUVNLEtBQU0sQ0FBQSxHQUFOLEVBQVMseUJBQ2QsS0FBTSxDQUFFLEtBQUYsMkJBQVksS0FBSyxLQUFMLENBQVcsU0FBWCxDQUFaLENBQU4sQ0FDQSxLQUFNLENBQUUsR0FBRixDQUFPLElBQVAsQ0FBYSxXQUFiLENBQTBCLFFBQTFCLENBQW9DLE1BQXBDLDRCQUErQyxLQUEvQyxDQUFOLENBQ0EsS0FBTSxDQUFFLE9BQUYsQ0FBVyxlQUFYLENBQTRCLFFBQTVCLDRCQUF5QyxLQUFLLFlBQTlDLENBQU4sQ0FDQSxHQUFJLENBQUUsV0FBRiw0QkFBa0IsS0FBSyxZQUF2QixDQUFKLENBQ0EsS0FBTSxDQUFBLFVBQVUsMkJBQWdCLENBQzlCLE9BQU8sQ0FBRSxPQUFPLDZCQUFHLE9BQUgsOEJBQWEsTUFBYixDQURjLENBRTlCLEdBQUcsQ0FBRSxlQUFlLDZCQUFHLFFBQVEsQ0FBQyxlQUFELENBQTRCLEVBQTVCLENBQVgsOEJBQTZDLENBQTdDLENBRlUsQ0FBaEIsQ0FBaEIsQ0FJQSxHQUFJLENBQUEsT0FBTywyQkFBRyxDQUNaLENBQ0UsSUFBSSxDQUFFLEVBRFIsQ0FFRSxLQUFLLENBQUUsRUFGVCxDQUdFLE1BQU0sQ0FBRSxFQUhWLENBSUUsSUFBSSxDQUFFLEVBSlIsQ0FEWSxDQUFILENBQVgsQ0FUYyx5QkFpQmQsR0FBSSxXQUFXLENBQUMsTUFBaEIsQ0FBd0IscURBQ3RCO0FBQ0EsT0FBTyxDQUFHLEtBQU0sQ0FBQSxVQUFBLENBQUEsUUFBQSxDQUFTLE1BQUEsQ0FBQSxPQUFBLENBQVEsV0FBUixDQUFULENBQWhCLENBQ0QsQ0FIRCxpQ0FLQTtBQXRCYyx5QkF1QmQsR0FBSSxRQUFKLENBQWMscURBQ1osV0FBVyxDQUFHLEtBQUssQ0FBQyxPQUFOLENBQWMsV0FBZCw4QkFDVixXQUFXLENBQUMsTUFBWixDQUFtQixtQkFBQSxDQUFBLGFBQW5CLENBRFUsOEJBRVYsbUJBQUEsQ0FBQSxhQUZVLENBQWQsQ0FHRCxDQUpELGlDQU1BO0FBQ0EsS0FBTSxDQUFBLFVBQVUsMkJBQUcsS0FBTSxDQUFBLE1BQUEsQ0FBQSxlQUFBLENBQ3ZCLEdBRHVCLENBRXZCLE9BRnVCLENBR3ZCLE1BSHVCLENBSXZCLFVBSnVCLENBS3ZCLFdBTHVCLENBQVQsQ0FBaEIsQ0FRQSxLQUFNLENBQUEsT0FBTywyQkFBRyxNQUFBLENBQUEsSUFBQSxDQUFLLElBQUwsQ0FBVyxHQUFHLFFBQVEsTUFBdEIsQ0FBSCxDQUFiLENBdENjLHlCQXdDZCxVQUFBLENBQUEsYUFBQSxDQUFjLE9BQWQsQ0FBdUIsSUFBSSxDQUFDLFNBQUwsQ0FBZSxVQUFmLENBQXZCLEVBeENjLHlCQTBDZCxLQUFLLEdBQUwsQ0FBUyxvQ0FBb0MsT0FBTyxFQUFwRCxFQUNELENBM0RpRCxDLHlCQUFwRCxPQUFBLENBQUEsT0FBQSxDQUFBLFNBQUEsQyx5QkFDZ0IsU0FBQSxDQUFBLFdBQUEsQ0FBYyxrQ0FBZCxDLHlCQUNBLFNBQUEsQ0FBQSxLQUFBLENBQVEsQ0FDcEIsR0FBRyxDQUFFLE9BQUEsQ0FBQSxHQUFBLENBQUksQ0FBRSxRQUFRLENBQUUsSUFBWixDQUFrQixPQUFPLENBQUUsU0FBM0IsQ0FBSixDQURlLENBRXBCLElBQUksQ0FBRSxPQUFBLENBQUEsSUFBQSxDQUFLLENBQUUsUUFBUSxDQUFFLElBQVosQ0FBTCxDQUZjLENBR3BCLFdBQVcsQ0FBRSxPQUFBLENBQUEsV0FBQSxDQUFZLENBQUUsUUFBUSxDQUFFLElBQVosQ0FBWixDQUhPLENBSXBCLFFBQVEsQ0FBRSxPQUFBLENBQUEsUUFBQSxDQUFTLENBQUUsUUFBUSxDQUFFLElBQVosQ0FBa0IsT0FBTyxDQUFFLGFBQTNCLENBQVQsQ0FKVSxDQUtwQixNQUFNLENBQUUsT0FBQSxDQUFBLE1BQUEsQ0FBTyxDQUFFLFFBQVEsQ0FBRSxJQUFaLENBQVAsQ0FMWSxDQU1wQixNQUFNLENBQUUsT0FBQSxDQUFBLE1BQUEsRUFOWSxDQU9wQixRQUFRLENBQVIsT0FBQSxDQUFBLFFBUG9CLENBQVIsQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9leHBsaWNpdC1mdW5jdGlvbi1yZXR1cm4tdHlwZSAqL1xuaW1wb3J0IHsgSUNvbmRpdGlvbnMsIHJlY29yZEhBUkNsaWVudCB9IGZyb20gXCJAdHJhY2VyYmVuY2gvY29yZVwiO1xuaW1wb3J0IHsgcmVhZEpzb24sIHdyaXRlRmlsZVN5bmMgfSBmcm9tIFwiZnMtZXh0cmFcIjtcbmltcG9ydCB7IGpvaW4sIHJlc29sdmUgfSBmcm9tIFwicGF0aFwiO1xuXG5pbXBvcnQgeyBnZXRDb25maWcsIFRCQmFzZUNvbW1hbmQgfSBmcm9tIFwiLi4vY29tbWFuZC1jb25maWdcIjtcbmltcG9ydCB7IGhlYWRsZXNzRmxhZ3MgfSBmcm9tIFwiLi4vY29tbWFuZC1jb25maWcvZGVmYXVsdC1mbGFnLWFyZ3NcIjtcbmltcG9ydCB7XG4gIGNvbmZpZyxcbiAgY29va2llc3BhdGgsXG4gIGRlc3QsXG4gIGZpbGVuYW1lLFxuICBoZWFkbGVzcyxcbiAgbWFya2VyLFxuICB1cmwsXG59IGZyb20gXCIuLi9oZWxwZXJzL2ZsYWdzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlY29yZEhBUiBleHRlbmRzIFRCQmFzZUNvbW1hbmQge1xuICBwdWJsaWMgc3RhdGljIGRlc2NyaXB0aW9uID0gXCJHZW5lcmF0ZXMgYSBIQVIgZmlsZSBmcm9tIGEgVVJMLlwiO1xuICBwdWJsaWMgc3RhdGljIGZsYWdzID0ge1xuICAgIHVybDogdXJsKHsgcmVxdWlyZWQ6IHRydWUsIGRlZmF1bHQ6IHVuZGVmaW5lZCB9KSxcbiAgICBkZXN0OiBkZXN0KHsgcmVxdWlyZWQ6IHRydWUgfSksXG4gICAgY29va2llc3BhdGg6IGNvb2tpZXNwYXRoKHsgcmVxdWlyZWQ6IHRydWUgfSksXG4gICAgZmlsZW5hbWU6IGZpbGVuYW1lKHsgcmVxdWlyZWQ6IHRydWUsIGRlZmF1bHQ6IFwidHJhY2VyYmVuY2hcIiB9KSxcbiAgICBtYXJrZXI6IG1hcmtlcih7IHJlcXVpcmVkOiB0cnVlIH0pLFxuICAgIGNvbmZpZzogY29uZmlnKCksXG4gICAgaGVhZGxlc3MsXG4gIH07XG4gIHB1YmxpYyBhc3luYyBpbml0KCkge1xuICAgIGNvbnN0IHsgZmxhZ3MgfSA9IHRoaXMucGFyc2UoUmVjb3JkSEFSKTtcbiAgICB0aGlzLnBhcnNlZENvbmZpZyA9IGdldENvbmZpZyhmbGFncy5jb25maWcsIGZsYWdzLCB0aGlzLmV4cGxpY2l0RmxhZ3MpO1xuICB9XG5cbiAgcHVibGljIGFzeW5jIHJ1bigpIHtcbiAgICBjb25zdCB7IGZsYWdzIH0gPSB0aGlzLnBhcnNlKFJlY29yZEhBUik7XG4gICAgY29uc3QgeyB1cmwsIGRlc3QsIGNvb2tpZXNwYXRoLCBmaWxlbmFtZSwgbWFya2VyIH0gPSBmbGFncztcbiAgICBjb25zdCB7IG5ldHdvcmssIGNwdVRocm90dGxlUmF0ZSwgaGVhZGxlc3MgfSA9IHRoaXMucGFyc2VkQ29uZmlnO1xuICAgIGxldCB7IGJyb3dzZXJBcmdzIH0gPSB0aGlzLnBhcnNlZENvbmZpZztcbiAgICBjb25zdCBjb25kaXRpb25zOiBJQ29uZGl0aW9ucyA9IHtcbiAgICAgIG5ldHdvcms6IG5ldHdvcmsgPyBuZXR3b3JrIDogXCJub25lXCIsXG4gICAgICBjcHU6IGNwdVRocm90dGxlUmF0ZSA/IHBhcnNlSW50KGNwdVRocm90dGxlUmF0ZSBhcyBzdHJpbmcsIDEwKSA6IDEsXG4gICAgfTtcbiAgICBsZXQgY29va2llcyA9IFtcbiAgICAgIHtcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgdmFsdWU6IFwiXCIsXG4gICAgICAgIGRvbWFpbjogXCJcIixcbiAgICAgICAgcGF0aDogXCJcIixcbiAgICAgIH0sXG4gICAgXTtcbiAgICBpZiAoY29va2llc3BhdGgubGVuZ3RoKSB7XG4gICAgICAvLyBncmFiIHRoZSBhdXRoIGNvb2tpZXNcbiAgICAgIGNvb2tpZXMgPSBhd2FpdCByZWFkSnNvbihyZXNvbHZlKGNvb2tpZXNwYXRoKSk7XG4gICAgfVxuXG4gICAgLy8gaWYgaGVhZGxlc3MgZmxhZyBpcyB0cnVlIGluY2x1ZGUgdGhlIGhlYWRsZXNzIGZsYWdzXG4gICAgaWYgKGhlYWRsZXNzKSB7XG4gICAgICBicm93c2VyQXJncyA9IEFycmF5LmlzQXJyYXkoYnJvd3NlckFyZ3MpXG4gICAgICAgID8gYnJvd3NlckFyZ3MuY29uY2F0KGhlYWRsZXNzRmxhZ3MpXG4gICAgICAgIDogaGVhZGxlc3NGbGFncztcbiAgICB9XG5cbiAgICAvLyByZWNvcmQgdGhlIGFjdHVhbCBIQVIgYW5kIHJldHVybiB0aGUgYXJjaGl2ZSBmaWxlXG4gICAgY29uc3QgaGFyQXJjaGl2ZSA9IGF3YWl0IHJlY29yZEhBUkNsaWVudChcbiAgICAgIHVybCxcbiAgICAgIGNvb2tpZXMsXG4gICAgICBtYXJrZXIsXG4gICAgICBjb25kaXRpb25zLFxuICAgICAgYnJvd3NlckFyZ3NcbiAgICApO1xuXG4gICAgY29uc3QgaGFyUGF0aCA9IGpvaW4oZGVzdCwgYCR7ZmlsZW5hbWV9LmhhcmApO1xuXG4gICAgd3JpdGVGaWxlU3luYyhoYXJQYXRoLCBKU09OLnN0cmluZ2lmeShoYXJBcmNoaXZlKSk7XG5cbiAgICB0aGlzLmxvZyhgSEFSIHJlY29yZGVkIGFuZCBhdmFpbGFibGUgaGVyZTogJHtoYXJQYXRofWApO1xuICB9XG59XG4iXX0=