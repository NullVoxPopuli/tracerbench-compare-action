"use strict";/* eslint-disable @typescript-eslint/explicit-function-return-type */ /* eslint-disable @typescript-eslint/no-explicit-any */ /* eslint:disable:no-console*/function cov_vm1o9b4bx(){var path="/Users/malynch/D/tracerbench/packages/cli/src/helpers/utils.ts";var hash="bd8697dae96882a99f0c9a696fa35513fd53a167";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/malynch/D/tracerbench/packages/cli/src/helpers/utils.ts",statementMap:{"0":{start:{line:5,column:0},end:{line:5,column:62}},"1":{start:{line:6,column:0},end:{line:6,column:601}},"2":{start:{line:7,column:14},end:{line:7,column:30}},"3":{start:{line:8,column:19},end:{line:8,column:41}},"4":{start:{line:20,column:4},end:{line:22,column:5}},"5":{start:{line:21,column:8},end:{line:21,column:36}},"6":{start:{line:24,column:39},end:{line:24,column:67}},"7":{start:{line:25,column:4},end:{line:27,column:5}},"8":{start:{line:26,column:8},end:{line:26,column:36}},"9":{start:{line:28,column:4},end:{line:28,column:53}},"10":{start:{line:30,column:0},end:{line:30,column:76}},"11":{start:{line:41,column:4},end:{line:52,column:7}},"12":{start:{line:42,column:26},end:{line:42,column:35}},"13":{start:{line:43,column:27},end:{line:43,column:36}},"14":{start:{line:44,column:35},end:{line:44,column:98}},"15":{start:{line:45,column:27},end:{line:45,column:80}},"16":{start:{line:46,column:8},end:{line:51,column:9}},"17":{start:{line:47,column:12},end:{line:47,column:45}},"18":{start:{line:50,column:12},end:{line:50,column:35}},"19":{start:{line:53,column:4},end:{line:53,column:16}},"20":{start:{line:55,column:0},end:{line:55,column:30}},"21":{start:{line:57,column:4},end:{line:57,column:56}},"22":{start:{line:58,column:4},end:{line:58,column:41}},"23":{start:{line:60,column:0},end:{line:60,column:58}},"24":{start:{line:62,column:4},end:{line:62,column:56}},"25":{start:{line:63,column:4},end:{line:63,column:33}},"26":{start:{line:65,column:0},end:{line:65,column:58}},"27":{start:{line:67,column:4},end:{line:67,column:58}},"28":{start:{line:69,column:0},end:{line:69,column:40}},"29":{start:{line:71,column:4},end:{line:71,column:50}},"30":{start:{line:73,column:0},end:{line:73,column:44}},"31":{start:{line:75,column:4},end:{line:75,column:57}},"32":{start:{line:77,column:0},end:{line:77,column:24}},"33":{start:{line:79,column:4},end:{line:81,column:36}},"34":{start:{line:83,column:0},end:{line:83,column:34}},"35":{start:{line:85,column:4},end:{line:95,column:5}},"36":{start:{line:86,column:8},end:{line:87,column:25}},"37":{start:{line:87,column:12},end:{line:87,column:25}},"38":{start:{line:88,column:8},end:{line:90,column:9}},"39":{start:{line:89,column:12},end:{line:89,column:24}},"40":{start:{line:91,column:8},end:{line:91,column:21}},"41":{start:{line:94,column:8},end:{line:94,column:21}},"42":{start:{line:97,column:0},end:{line:97,column:40}},"43":{start:{line:99,column:4},end:{line:101,column:36}},"44":{start:{line:103,column:0},end:{line:103,column:56}},"45":{start:{line:105,column:4},end:{line:109,column:37}},"46":{start:{line:111,column:0},end:{line:111,column:36}},"47":{start:{line:113,column:4},end:{line:113,column:23}},"48":{start:{line:115,column:0},end:{line:115,column:24}},"49":{start:{line:117,column:18},end:{line:119,column:53}},"50":{start:{line:119,column:21},end:{line:119,column:52}},"51":{start:{line:120,column:4},end:{line:122,column:5}},"52":{start:{line:121,column:8},end:{line:121,column:37}},"53":{start:{line:123,column:4},end:{line:123,column:14}},"54":{start:{line:125,column:0},end:{line:125,column:30}},"55":{start:{line:127,column:14},end:{line:127,column:16}},"56":{start:{line:128,column:4},end:{line:130,column:5}},"57":{start:{line:129,column:8},end:{line:129,column:25}},"58":{start:{line:131,column:4},end:{line:136,column:5}},"59":{start:{line:131,column:17},end:{line:131,column:18}},"60":{start:{line:132,column:8},end:{line:135,column:11}},"61":{start:{line:137,column:4},end:{line:140,column:7}},"62":{start:{line:141,column:4},end:{line:141,column:13}},"63":{start:{line:143,column:0},end:{line:143,column:36}},"64":{start:{line:145,column:14},end:{line:145,column:16}},"65":{start:{line:146,column:4},end:{line:152,column:5}},"66":{start:{line:147,column:8},end:{line:149,column:9}},"67":{start:{line:148,column:12},end:{line:148,column:25}},"68":{start:{line:150,column:8},end:{line:150,column:28}},"69":{start:{line:151,column:8},end:{line:151,column:27}},"70":{start:{line:153,column:4},end:{line:153,column:13}},"71":{start:{line:155,column:0},end:{line:155,column:30}},"72":{start:{line:163,column:18},end:{line:163,column:33}},"73":{start:{line:164,column:28},end:{line:164,column:86}},"74":{start:{line:164,column:48},end:{line:164,column:85}},"75":{start:{line:165,column:4},end:{line:165,column:37}},"76":{start:{line:167,column:0},end:{line:167,column:44}},"77":{start:{line:169,column:4},end:{line:169,column:37}},"78":{start:{line:171,column:0},end:{line:171,column:46}},"79":{start:{line:172,column:0},end:{line:194,column:2}},"80":{start:{line:196,column:19},end:{line:196,column:49}},"81":{start:{line:197,column:4},end:{line:197,column:60}},"82":{start:{line:199,column:0},end:{line:199,column:46}},"83":{start:{line:201,column:4},end:{line:201,column:107}},"84":{start:{line:203,column:0},end:{line:203,column:32}},"85":{start:{line:205,column:25},end:{line:205,column:27}},"86":{start:{line:206,column:20},end:{line:206,column:23}},"87":{start:{line:207,column:23},end:{line:207,column:55}},"88":{start:{line:208,column:25},end:{line:208,column:50}},"89":{start:{line:209,column:26},end:{line:209,column:53}},"90":{start:{line:210,column:16},end:{line:210,column:155}},"91":{start:{line:211,column:4},end:{line:211,column:55}},"92":{start:{line:213,column:0},end:{line:213,column:24}},"93":{start:{line:215,column:4},end:{line:215,column:32}},"94":{start:{line:217,column:0},end:{line:217,column:30}},"95":{start:{line:219,column:4},end:{line:219,column:52}},"96":{start:{line:221,column:0},end:{line:221,column:38}},"97":{start:{line:223,column:14},end:{line:225,column:25}},"98":{start:{line:226,column:14},end:{line:228,column:25}},"99":{start:{line:229,column:4},end:{line:229,column:25}},"100":{start:{line:231,column:0},end:{line:231,column:38}}},fnMap:{"0":{name:"checkEnvironmentSpecificOverride",decl:{start:{line:19,column:9},end:{line:19,column:41}},loc:{start:{line:19,column:94},end:{line:29,column:1}},line:19},"1":{name:"mergeLeft",decl:{start:{line:40,column:9},end:{line:40,column:18}},loc:{start:{line:40,column:32},end:{line:54,column:1}},line:40},"2":{name:"(anonymous_2)",decl:{start:{line:41,column:31},end:{line:41,column:32}},loc:{start:{line:41,column:40},end:{line:52,column:5}},line:41},"3":{name:"convertMicrosecondsToMS",decl:{start:{line:56,column:9},end:{line:56,column:32}},loc:{start:{line:56,column:37},end:{line:59,column:1}},line:56},"4":{name:"convertMSToMicroseconds",decl:{start:{line:61,column:9},end:{line:61,column:32}},loc:{start:{line:61,column:37},end:{line:64,column:1}},line:61},"5":{name:"setTraceEvents",decl:{start:{line:66,column:9},end:{line:66,column:23}},loc:{start:{line:66,column:30},end:{line:68,column:1}},line:66},"6":{name:"formatToDuration",decl:{start:{line:70,column:9},end:{line:70,column:25}},loc:{start:{line:70,column:37},end:{line:72,column:1}},line:70},"7":{name:"isMark",decl:{start:{line:74,column:9},end:{line:74,column:15}},loc:{start:{line:74,column:23},end:{line:76,column:1}},line:74},"8":{name:"isFrameMark",decl:{start:{line:78,column:9},end:{line:78,column:20}},loc:{start:{line:78,column:35},end:{line:82,column:1}},line:78},"9":{name:"isDocLoaderURL",decl:{start:{line:84,column:9},end:{line:84,column:23}},loc:{start:{line:84,column:36},end:{line:96,column:1}},line:84},"10":{name:"isFrameNavigationStart",decl:{start:{line:98,column:9},end:{line:98,column:31}},loc:{start:{line:98,column:51},end:{line:102,column:1}},line:98},"11":{name:"isCommitLoad",decl:{start:{line:104,column:9},end:{line:104,column:21}},loc:{start:{line:104,column:29},end:{line:110,column:1}},line:104},"12":{name:"byTime",decl:{start:{line:112,column:9},end:{line:112,column:15}},loc:{start:{line:112,column:22},end:{line:114,column:1}},line:112},"13":{name:"findFrame",decl:{start:{line:116,column:9},end:{line:116,column:18}},loc:{start:{line:116,column:32},end:{line:124,column:1}},line:116},"14":{name:"(anonymous_14)",decl:{start:{line:119,column:14},end:{line:119,column:15}},loc:{start:{line:119,column:21},end:{line:119,column:52}},line:119},"15":{name:"parseMarkers",decl:{start:{line:126,column:9},end:{line:126,column:21}},loc:{start:{line:126,column:25},end:{line:142,column:1}},line:126},"16":{name:"fillArray",decl:{start:{line:144,column:9},end:{line:144,column:18}},loc:{start:{line:144,column:49},end:{line:154,column:1}},line:144},"17":{name:"convertToTypable",decl:{start:{line:162,column:9},end:{line:162,column:25}},loc:{start:{line:162,column:32},end:{line:166,column:1}},line:162},"18":{name:"(anonymous_18)",decl:{start:{line:164,column:38},end:{line:164,column:39}},loc:{start:{line:164,column:48},end:{line:164,column:85}},line:164},"19":{name:"toNearestHundreth",decl:{start:{line:168,column:9},end:{line:168,column:26}},loc:{start:{line:168,column:30},end:{line:170,column:1}},line:168},"20":{name:"convertToSentCase",decl:{start:{line:195,column:9},end:{line:195,column:26}},loc:{start:{line:195,column:32},end:{line:198,column:1}},line:195},"21":{name:"logHeading",decl:{start:{line:200,column:9},end:{line:200,column:19}},loc:{start:{line:200,column:29},end:{line:202,column:1}},line:200},"22":{name:"logBar",decl:{start:{line:204,column:9},end:{line:204,column:15}},loc:{start:{line:204,column:21},end:{line:212,column:1}},line:204},"23":{name:"timestamp",decl:{start:{line:214,column:9},end:{line:214,column:18}},loc:{start:{line:214,column:21},end:{line:216,column:1}},line:214},"24":{name:"durationInSec",decl:{start:{line:218,column:9},end:{line:218,column:22}},loc:{start:{line:218,column:43},end:{line:220,column:1}},line:218},"25":{name:"secondsToTime",decl:{start:{line:222,column:9},end:{line:222,column:22}},loc:{start:{line:222,column:28},end:{line:230,column:1}},line:222}},branchMap:{"0":{loc:{start:{line:20,column:4},end:{line:22,column:5}},type:"if",locations:[{start:{line:20,column:4},end:{line:22,column:5}},{start:{line:20,column:4},end:{line:22,column:5}}],line:20},"1":{loc:{start:{line:20,column:8},end:{line:20,column:50}},type:"binary-expr",locations:[{start:{line:20,column:8},end:{line:20,column:17}},{start:{line:20,column:21},end:{line:20,column:50}}],line:20},"2":{loc:{start:{line:25,column:4},end:{line:27,column:5}},type:"if",locations:[{start:{line:25,column:4},end:{line:27,column:5}},{start:{line:25,column:4},end:{line:27,column:5}}],line:25},"3":{loc:{start:{line:44,column:35},end:{line:44,column:98}},type:"binary-expr",locations:[{start:{line:44,column:35},end:{line:44,column:64}},{start:{line:44,column:68},end:{line:44,column:98}}],line:44},"4":{loc:{start:{line:45,column:27},end:{line:45,column:80}},type:"binary-expr",locations:[{start:{line:45,column:27},end:{line:45,column:51}},{start:{line:45,column:55},end:{line:45,column:80}}],line:45},"5":{loc:{start:{line:46,column:8},end:{line:51,column:9}},type:"if",locations:[{start:{line:46,column:8},end:{line:51,column:9}},{start:{line:46,column:8},end:{line:51,column:9}}],line:46},"6":{loc:{start:{line:46,column:12},end:{line:46,column:74}},type:"binary-expr",locations:[{start:{line:46,column:12},end:{line:46,column:30}},{start:{line:46,column:35},end:{line:46,column:44}},{start:{line:46,column:48},end:{line:46,column:58}},{start:{line:46,column:63},end:{line:46,column:74}}],line:46},"7":{loc:{start:{line:57,column:9},end:{line:57,column:55}},type:"cond-expr",locations:[{start:{line:57,column:34},end:{line:57,column:50}},{start:{line:57,column:53},end:{line:57,column:55}}],line:57},"8":{loc:{start:{line:62,column:9},end:{line:62,column:55}},type:"cond-expr",locations:[{start:{line:62,column:34},end:{line:62,column:50}},{start:{line:62,column:53},end:{line:62,column:55}}],line:62},"9":{loc:{start:{line:67,column:11},end:{line:67,column:57}},type:"cond-expr",locations:[{start:{line:67,column:34},end:{line:67,column:50}},{start:{line:67,column:53},end:{line:67,column:57}}],line:67},"10":{loc:{start:{line:79,column:12},end:{line:81,column:34}},type:"binary-expr",locations:[{start:{line:79,column:12},end:{line:79,column:28}},{start:{line:80,column:8},end:{line:80,column:37}},{start:{line:81,column:8},end:{line:81,column:34}}],line:79},"11":{loc:{start:{line:86,column:8},end:{line:87,column:25}},type:"if",locations:[{start:{line:86,column:8},end:{line:87,column:25}},{start:{line:86,column:8},end:{line:87,column:25}}],line:86},"12":{loc:{start:{line:88,column:8},end:{line:90,column:9}},type:"if",locations:[{start:{line:88,column:8},end:{line:90,column:9}},{start:{line:88,column:8},end:{line:90,column:9}}],line:88},"13":{loc:{start:{line:99,column:12},end:{line:101,column:34}},type:"binary-expr",locations:[{start:{line:99,column:12},end:{line:99,column:37}},{start:{line:100,column:8},end:{line:100,column:40}},{start:{line:101,column:8},end:{line:101,column:34}}],line:99},"14":{loc:{start:{line:105,column:12},end:{line:109,column:35}},type:"binary-expr",locations:[{start:{line:105,column:12},end:{line:105,column:28}},{start:{line:106,column:8},end:{line:106,column:35}},{start:{line:107,column:8},end:{line:107,column:37}},{start:{line:108,column:8},end:{line:108,column:37}},{start:{line:109,column:8},end:{line:109,column:35}}],line:105},"15":{loc:{start:{line:120,column:4},end:{line:122,column:5}},type:"if",locations:[{start:{line:120,column:4},end:{line:122,column:5}},{start:{line:120,column:4},end:{line:122,column:5}}],line:120},"16":{loc:{start:{line:128,column:4},end:{line:130,column:5}},type:"if",locations:[{start:{line:128,column:4},end:{line:130,column:5}},{start:{line:128,column:4},end:{line:130,column:5}}],line:128},"17":{loc:{start:{line:144,column:29},end:{line:144,column:37}},type:"default-arg",locations:[{start:{line:144,column:36},end:{line:144,column:37}}],line:144},"18":{loc:{start:{line:144,column:39},end:{line:144,column:47}},type:"default-arg",locations:[{start:{line:144,column:46},end:{line:144,column:47}}],line:144},"19":{loc:{start:{line:147,column:8},end:{line:149,column:9}},type:"if",locations:[{start:{line:147,column:8},end:{line:149,column:9}},{start:{line:147,column:8},end:{line:149,column:9}}],line:147}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0,0,0,0],"15":[0,0],"16":[0,0],"17":[0],"18":[0],"19":[0,0]},inputSourceMap:{version:3,file:"/Users/malynch/D/tracerbench/packages/cli/src/helpers/utils.ts",sources:["/Users/malynch/D/tracerbench/packages/cli/src/helpers/utils.ts"],names:[],mappings:"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",sourcesContent:["/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint:disable:no-console*/\n\nimport { Marker } from \"@tracerbench/core\";\nimport {\n  Constants,\n  MarkTraceEvent,\n  TraceEvent,\n  TraceStreamJson,\n} from \"@tracerbench/trace-event\";\nimport * as chalk from \"chalk\";\nimport * as logSymbols from \"log-symbols\";\n\nimport {\n  IBenchmarkEnvironmentOverride,\n  ITBConfig,\n} from \"../command-config/tb-config\";\nimport { ICompareFlags } from \"../commands/compare\";\n\n/**\n * Handles checking if there is a specific override for the attributeName in the tbConfigs for the given overrideObjectName.\n * Defaults to whatever is in the flags object if there is no override.\n *\n * @param attributeName - Attribute name to check if there is an override in overrideObjectName from tbConfig\n * @param flags - Object containing configs parsed from the Command class\n * @param overrideObjectName - Either \"controlBenchmarkEnvironment\" or \"experimentBenchmarkEnvironment\"\n * @param tbConfig - This refers to the parsed JSON from the config file if it exists\n */\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function checkEnvironmentSpecificOverride(\n  attributeName: keyof ICompareFlags,\n  flags: ICompareFlags,\n  overrideObjectName: string,\n  tbConfig?: ITBConfig\n): any {\n  if (!tbConfig || !tbConfig[overrideObjectName]) {\n    return flags[attributeName];\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const environmentSpecificConfigs: IBenchmarkEnvironmentOverride = tbConfig[\n    overrideObjectName\n  ]!;\n\n  if (!environmentSpecificConfigs[attributeName]) {\n    return flags[attributeName];\n  }\n\n  return environmentSpecificConfigs[attributeName];\n}\n\n/**\n * Merge the contents of the right object into the left. Simply replace numbers, strings, arrays\n * and recursively call this function with objects.\n *\n * Note that typeof null == 'object'\n *\n * @param left - Destination object\n * @param right - Content of this object takes precedence\n */\nexport function mergeLeft(\n  left: { [key: string]: any },\n  right: { [key: string]: any }\n): { [key: string]: any } {\n  Object.keys(right).forEach((key) => {\n    const leftValue = left[key];\n    const rightValue = left[key];\n    const matchingObjectType =\n      typeof leftValue === \"object\" && typeof rightValue === \"object\";\n    const isOneArray = Array.isArray(leftValue) || Array.isArray(rightValue);\n\n    if (matchingObjectType && (left[key] || right[key]) && !isOneArray) {\n      mergeLeft(left[key], right[key]);\n    } else {\n      left[key] = right[key];\n    }\n  });\n\n  return left;\n}\n\nexport function convertMicrosecondsToMS(ms: string | number): number {\n  ms = typeof ms === \"string\" ? parseInt(ms, 10) : ms;\n  return Math.floor(ms * 100) / 100000;\n}\n\nexport function convertMSToMicroseconds(ms: string | number): number {\n  ms = typeof ms === \"string\" ? parseInt(ms, 10) : ms;\n  return Math.floor(ms * 1000);\n}\n\nexport function setTraceEvents(\n  file: TraceEvent[] | TraceStreamJson\n): TraceEvent[] {\n  return !Array.isArray(file) ? file.traceEvents : file;\n}\n\nexport function formatToDuration(ts: number, start: number): number {\n  return toNearestHundreth((ts - start) / 1000);\n}\n\nexport function isMark(event: TraceEvent): event is MarkTraceEvent {\n  return event.ph === Constants.TRACE_EVENT_PHASE_MARK;\n}\n\nexport function isFrameMark(\n  frame: string,\n  event: TraceEvent\n): event is MarkTraceEvent {\n  return (\n    event.ph === Constants.TRACE_EVENT_PHASE_MARK &&\n    event.args !== Constants.STRIPPED &&\n    event.args.frame === frame\n  );\n}\n\nexport function isDocLoaderURL(event: MarkTraceEvent, url: string): boolean {\n  try {\n    if (event.args === Constants.STRIPPED) return false;\n    if ((event.args.data as any).documentLoaderURL === url) {\n      return true;\n    }\n    return false;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport function isFrameNavigationStart(\n  frame: string,\n  event: TraceEvent,\n  url: string\n): boolean {\n  return (\n    isFrameMark(frame, event) &&\n    event.name === \"navigationStart\" &&\n    isDocLoaderURL(event, url)\n  );\n}\n\nexport function isCommitLoad(event: TraceEvent): boolean {\n  return (\n    event.ph === Constants.TRACE_EVENT_PHASE_COMPLETE &&\n    event.name === \"CommitLoad\" &&\n    event.args !== Constants.STRIPPED &&\n    event.args.data !== undefined &&\n    (event.args.data as any).isMainFrame\n  );\n}\n\nexport function byTime(a: { ts: number }, b: { ts: number }): number {\n  return a.ts - b.ts;\n}\n\nexport function findFrame(events: TraceEvent[], url: string): string {\n  const event = events\n    .filter(isCommitLoad)\n    .find((e: any) => e.args.data.url.startsWith(url));\n  if (event) {\n    return (event.args as any).data.frame;\n  }\n  return \"\";\n}\n\nexport function parseMarkers(m: string | string[]): Marker[] {\n  const a: Marker[] = [];\n  if (typeof m === \"string\") {\n    m = m.split(\",\");\n  }\n\n  for (let i = 1; i < m.length; i++) {\n    a.push({\n      start: m[i - 1],\n      label: m[i],\n    });\n  }\n\n  a.push({\n    start: m[m.length - 1],\n    label: \"paint\",\n  });\n\n  return a;\n}\n\nexport function fillArray(arrLngth: number, incr = 1, strt = 0): number[] {\n  const a = [];\n  while (a.length < arrLngth) {\n    if (a.length < 1) {\n      a.push(strt);\n    }\n    a.push(strt + incr);\n    strt = strt + incr;\n  }\n  return a;\n}\n\n/**\n * \"name\" is expected to be a titlecased string. We want something the user can type easily so the passed string\n * is converted into lowercased words dasherized. Any extra \"/\" will also be removed.\n *\n * @param str - String to be converted to dasherized case\n */\nexport function convertToTypable(name: string): string {\n  const split = name.split(\" \");\n  const lowercasedWords = split.map((word) =>\n    word.toLowerCase().replace(/\\//g, \"\")\n  );\n  return lowercasedWords.join(\"-\");\n}\n\nexport function toNearestHundreth(n: number): number {\n  return Math.round(n * 100) / 100;\n}\n\nexport const chalkScheme = {\n  white: chalk.rgb(255, 255, 255),\n  warning: chalk.rgb(255, 174, 66),\n  header: chalk.rgb(255, 255, 255),\n  regress: chalk.rgb(239, 100, 107),\n  neutral: chalk.rgb(225, 225, 225),\n  significant: chalk.rgb(0, 191, 255),\n  imprv: chalk.rgb(135, 197, 113),\n  phase: chalk.rgb(225, 225, 225),\n  faint: chalk.rgb(80, 80, 80),\n  checkmark: chalk.rgb(133, 153, 36)(`${logSymbols.success}`),\n  blackBgGreen: chalk.green.bgGreen,\n  blackBgRed: chalk.rgb(239, 100, 107).bgRed,\n  blackBgBlue: chalk.rgb(24, 132, 228).bgRgb(24, 132, 228),\n  blackBgYellow: chalk.rgb(255, 174, 66).bgRgb(255, 174, 66),\n  tbBranding: {\n    lime: chalk.rgb(199, 241, 106),\n    blue: chalk.rgb(24, 132, 228),\n    aqua: chalk.rgb(56, 210, 211),\n    dkBlue: chalk.rgb(10, 45, 70),\n    grey: chalk.rgb(153, 153, 153),\n  },\n};\n\nexport function convertToSentCase(str: string): string {\n  const result = str.replace(/([A-Z])/g, \" $1\");\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport function logHeading(heading: string): void {\n  console.log(\n    `\\n${chalkScheme.blackBgBlue(`    ${chalkScheme.white(heading)}    `)}\\n`\n  );\n}\n\nexport type logBarOptions = {\n  totalDuration: number;\n  duration: number;\n  title: string;\n};\n\nexport function logBar(ops: logBarOptions): string {\n  const maxBarLength = 60;\n  const barTick = \"\u25A0\";\n  const barSegment = ops.totalDuration / maxBarLength;\n  const fullSegments = ops.duration / barSegment;\n  const emptySegments = maxBarLength - fullSegments;\n  const bar = `${chalkScheme.tbBranding.blue(\n    barTick.repeat(fullSegments)\n  )}${chalkScheme.tbBranding.grey(barTick.repeat(emptySegments))}`;\n\n  return `${ops.title}\\n${bar} ${ops.duration} ms\\n`;\n}\n\nexport function timestamp(): number {\n  return new Date().getTime();\n}\n\nexport function durationInSec(endTime: number, startTime: number): number {\n  return Math.round((endTime - startTime) / 1000);\n}\n\nexport function secondsToTime(sec: number): string {\n  const m = Math.floor((sec % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const s = Math.floor(sec % 60)\n    .toString()\n    .padStart(2, \"0\");\n\n  return `${m}m:${s}s`;\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"bd8697dae96882a99f0c9a696fa35513fd53a167"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_vm1o9b4bx=function(){return actualCoverage;};}return actualCoverage;}cov_vm1o9b4bx();cov_vm1o9b4bx().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_vm1o9b4bx().s[1]++;exports.secondsToTime=exports.durationInSec=exports.timestamp=exports.logBar=exports.logHeading=exports.convertToSentCase=exports.chalkScheme=exports.toNearestHundreth=exports.convertToTypable=exports.fillArray=exports.parseMarkers=exports.findFrame=exports.byTime=exports.isCommitLoad=exports.isFrameNavigationStart=exports.isDocLoaderURL=exports.isFrameMark=exports.isMark=exports.formatToDuration=exports.setTraceEvents=exports.convertMSToMicroseconds=exports.convertMicrosecondsToMS=exports.mergeLeft=exports.checkEnvironmentSpecificOverride=void 0;const chalk=(cov_vm1o9b4bx().s[2]++,require("chalk"));const logSymbols=(cov_vm1o9b4bx().s[3]++,require("log-symbols"));/**
 * Handles checking if there is a specific override for the attributeName in the tbConfigs for the given overrideObjectName.
 * Defaults to whatever is in the flags object if there is no override.
 *
 * @param attributeName - Attribute name to check if there is an override in overrideObjectName from tbConfig
 * @param flags - Object containing configs parsed from the Command class
 * @param overrideObjectName - Either "controlBenchmarkEnvironment" or "experimentBenchmarkEnvironment"
 * @param tbConfig - This refers to the parsed JSON from the config file if it exists
 */ // eslint-disable-next-line @typescript-eslint/explicit-function-return-type
function checkEnvironmentSpecificOverride(attributeName,flags,overrideObjectName,tbConfig){cov_vm1o9b4bx().f[0]++;cov_vm1o9b4bx().s[4]++;if((cov_vm1o9b4bx().b[1][0]++,!tbConfig)||(cov_vm1o9b4bx().b[1][1]++,!tbConfig[overrideObjectName])){cov_vm1o9b4bx().b[0][0]++;cov_vm1o9b4bx().s[5]++;return flags[attributeName];}else{cov_vm1o9b4bx().b[0][1]++;}// eslint-disable-next-line @typescript-eslint/no-non-null-assertion
const environmentSpecificConfigs=(cov_vm1o9b4bx().s[6]++,tbConfig[overrideObjectName]);cov_vm1o9b4bx().s[7]++;if(!environmentSpecificConfigs[attributeName]){cov_vm1o9b4bx().b[2][0]++;cov_vm1o9b4bx().s[8]++;return flags[attributeName];}else{cov_vm1o9b4bx().b[2][1]++;}cov_vm1o9b4bx().s[9]++;return environmentSpecificConfigs[attributeName];}cov_vm1o9b4bx().s[10]++;exports.checkEnvironmentSpecificOverride=checkEnvironmentSpecificOverride;/**
 * Merge the contents of the right object into the left. Simply replace numbers, strings, arrays
 * and recursively call this function with objects.
 *
 * Note that typeof null == 'object'
 *
 * @param left - Destination object
 * @param right - Content of this object takes precedence
 */function mergeLeft(left,right){cov_vm1o9b4bx().f[1]++;cov_vm1o9b4bx().s[11]++;Object.keys(right).forEach(key=>{cov_vm1o9b4bx().f[2]++;const leftValue=(cov_vm1o9b4bx().s[12]++,left[key]);const rightValue=(cov_vm1o9b4bx().s[13]++,left[key]);const matchingObjectType=(cov_vm1o9b4bx().s[14]++,(cov_vm1o9b4bx().b[3][0]++,typeof leftValue==="object")&&(cov_vm1o9b4bx().b[3][1]++,typeof rightValue==="object"));const isOneArray=(cov_vm1o9b4bx().s[15]++,(cov_vm1o9b4bx().b[4][0]++,Array.isArray(leftValue))||(cov_vm1o9b4bx().b[4][1]++,Array.isArray(rightValue)));cov_vm1o9b4bx().s[16]++;if((cov_vm1o9b4bx().b[6][0]++,matchingObjectType)&&((cov_vm1o9b4bx().b[6][1]++,left[key])||(cov_vm1o9b4bx().b[6][2]++,right[key]))&&(cov_vm1o9b4bx().b[6][3]++,!isOneArray)){cov_vm1o9b4bx().b[5][0]++;cov_vm1o9b4bx().s[17]++;mergeLeft(left[key],right[key]);}else{cov_vm1o9b4bx().b[5][1]++;cov_vm1o9b4bx().s[18]++;left[key]=right[key];}});cov_vm1o9b4bx().s[19]++;return left;}cov_vm1o9b4bx().s[20]++;exports.mergeLeft=mergeLeft;function convertMicrosecondsToMS(ms){cov_vm1o9b4bx().f[3]++;cov_vm1o9b4bx().s[21]++;ms=typeof ms==="string"?(cov_vm1o9b4bx().b[7][0]++,parseInt(ms,10)):(cov_vm1o9b4bx().b[7][1]++,ms);cov_vm1o9b4bx().s[22]++;return Math.floor(ms*100)/100000;}cov_vm1o9b4bx().s[23]++;exports.convertMicrosecondsToMS=convertMicrosecondsToMS;function convertMSToMicroseconds(ms){cov_vm1o9b4bx().f[4]++;cov_vm1o9b4bx().s[24]++;ms=typeof ms==="string"?(cov_vm1o9b4bx().b[8][0]++,parseInt(ms,10)):(cov_vm1o9b4bx().b[8][1]++,ms);cov_vm1o9b4bx().s[25]++;return Math.floor(ms*1000);}cov_vm1o9b4bx().s[26]++;exports.convertMSToMicroseconds=convertMSToMicroseconds;function setTraceEvents(file){cov_vm1o9b4bx().f[5]++;cov_vm1o9b4bx().s[27]++;return!Array.isArray(file)?(cov_vm1o9b4bx().b[9][0]++,file.traceEvents):(cov_vm1o9b4bx().b[9][1]++,file);}cov_vm1o9b4bx().s[28]++;exports.setTraceEvents=setTraceEvents;function formatToDuration(ts,start){cov_vm1o9b4bx().f[6]++;cov_vm1o9b4bx().s[29]++;return toNearestHundreth((ts-start)/1000);}cov_vm1o9b4bx().s[30]++;exports.formatToDuration=formatToDuration;function isMark(event){cov_vm1o9b4bx().f[7]++;cov_vm1o9b4bx().s[31]++;return event.ph==="R"/* TRACE_EVENT_PHASE_MARK */;}cov_vm1o9b4bx().s[32]++;exports.isMark=isMark;function isFrameMark(frame,event){cov_vm1o9b4bx().f[8]++;cov_vm1o9b4bx().s[33]++;return(cov_vm1o9b4bx().b[10][0]++,event.ph==="R"/* TRACE_EVENT_PHASE_MARK */)&&(cov_vm1o9b4bx().b[10][1]++,event.args!=="__stripped__")/* STRIPPED */&&(cov_vm1o9b4bx().b[10][2]++,event.args.frame===frame);}cov_vm1o9b4bx().s[34]++;exports.isFrameMark=isFrameMark;function isDocLoaderURL(event,url){cov_vm1o9b4bx().f[9]++;cov_vm1o9b4bx().s[35]++;try{cov_vm1o9b4bx().s[36]++;if(event.args==="__stripped__"/* STRIPPED */){cov_vm1o9b4bx().b[11][0]++;cov_vm1o9b4bx().s[37]++;return false;}else{cov_vm1o9b4bx().b[11][1]++;}cov_vm1o9b4bx().s[38]++;if(event.args.data.documentLoaderURL===url){cov_vm1o9b4bx().b[12][0]++;cov_vm1o9b4bx().s[39]++;return true;}else{cov_vm1o9b4bx().b[12][1]++;}cov_vm1o9b4bx().s[40]++;return false;}catch(e){cov_vm1o9b4bx().s[41]++;return false;}}cov_vm1o9b4bx().s[42]++;exports.isDocLoaderURL=isDocLoaderURL;function isFrameNavigationStart(frame,event,url){cov_vm1o9b4bx().f[10]++;cov_vm1o9b4bx().s[43]++;return(cov_vm1o9b4bx().b[13][0]++,isFrameMark(frame,event))&&(cov_vm1o9b4bx().b[13][1]++,event.name==="navigationStart")&&(cov_vm1o9b4bx().b[13][2]++,isDocLoaderURL(event,url));}cov_vm1o9b4bx().s[44]++;exports.isFrameNavigationStart=isFrameNavigationStart;function isCommitLoad(event){cov_vm1o9b4bx().f[11]++;cov_vm1o9b4bx().s[45]++;return(cov_vm1o9b4bx().b[14][0]++,event.ph==="X"/* TRACE_EVENT_PHASE_COMPLETE */)&&(cov_vm1o9b4bx().b[14][1]++,event.name==="CommitLoad")&&(cov_vm1o9b4bx().b[14][2]++,event.args!=="__stripped__")/* STRIPPED */&&(cov_vm1o9b4bx().b[14][3]++,event.args.data!==undefined)&&(cov_vm1o9b4bx().b[14][4]++,event.args.data.isMainFrame);}cov_vm1o9b4bx().s[46]++;exports.isCommitLoad=isCommitLoad;function byTime(a,b){cov_vm1o9b4bx().f[12]++;cov_vm1o9b4bx().s[47]++;return a.ts-b.ts;}cov_vm1o9b4bx().s[48]++;exports.byTime=byTime;function findFrame(events,url){cov_vm1o9b4bx().f[13]++;const event=(cov_vm1o9b4bx().s[49]++,events.filter(isCommitLoad).find(e=>{cov_vm1o9b4bx().f[14]++;cov_vm1o9b4bx().s[50]++;return e.args.data.url.startsWith(url);}));cov_vm1o9b4bx().s[51]++;if(event){cov_vm1o9b4bx().b[15][0]++;cov_vm1o9b4bx().s[52]++;return event.args.data.frame;}else{cov_vm1o9b4bx().b[15][1]++;}cov_vm1o9b4bx().s[53]++;return"";}cov_vm1o9b4bx().s[54]++;exports.findFrame=findFrame;function parseMarkers(m){cov_vm1o9b4bx().f[15]++;const a=(cov_vm1o9b4bx().s[55]++,[]);cov_vm1o9b4bx().s[56]++;if(typeof m==="string"){cov_vm1o9b4bx().b[16][0]++;cov_vm1o9b4bx().s[57]++;m=m.split(",");}else{cov_vm1o9b4bx().b[16][1]++;}cov_vm1o9b4bx().s[58]++;for(let i=(cov_vm1o9b4bx().s[59]++,1);i<m.length;i++){cov_vm1o9b4bx().s[60]++;a.push({start:m[i-1],label:m[i]});}cov_vm1o9b4bx().s[61]++;a.push({start:m[m.length-1],label:"paint"});cov_vm1o9b4bx().s[62]++;return a;}cov_vm1o9b4bx().s[63]++;exports.parseMarkers=parseMarkers;function fillArray(arrLngth,incr=(cov_vm1o9b4bx().b[17][0]++,1),strt=(cov_vm1o9b4bx().b[18][0]++,0)){cov_vm1o9b4bx().f[16]++;const a=(cov_vm1o9b4bx().s[64]++,[]);cov_vm1o9b4bx().s[65]++;while(a.length<arrLngth){cov_vm1o9b4bx().s[66]++;if(a.length<1){cov_vm1o9b4bx().b[19][0]++;cov_vm1o9b4bx().s[67]++;a.push(strt);}else{cov_vm1o9b4bx().b[19][1]++;}cov_vm1o9b4bx().s[68]++;a.push(strt+incr);cov_vm1o9b4bx().s[69]++;strt=strt+incr;}cov_vm1o9b4bx().s[70]++;return a;}cov_vm1o9b4bx().s[71]++;exports.fillArray=fillArray;/**
 * "name" is expected to be a titlecased string. We want something the user can type easily so the passed string
 * is converted into lowercased words dasherized. Any extra "/" will also be removed.
 *
 * @param str - String to be converted to dasherized case
 */function convertToTypable(name){cov_vm1o9b4bx().f[17]++;const split=(cov_vm1o9b4bx().s[72]++,name.split(" "));const lowercasedWords=(cov_vm1o9b4bx().s[73]++,split.map(word=>{cov_vm1o9b4bx().f[18]++;cov_vm1o9b4bx().s[74]++;return word.toLowerCase().replace(/\//g,"");}));cov_vm1o9b4bx().s[75]++;return lowercasedWords.join("-");}cov_vm1o9b4bx().s[76]++;exports.convertToTypable=convertToTypable;function toNearestHundreth(n){cov_vm1o9b4bx().f[19]++;cov_vm1o9b4bx().s[77]++;return Math.round(n*100)/100;}cov_vm1o9b4bx().s[78]++;exports.toNearestHundreth=toNearestHundreth;cov_vm1o9b4bx().s[79]++;exports.chalkScheme={white:chalk.rgb(255,255,255),warning:chalk.rgb(255,174,66),header:chalk.rgb(255,255,255),regress:chalk.rgb(239,100,107),neutral:chalk.rgb(225,225,225),significant:chalk.rgb(0,191,255),imprv:chalk.rgb(135,197,113),phase:chalk.rgb(225,225,225),faint:chalk.rgb(80,80,80),checkmark:chalk.rgb(133,153,36)(`${logSymbols.success}`),blackBgGreen:chalk.green.bgGreen,blackBgRed:chalk.rgb(239,100,107).bgRed,blackBgBlue:chalk.rgb(24,132,228).bgRgb(24,132,228),blackBgYellow:chalk.rgb(255,174,66).bgRgb(255,174,66),tbBranding:{lime:chalk.rgb(199,241,106),blue:chalk.rgb(24,132,228),aqua:chalk.rgb(56,210,211),dkBlue:chalk.rgb(10,45,70),grey:chalk.rgb(153,153,153)}};function convertToSentCase(str){cov_vm1o9b4bx().f[20]++;const result=(cov_vm1o9b4bx().s[80]++,str.replace(/([A-Z])/g," $1"));cov_vm1o9b4bx().s[81]++;return result.charAt(0).toUpperCase()+result.slice(1);}cov_vm1o9b4bx().s[82]++;exports.convertToSentCase=convertToSentCase;function logHeading(heading){cov_vm1o9b4bx().f[21]++;cov_vm1o9b4bx().s[83]++;console.log(`\n${exports.chalkScheme.blackBgBlue(`    ${exports.chalkScheme.white(heading)}    `)}\n`);}cov_vm1o9b4bx().s[84]++;exports.logHeading=logHeading;function logBar(ops){cov_vm1o9b4bx().f[22]++;const maxBarLength=(cov_vm1o9b4bx().s[85]++,60);const barTick=(cov_vm1o9b4bx().s[86]++,"■");const barSegment=(cov_vm1o9b4bx().s[87]++,ops.totalDuration/maxBarLength);const fullSegments=(cov_vm1o9b4bx().s[88]++,ops.duration/barSegment);const emptySegments=(cov_vm1o9b4bx().s[89]++,maxBarLength-fullSegments);const bar=(cov_vm1o9b4bx().s[90]++,`${exports.chalkScheme.tbBranding.blue(barTick.repeat(fullSegments))}${exports.chalkScheme.tbBranding.grey(barTick.repeat(emptySegments))}`);cov_vm1o9b4bx().s[91]++;return`${ops.title}\n${bar} ${ops.duration} ms\n`;}cov_vm1o9b4bx().s[92]++;exports.logBar=logBar;function timestamp(){cov_vm1o9b4bx().f[23]++;cov_vm1o9b4bx().s[93]++;return new Date().getTime();}cov_vm1o9b4bx().s[94]++;exports.timestamp=timestamp;function durationInSec(endTime,startTime){cov_vm1o9b4bx().f[24]++;cov_vm1o9b4bx().s[95]++;return Math.round((endTime-startTime)/1000);}cov_vm1o9b4bx().s[96]++;exports.durationInSec=durationInSec;function secondsToTime(sec){cov_vm1o9b4bx().f[25]++;const m=(cov_vm1o9b4bx().s[97]++,Math.floor(sec%3600/60).toString().padStart(2,"0"));const s=(cov_vm1o9b4bx().s[98]++,Math.floor(sec%60).toString().padStart(2,"0"));cov_vm1o9b4bx().s[99]++;return`${m}m:${s}s`;}cov_vm1o9b4bx().s[100]++;exports.secondsToTime=secondsToTime;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,