{"version":3,"file":"/Users/malynch/D/tracerbench/packages/cli/src/commands/compare/index.ts","sources":["/Users/malynch/D/tracerbench/packages/cli/src/commands/compare/index.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { flags as oclifFlags } from \"@oclif/command\";\nimport { IConfig } from \"@oclif/config\";\nimport {\n  createTraceNavigationBenchmark,\n  Marker,\n  NavigationBenchmarkOptions,\n  networkConditions,\n  run,\n} from \"@tracerbench/core\";\nimport type { ChromeSpawnOptions } from \"@tracerbench/spawn-chrome\";\nimport Protocol from \"devtools-protocol\";\nimport * as fs from \"fs-extra\";\nimport * as path from \"path\";\n\nimport { getConfig, TBBaseCommand } from \"../../command-config\";\nimport {\n  defaultFlagArgs,\n  fidelityLookup,\n  headlessFlags,\n} from \"../../command-config/default-flag-args\";\nimport {\n  CONTROL_ENV_OVERRIDE_ATTR,\n  EXPERIMENT_ENV_OVERRIDE_ATTR,\n  ITBConfig,\n} from \"../../command-config/tb-config\";\nimport { getEmulateDeviceSettingForKeyAndOrientation } from \"../../helpers/device-settings\";\nimport {\n  browserArgs,\n  config,\n  controlURL,\n  cpuThrottleRate,\n  debug,\n  emulateDevice,\n  emulateDeviceOrientation,\n  experimentURL,\n  fidelity,\n  headless,\n  isCIEnv,\n  markers,\n  network,\n  regressionThreshold,\n  report,\n  runtimeStats,\n  sampleTimeout,\n  socksPorts,\n  tbResultsFolder,\n} from \"../../helpers/flags\";\nimport {\n  chalkScheme,\n  checkEnvironmentSpecificOverride,\n  durationInSec,\n  parseMarkers,\n  secondsToTime,\n  timestamp,\n} from \"../../helpers/utils\";\nimport CompareAnalyze from \"./analyze\";\nimport CompareReport from \"./report\";\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst archiver = require(\"archiver\");\nexport interface ICompareFlags {\n  hideAnalysis: boolean;\n  browserArgs: string[];\n  cpuThrottleRate: number;\n  fidelity: number;\n  markers: Marker[];\n  network: Protocol.Network.EmulateNetworkConditionsRequest;\n  tbResultsFolder: string;\n  controlURL: string | undefined;\n  experimentURL: string | undefined;\n  runtimeStats: boolean;\n  emulateDevice?: string;\n  emulateDeviceOrientation?: string;\n  socksPorts?: [string, string] | [number, number] | undefined;\n  debug: boolean;\n  regressionThreshold?: number;\n  sampleTimeout: number;\n  headless: boolean;\n  config?: string;\n  report?: boolean;\n  isCIEnv?: boolean;\n}\n\nexport default class Compare extends TBBaseCommand {\n  public static description =\n    \"Compare the performance delta between an experiment and control\";\n  public static flags: oclifFlags.Input<any> = {\n    hideAnalysis: oclifFlags.boolean({\n      default: false,\n      description: \"Hide the the analysis output in terminal\",\n    }),\n    browserArgs: browserArgs({ required: true }),\n    cpuThrottleRate: cpuThrottleRate({ required: true }),\n    fidelity: fidelity({ required: true }),\n    markers: markers({ required: true }),\n    network: network({ required: true }),\n    tbResultsFolder: tbResultsFolder({ required: true }),\n    controlURL: controlURL({ required: false }),\n    experimentURL: experimentURL({ required: false }),\n    emulateDevice: emulateDevice(),\n    emulateDeviceOrientation: emulateDeviceOrientation(),\n    socksPorts: socksPorts(),\n    regressionThreshold: regressionThreshold(),\n    sampleTimeout: sampleTimeout(),\n    config: config(),\n    runtimeStats,\n    report,\n    debug,\n    headless,\n    isCIEnv: isCIEnv(),\n  };\n  public compareFlags: ICompareFlags;\n  public parsedConfig: ITBConfig = defaultFlagArgs;\n  // flags explicitly specified within the cli when\n  // running the command. these will override all\n  public explicitFlags: string[];\n  public analyzedJSONString = \"\";\n  constructor(argv: string[], config: IConfig) {\n    super(argv, config);\n    const { flags } = this.parse(Compare);\n    this.explicitFlags = argv;\n    this.compareFlags = flags as ICompareFlags;\n  }\n\n  // instantiated before this.run()\n  public async init(): Promise<void> {\n    const { flags } = this.parse(Compare);\n    this.parsedConfig = getConfig(flags.config, flags, this.explicitFlags);\n    this.compareFlags = flags as ICompareFlags;\n    await this.parseFlags();\n  }\n\n  public async run(): Promise<string> {\n    const { hideAnalysis } = this.compareFlags;\n    const [\n      controlSettings,\n      experimentSettings,\n    ] = this.generateControlExperimentServerConfig();\n\n    // this should be directly above the instantiation of the InitialRenderBenchmarks\n    if (this.parsedConfig.debug) {\n      Object.entries(this.parsedConfig).forEach(([key, value]) => {\n        if (value) {\n          this.log(`${key}: ${JSON.stringify(value)}`);\n        }\n      });\n    }\n\n    const benchmarks = {\n      control: createTraceNavigationBenchmark(...controlSettings),\n      experiment: createTraceNavigationBenchmark(...experimentSettings),\n    };\n\n    const sampleTimeout = this.parsedConfig.sampleTimeout;\n\n    const startTime = timestamp();\n    const results = (\n      await run(\n        [benchmarks.control, benchmarks.experiment],\n        this.parsedConfig.fidelity as number,\n        (elasped, completed, remaining, group, iteration) => {\n          if (completed > 0) {\n            const average = elasped / completed;\n            const remainingSecs = Math.round((remaining * average) / 1000);\n            const remainingTime = secondsToTime(remainingSecs);\n            console.log(\n              \"%s: %s %s remaining\",\n              group.padStart(15),\n              iteration.toString().padStart(2),\n              `${remainingTime}`.padStart(10)\n            );\n          } else {\n            console.log(\n              \"%s: %s\",\n              group.padStart(15),\n              iteration.toString().padStart(2)\n            );\n          }\n        },\n        {\n          sampleTimeoutMs: sampleTimeout && sampleTimeout * 1000,\n        }\n      )\n    ).map(({ group, samples }) => {\n      const meta = samples.length > 0 ? samples[0].metadata : {};\n      return {\n        group,\n        set: group,\n        samples,\n        meta,\n      };\n    });\n    const endTime = timestamp();\n    if (!results[0].samples[0]) {\n      this.error(\n        `Could not sample from provided urls\\nCONTROL: ${this.parsedConfig.controlURL}\\nEXPERIMENT: ${this.parsedConfig.experimentURL}.`\n      );\n    }\n    const resultJSONPath = `${this.parsedConfig.tbResultsFolder}/compare.json`;\n\n    fs.writeFileSync(resultJSONPath, JSON.stringify(results));\n\n    const tracesDir = `${this.parsedConfig.tbResultsFolder}/traces`;\n    const zipOutput = fs.createWriteStream(\n      `${this.parsedConfig.tbResultsFolder}/traces.zip`\n    );\n    const archive = archiver(\"zip\", {\n      zlib: { level: 9 },\n    });\n    archive.directory(tracesDir, \"traces\");\n    archive.pipe(zipOutput);\n    archive.finalize();\n    const duration = secondsToTime(durationInSec(endTime, startTime));\n    const message = `${chalkScheme.blackBgGreen(\n      `    ${chalkScheme.white(\"SUCCESS\")}    `\n    )} ${this.parsedConfig.fidelity} test samples took ${duration}`;\n\n    this.log(`\\n${message}`);\n\n    if (!hideAnalysis) {\n      this.analyzedJSONString = await CompareAnalyze.run([\n        resultJSONPath,\n        \"--fidelity\",\n        `${this.parsedConfig.fidelity}`,\n        \"--regressionThreshold\",\n        `${this.parsedConfig.regressionThreshold}`,\n        \"--isCIEnv\",\n        `${this.parsedConfig.isCIEnv}`,\n      ]);\n\n      fs.writeFileSync(\n        `${this.parsedConfig.tbResultsFolder}/report.json`,\n        this.analyzedJSONString\n      );\n    }\n\n    // if we want to run the CompareReport without calling a separate command\n    if (this.parsedConfig.report) {\n      await CompareReport.run([\n        \"--tbResultsFolder\",\n        `${this.parsedConfig.tbResultsFolder}`,\n        \"--config\",\n        `${this.parsedConfig.config}`,\n        \"--isCIEnv\",\n        `${this.parsedConfig.isCIEnv}`,\n      ]);\n    }\n\n    // with debug flag output three files\n    // on config specifics\n    if (this.parsedConfig.debug) {\n      fs.writeFileSync(\n        `${this.parsedConfig.tbResultsFolder}/server-control-settings.json`,\n        JSON.stringify(Object.assign(controlSettings), null, 2)\n      );\n\n      fs.writeFileSync(\n        `${this.parsedConfig.tbResultsFolder}/server-experiment-settings.json`,\n        JSON.stringify(Object.assign(experimentSettings), null, 2)\n      );\n\n      fs.writeFileSync(\n        `${this.parsedConfig.tbResultsFolder}/compare-flags-settings.json`,\n        JSON.stringify(Object.assign(this.parsedConfig), null, 2)\n      );\n    }\n\n    return this.analyzedJSONString;\n  }\n\n  private async parseFlags(): Promise<void> {\n    const {\n      tbResultsFolder,\n      fidelity,\n      markers,\n      regressionThreshold,\n      headless,\n      controlURL,\n      experimentURL,\n    } = (this.parsedConfig as unknown) as ICompareFlags;\n\n    // modifies properties of flags that were not set\n    // during flag.parse(). these are intentionally\n    // not deconstructed as to maintain the mutable\n    // flags object state\n    if (typeof fidelity === \"string\") {\n      this.compareFlags.fidelity = parseInt(\n        (fidelityLookup as any)[fidelity],\n        10\n      );\n    }\n    if (typeof markers === \"string\") {\n      this.parsedConfig.markers = parseMarkers(markers);\n    }\n    if (typeof regressionThreshold === \"string\") {\n      this.parsedConfig.regressionThreshold = parseInt(regressionThreshold, 10);\n    }\n    if (typeof controlURL === undefined) {\n      this.error(\n        \"controlURL is required either in the tbconfig.json or as cli flag\"\n      );\n    }\n\n    if (typeof experimentURL === undefined) {\n      this.error(\n        \"experimentURL is required either in the tbconfig.json or as cli flag\"\n      );\n    }\n\n    // if headless flag is true include the headless flags\n    if (headless) {\n      this.parsedConfig.browserArgs = this.compareFlags.browserArgs.concat(\n        headlessFlags\n      );\n    }\n\n    // if the folder for the tracerbench results file\n    // does not exist then create it\n    fs.mkdirpSync(path.join(tbResultsFolder, \"traces\"));\n  }\n\n  /**\n   * Final result of the configs are in the following order:\n   *\n   * controlConfigs = tbconfig:controlBenchmarkEnvironment > command line > tbconfig > default\n   * experimentConfigs = tbconfig:experimentBenchmarkEnvironment > command line > tbconfig > default\n   *\n   * This functions handles the tsconfig:** part since it is assumed that parent function that passed input \"flags\"\n   * would've handled \"command line > tbconfig > default\"\n   *\n   * @param this.parsedConfig - Object containing configs parsed from the Command class\n   */\n  private generateControlExperimentServerConfig(): [\n    [string, string, Marker[], NavigationBenchmarkOptions],\n    [string, string, Marker[], NavigationBenchmarkOptions]\n  ] {\n    const stdio = this.parsedConfig.debug ? \"inherit\" : \"ignore\";\n    const controlBrowser: Partial<ChromeSpawnOptions> = {\n      stdio,\n      additionalArguments: this.compareFlags.browserArgs,\n    };\n    const experimentBrowser: Partial<ChromeSpawnOptions> = {\n      stdio,\n      additionalArguments: this.compareFlags.browserArgs,\n    };\n\n    // config for the browsers to leverage socks proxy\n    if (this.parsedConfig.socksPorts) {\n      if (controlBrowser.additionalArguments) {\n        controlBrowser.additionalArguments = controlBrowser.additionalArguments.concat(\n          [`--proxy-server=socks5://0.0.0.0:${this.parsedConfig.socksPorts[0]}`]\n        );\n      }\n      if (experimentBrowser.additionalArguments) {\n        experimentBrowser.additionalArguments = experimentBrowser.additionalArguments.concat(\n          [`--proxy-server=socks5://0.0.0.0:${this.parsedConfig.socksPorts[1]}`]\n        );\n      }\n    }\n    const controlNetwork: string = checkEnvironmentSpecificOverride(\n      \"network\",\n      this.compareFlags,\n      CONTROL_ENV_OVERRIDE_ATTR,\n      this.parsedConfig\n    );\n    const controlEmulateDevice = checkEnvironmentSpecificOverride(\n      \"emulateDevice\",\n      this.compareFlags,\n      CONTROL_ENV_OVERRIDE_ATTR,\n      this.parsedConfig\n    );\n    const controlEmulateDeviceOrientation = checkEnvironmentSpecificOverride(\n      \"emulateDeviceOrientation\",\n      this.compareFlags,\n      CONTROL_ENV_OVERRIDE_ATTR,\n      this.parsedConfig\n    );\n    const experimentNetwork: string = checkEnvironmentSpecificOverride(\n      \"network\",\n      this.compareFlags,\n      EXPERIMENT_ENV_OVERRIDE_ATTR,\n      this.parsedConfig\n    );\n    const experimentEmulateDevice = checkEnvironmentSpecificOverride(\n      \"emulateDevice\",\n      this.compareFlags,\n      EXPERIMENT_ENV_OVERRIDE_ATTR,\n      this.parsedConfig\n    );\n    const experimentEmulateDeviceOrientation = checkEnvironmentSpecificOverride(\n      \"emulateDeviceOrientation\",\n      this.compareFlags,\n      EXPERIMENT_ENV_OVERRIDE_ATTR,\n      this.parsedConfig\n    );\n\n    const controlDeviceSettings = controlEmulateDevice\n      ? getEmulateDeviceSettingForKeyAndOrientation(\n          controlEmulateDevice,\n          controlEmulateDeviceOrientation\n        )\n      : {};\n\n    const controlSettings: [\n      string,\n      string,\n      Marker[],\n      NavigationBenchmarkOptions\n    ] = [\n      \"control\",\n      this.compareFlags.controlURL!,\n      this.compareFlags.markers,\n      {\n        spawnOptions: controlBrowser,\n        pageSetupOptions: {\n          cpuThrottlingRate: checkEnvironmentSpecificOverride(\n            \"cpuThrottleRate\",\n            this.compareFlags,\n            CONTROL_ENV_OVERRIDE_ATTR,\n            this.parsedConfig\n          ),\n          ...controlDeviceSettings,\n          emulateNetworkConditions: controlNetwork\n            ? networkConditions[\n                controlNetwork as keyof typeof networkConditions\n              ]\n            : this.compareFlags.network,\n        },\n        traceOptions: {\n          captureV8RuntimeStats: this.compareFlags.runtimeStats,\n          saveTraceAs: (group, i) =>\n            `${this.compareFlags.tbResultsFolder}/traces/${group}${i}.json`,\n        },\n      },\n    ];\n\n    const experimentDeviceSettings = experimentEmulateDevice\n      ? getEmulateDeviceSettingForKeyAndOrientation(\n          experimentEmulateDevice,\n          experimentEmulateDeviceOrientation\n        )\n      : {};\n    const experimentSettings: [\n      string,\n      string,\n      Marker[],\n      NavigationBenchmarkOptions\n    ] = [\n      \"experiment\",\n      this.compareFlags.experimentURL!,\n      this.compareFlags.markers,\n      {\n        spawnOptions: experimentBrowser,\n\n        pageSetupOptions: {\n          cpuThrottlingRate: checkEnvironmentSpecificOverride(\n            \"cpuThrottleRate\",\n            this.compareFlags,\n            EXPERIMENT_ENV_OVERRIDE_ATTR,\n            this.parsedConfig\n          ),\n          ...experimentDeviceSettings,\n          emulateNetworkConditions: experimentNetwork\n            ? networkConditions[\n                experimentNetwork as keyof typeof networkConditions\n              ]\n            : this.compareFlags.network,\n        },\n        traceOptions: {\n          captureV8RuntimeStats: this.compareFlags.runtimeStats,\n          saveTraceAs: (group, i) =>\n            `${this.compareFlags.tbResultsFolder}/traces/${group}${i}.json`,\n        },\n      },\n    ];\n\n    return [controlSettings, experimentSettings];\n  }\n}\n"]}