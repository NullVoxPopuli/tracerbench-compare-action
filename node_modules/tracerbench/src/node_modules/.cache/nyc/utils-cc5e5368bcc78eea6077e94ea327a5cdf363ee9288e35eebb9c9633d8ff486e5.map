{"version":3,"file":"/Users/malynch/D/tracerbench/packages/cli/src/helpers/utils.ts","sources":["/Users/malynch/D/tracerbench/packages/cli/src/helpers/utils.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint:disable:no-console*/\n\nimport { IMarker, ITraceEvent } from \"@tracerbench/core\";\nimport * as chalk from \"chalk\";\nimport * as logSymbols from \"log-symbols\";\n\nimport {\n  IBenchmarkEnvironmentOverride,\n  ITBConfig,\n} from \"../command-config/tb-config\";\nimport { ICompareFlags } from \"../commands/compare\";\n\ninterface IEvent extends ITraceEvent {\n  args: {\n    frame: string;\n    data: { [key: string]: boolean };\n  };\n}\n\n/**\n * Handles checking if there is a specific override for the attributeName in the tbConfigs for the given overrideObjectName.\n * Defaults to whatever is in the flags object if there is no override.\n *\n * @param attributeName - Attribute name to check if there is an override in overrideObjectName from tbConfig\n * @param flags - Object containing configs parsed from the Command class\n * @param overrideObjectName - Either \"controlBenchmarkEnvironment\" or \"experimentBenchmarkEnvironment\"\n * @param tbConfig - This refers to the parsed JSON from the config file if it exists\n */\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function checkEnvironmentSpecificOverride(\n  attributeName: keyof ICompareFlags,\n  flags: ICompareFlags,\n  overrideObjectName: string,\n  tbConfig?: ITBConfig\n) {\n  if (!tbConfig || !tbConfig[overrideObjectName]) {\n    return flags[attributeName];\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const environmentSpecificConfigs: IBenchmarkEnvironmentOverride = tbConfig[\n    overrideObjectName\n  ]!;\n\n  if (!environmentSpecificConfigs[attributeName]) {\n    return flags[attributeName];\n  }\n\n  return environmentSpecificConfigs[attributeName];\n}\n\n/**\n * Merge the contents of the right object into the left. Simply replace numbers, strings, arrays\n * and recursively call this function with objects.\n *\n * Note that typeof null == 'object'\n *\n * @param left - Destination object\n * @param right - Content of this object takes precedence\n */\nexport function mergeLeft(\n  left: { [key: string]: any },\n  right: { [key: string]: any }\n): { [key: string]: any } {\n  Object.keys(right).forEach((key) => {\n    const leftValue = left[key];\n    const rightValue = left[key];\n    const matchingObjectType =\n      typeof leftValue === \"object\" && typeof rightValue === \"object\";\n    const isOneArray = Array.isArray(leftValue) || Array.isArray(rightValue);\n\n    if (matchingObjectType && (left[key] || right[key]) && !isOneArray) {\n      mergeLeft(left[key], right[key]);\n    } else {\n      left[key] = right[key];\n    }\n  });\n\n  return left;\n}\n\nexport function convertMicrosecondsToMS(ms: string | number): number {\n  ms = typeof ms === \"string\" ? parseInt(ms, 10) : ms;\n  return Math.floor(ms * 100) / 100000;\n}\n\nexport function convertMSToMicroseconds(ms: string | number): number {\n  ms = typeof ms === \"string\" ? parseInt(ms, 10) : ms;\n  return Math.floor(ms * 1000);\n}\n\nexport function getCookiesFromHAR(har: any) {\n  let cookies: any = [];\n  har.log.entries.forEach((entry: any) => {\n    if (entry.response.cookies.length > 0) {\n      cookies.push(entry.response.cookies);\n    }\n  });\n  // eslint-disable-next-line prefer-spread\n  return (cookies = [].concat.apply([], cookies));\n}\n\nexport function normalizeFnName(name: string) {\n  if (name === \"\") {\n    name = \"(anonymous)\";\n  }\n  return name;\n}\n\nexport function setTraceEvents(\n  file: ITraceEvent[] | { metadata: {}; traceEvents: ITraceEvent[] }\n) {\n  if (!Array.isArray(file)) {\n    file = file.traceEvents;\n  }\n  return file;\n}\n\nexport function collect(val: any, memo: any) {\n  memo.push(val);\n  return memo;\n}\n\nexport function format(ts: number, start: number): string {\n  let ms = ((ts - start) / 1000).toFixed(2).toString();\n  while (ms.length < 10) {\n    ms = \" \" + ms;\n  }\n  return `${ms} ms`;\n}\n\nexport function isMark(event: ITraceEvent): boolean {\n  return event.ph === \"R\";\n}\n\nexport function isFrameMark(frame: string, event: IEvent): boolean {\n  return event.ph === \"R\" && event.args.frame === frame;\n}\n\nexport function isFrameNavigationStart(frame: string, event: IEvent): boolean {\n  return isFrameMark(frame, event) && event.name === \"navigationStart\";\n}\n\nexport function isUserMark(event: ITraceEvent): boolean {\n  return (\n    event.ph === \"R\" &&\n    event.cat === \"blink.user_timing\" &&\n    Object.keys(event.args).length === 0\n  );\n}\n\nexport function isCommitLoad(event: IEvent): boolean {\n  return (\n    event.ph === \"X\" &&\n    event.name === \"CommitLoad\" &&\n    event.args.data !== undefined &&\n    event.args.data.isMainFrame\n  );\n}\nexport function byTime(a: { ts: number }, b: { ts: number }): number {\n  return a.ts - b.ts;\n}\n\nexport function findFrame(events: any[], url: any) {\n  const event = events\n    .filter(isCommitLoad)\n    .find((e: any) => e.args.data.url.startsWith(url));\n  if (event) {\n    return event.args.data.frame;\n  }\n  return null;\n}\n\nexport function parseMarkers(m: string | string[]): IMarker[] {\n  const a: IMarker[] = [];\n  if (typeof m === \"string\") {\n    m = m.split(\",\");\n  }\n\n  m.forEach((marker) => {\n    a.push({\n      label: marker,\n      start: marker,\n    });\n  });\n  return a;\n}\n\nexport function removeDuplicates<T>(collection: T[]) {\n  return [...new Set(collection)];\n}\n\nexport function fillArray(arrLngth: number, incr = 1, strt = 0): number[] {\n  const a = [];\n  while (a.length < arrLngth) {\n    if (a.length < 1) {\n      a.push(strt);\n    }\n    a.push(strt + incr);\n    strt = strt + incr;\n  }\n  return a;\n}\n\n/**\n * \"name\" is expected to be a titlecased string. We want something the user can type easily so the passed string\n * is converted into lowercased words dasherized. Any extra \"/\" will also be removed.\n *\n * @param str - String to be converted to dasherized case\n */\nexport function convertToTypable(name: string): string {\n  const split = name.split(\" \");\n  const lowercasedWords = split.map((word) =>\n    word.toLowerCase().replace(/\\//g, \"\")\n  );\n  return lowercasedWords.join(\"-\");\n}\n\nexport function toNearestHundreth(n: number): number {\n  return Math.round(n * 100) / 100;\n}\n\nexport const chalkScheme = {\n  white: chalk.rgb(255, 255, 255),\n  warning: chalk.rgb(255, 174, 66),\n  header: chalk.rgb(255, 255, 255),\n  regress: chalk.rgb(239, 100, 107),\n  neutral: chalk.rgb(225, 225, 225),\n  significant: chalk.rgb(0, 191, 255),\n  imprv: chalk.rgb(135, 197, 113),\n  phase: chalk.rgb(225, 225, 225),\n  faint: chalk.rgb(80, 80, 80),\n  checkmark: chalk.rgb(133, 153, 36)(`${logSymbols.success}`),\n  blackBgGreen: chalk.green.bgGreen,\n  blackBgRed: chalk.rgb(239, 100, 107).bgRed,\n  blackBgBlue: chalk.rgb(24, 132, 228).bgRgb(24, 132, 228),\n  blackBgYellow: chalk.rgb(255, 174, 66).bgRgb(255, 174, 66),\n  tbBranding: {\n    lime: chalk.rgb(199, 241, 106),\n    blue: chalk.rgb(24, 132, 228),\n    aqua: chalk.rgb(56, 210, 211),\n    dkBlue: chalk.rgb(10, 45, 70),\n    grey: chalk.rgb(153, 153, 153),\n  },\n};\n"]}