"use strict";function cov_1wmjbuuxyq(){var path="/Users/malynch/D/tracerbench/packages/cli/src/commands/trace.ts";var hash="51860800d86b3c2672521fb7dd0725d60a0544c4";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/malynch/D/tracerbench/packages/cli/src/commands/trace.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:4,column:15},end:{line:4,column:43}},"2":{start:{line:5,column:19},end:{line:5,column:38}},"3":{start:{line:6,column:15},end:{line:6,column:30}},"4":{start:{line:7,column:25},end:{line:7,column:53}},"5":{start:{line:8,column:16},end:{line:8,column:43}},"6":{start:{line:9,column:16},end:{line:9,column:43}},"7":{start:{line:12,column:26},end:{line:12,column:43}},"8":{start:{line:13,column:90},end:{line:13,column:95}},"9":{start:{line:14,column:22},end:{line:21,column:9}},"10":{start:{line:22,column:24},end:{line:22,column:28}},"11":{start:{line:23,column:25},end:{line:23,column:48}},"12":{start:{line:24,column:29},end:{line:24,column:64}},"13":{start:{line:25,column:27},end:{line:28,column:9}},"14":{start:{line:29,column:8},end:{line:31,column:9}},"15":{start:{line:30,column:12},end:{line:30,column:77}},"16":{start:{line:34,column:8},end:{line:41,column:9}},"17":{start:{line:35,column:12},end:{line:37,column:13}},"18":{start:{line:36,column:16},end:{line:36,column:54}},"19":{start:{line:40,column:12},end:{line:40,column:30}},"20":{start:{line:43,column:8},end:{line:43,column:116}},"21":{start:{line:45,column:32},end:{line:45,column:97}},"22":{start:{line:46,column:31},end:{line:50,column:9}},"23":{start:{line:52,column:8},end:{line:52,column:45}},"24":{start:{line:55,column:30},end:{line:55,column:31}},"25":{start:{line:56,column:31},end:{line:56,column:32}},"26":{start:{line:57,column:27},end:{line:57,column:36}},"27":{start:{line:58,column:8},end:{line:63,column:9}},"28":{start:{line:59,column:12},end:{line:59,column:56}},"29":{start:{line:62,column:12},end:{line:62,column:35}},"30":{start:{line:64,column:8},end:{line:72,column:11}},"31":{start:{line:65,column:31},end:{line:65,column:62}},"32":{start:{line:66,column:31},end:{line:66,column:50}},"33":{start:{line:68,column:24},end:{line:68,column:43}},"34":{start:{line:69,column:33},end:{line:69,column:49}},"35":{start:{line:70,column:12},end:{line:70,column:44}},"36":{start:{line:71,column:12},end:{line:71,column:63}},"37":{start:{line:74,column:8},end:{line:74,column:88}},"38":{start:{line:76,column:8},end:{line:84,column:11}},"39":{start:{line:77,column:31},end:{line:77,column:69}},"40":{start:{line:78,column:31},end:{line:78,column:60}},"41":{start:{line:80,column:24},end:{line:80,column:53}},"42":{start:{line:81,column:33},end:{line:81,column:49}},"43":{start:{line:82,column:12},end:{line:82,column:45}},"44":{start:{line:83,column:12},end:{line:83,column:64}},"45":{start:{line:86,column:8},end:{line:86,column:90}},"46":{start:{line:88,column:8},end:{line:97,column:9}},"47":{start:{line:89,column:28},end:{line:89,column:70}},"48":{start:{line:90,column:12},end:{line:93,column:15}},"49":{start:{line:91,column:72},end:{line:91,column:86}},"50":{start:{line:92,column:16},end:{line:92,column:112}},"51":{start:{line:96,column:12},end:{line:96,column:30}},"52":{start:{line:98,column:8},end:{line:107,column:9}},"53":{start:{line:99,column:12},end:{line:99,column:56}},"54":{start:{line:100,column:30},end:{line:100,column:64}},"55":{start:{line:101,column:12},end:{line:103,column:15}},"56":{start:{line:102,column:16},end:{line:102,column:67}},"57":{start:{line:106,column:12},end:{line:106,column:35}},"58":{start:{line:110,column:0},end:{line:110,column:24}},"59":{start:{line:111,column:0},end:{line:111,column:125}},"60":{start:{line:112,column:0},end:{line:120,column:2}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:4},end:{line:11,column:5}},loc:{start:{line:11,column:16},end:{line:108,column:5}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:65,column:20},end:{line:65,column:21}},loc:{start:{line:65,column:31},end:{line:65,column:62}},line:65},"2":{name:"(anonymous_2)",decl:{start:{line:66,column:20},end:{line:66,column:21}},loc:{start:{line:66,column:31},end:{line:66,column:50}},line:66},"3":{name:"(anonymous_3)",decl:{start:{line:67,column:21},end:{line:67,column:22}},loc:{start:{line:67,column:32},end:{line:72,column:9}},line:67},"4":{name:"(anonymous_4)",decl:{start:{line:77,column:20},end:{line:77,column:21}},loc:{start:{line:77,column:31},end:{line:77,column:69}},line:77},"5":{name:"(anonymous_5)",decl:{start:{line:78,column:20},end:{line:78,column:21}},loc:{start:{line:78,column:31},end:{line:78,column:60}},line:78},"6":{name:"(anonymous_6)",decl:{start:{line:79,column:21},end:{line:79,column:22}},loc:{start:{line:79,column:32},end:{line:84,column:9}},line:79},"7":{name:"(anonymous_7)",decl:{start:{line:90,column:36},end:{line:90,column:37}},loc:{start:{line:90,column:46},end:{line:93,column:13}},line:90},"8":{name:"(anonymous_8)",decl:{start:{line:101,column:30},end:{line:101,column:31}},loc:{start:{line:101,column:72},end:{line:103,column:13}},line:101}},branchMap:{"0":{loc:{start:{line:29,column:8},end:{line:31,column:9}},type:"if",locations:[{start:{line:29,column:8},end:{line:31,column:9}},{start:{line:29,column:8},end:{line:31,column:9}}],line:29},"1":{loc:{start:{line:35,column:12},end:{line:37,column:13}},type:"if",locations:[{start:{line:35,column:12},end:{line:37,column:13}},{start:{line:35,column:12},end:{line:37,column:13}}],line:35}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{"0":[0,0],"1":[0,0]},inputSourceMap:{version:3,file:"/Users/malynch/D/tracerbench/packages/cli/src/commands/trace.ts",sources:["/Users/malynch/D/tracerbench/packages/cli/src/commands/trace.ts"],names:[],mappings:"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",sourcesContent:["/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport {\n  analyze,\n  IAnalyze,\n  IConditions,\n  ITraceEvent,\n  liveTrace,\n  loadTrace,\n} from \"@tracerbench/core\";\nimport { existsSync, mkdirSync, readJson, writeFileSync } from \"fs-extra\";\nimport { join, resolve } from \"path\";\n\nimport { TBBaseCommand } from \"../command-config\";\nimport {\n  cookiespath,\n  cpuThrottleRate,\n  harpath,\n  iterations,\n  network,\n  tbResultsFolder,\n  url,\n} from \"../helpers/flags\";\nimport {\n  isCommitLoad,\n  normalizeFnName,\n  setTraceEvents,\n} from \"../helpers/utils\";\n\nexport default class Trace extends TBBaseCommand {\n  public static description = `Parses a CPU profile and aggregates time across heuristics. Can be vertically sliced with event names.`;\n  public static flags = {\n    cpuThrottleRate: cpuThrottleRate({ required: true }),\n    tbResultsFolder: tbResultsFolder({ required: true }),\n    harpath: harpath({ required: true }),\n    network: network(),\n    url: url({ required: true }),\n    cookiespath: cookiespath({ required: true }),\n    iterations: iterations({ required: true }),\n  };\n\n  public async run() {\n    const { flags } = this.parse(Trace);\n    const {\n      url,\n      cpuThrottleRate,\n      cookiespath,\n      tbResultsFolder,\n      network,\n      harpath,\n    } = flags;\n    let cookies = [\n      {\n        name: \"\",\n        value: \"\",\n        domain: \"\",\n        path: \"\",\n      },\n    ];\n    const methods = [\"\"];\n    const traceHAR = resolve(harpath);\n    const traceHARJSON = await readJson(traceHAR);\n    const conditions: IConditions = {\n      cpu: cpuThrottleRate,\n      network,\n    };\n    if (cookiespath.length) {\n      cookies = await readJson(resolve(cookiespath));\n    }\n    // if the folder for the tracerbench results file\n    // does not exist then create it\n    try {\n      if (!existsSync(tbResultsFolder)) {\n        mkdirSync(tbResultsFolder);\n      }\n    } catch (error) {\n      this.error(error);\n    }\n    // write the trace.json\n    writeFileSync(\n      join(tbResultsFolder, \"trace.json\"),\n      JSON.stringify(traceHARJSON, null, 2)\n    );\n\n    // run the liveTrace\n    const { traceEvents } = await liveTrace(\n      url,\n      tbResultsFolder,\n      cookies,\n      conditions\n    );\n\n    const analyzeOptions: IAnalyze = {\n      traceEvents,\n      traceHARJSON,\n      methods,\n    };\n\n    // analyze the liveTrace\n    await analyze(analyzeOptions);\n\n    // js-eval-time\n    let trace: any;\n    let totalJSDuration = 0;\n    let totalCSSDuration = 0;\n\n    const methodsSet = new Set();\n\n    try {\n      trace = setTraceEvents(traceEvents);\n    } catch (error) {\n      this.error(`${error}`);\n    }\n\n    trace\n      .filter((event: ITraceEvent) => event.name === \"EvaluateScript\")\n      .filter((event: any) => event.args.data.url)\n      .forEach((event: any) => {\n        const url = event.args.data.url;\n        const durationInMs = (event.dur as number) / 1000;\n        totalJSDuration += durationInMs;\n        this.log(`JS: ${url}: ${durationInMs.toFixed(2)}`);\n      });\n\n    // log js-eval-time\n    this.log(\n      `JS: Evaluation Total Duration: ${totalJSDuration.toFixed(2)}ms \\n\\n`\n    );\n\n    // css-parse\n    trace\n      .filter((event: ITraceEvent) => event.name === \"ParseAuthorStyleSheet\")\n      .filter((event: any) => event.args.data.styleSheetUrl)\n      .forEach((event: any) => {\n        const url = event.args.data.styleSheetUrl;\n        const durationInMs = event.dur / 1000;\n        totalCSSDuration += durationInMs;\n        this.log(`CSS: ${url}: ${durationInMs.toFixed(2)}`);\n      });\n\n    // log css-parse-time\n    this.log(\n      `CSS: Evaluation Total Duration: ${totalCSSDuration.toFixed(2)}ms \\n\\n`\n    );\n\n    // list-functions\n    try {\n      const profile = loadTrace(trace).cpuProfile(-1, -1);\n      profile.nodeMap.forEach((node: any) => {\n        const { functionName, url, lineNumber, columnNumber } = node.callFrame;\n\n        methodsSet.add(\n          `${url}:${lineNumber}:${columnNumber}.${normalizeFnName(\n            functionName\n          )}`\n        );\n      });\n    } catch (error) {\n      this.error(error);\n    }\n\n    try {\n      trace = setTraceEvents(traceEvents);\n      const traceLoad = trace.filter(isCommitLoad);\n      traceLoad.forEach(\n        ({\n          args: {\n            data: { frame, url },\n          },\n        }: {\n          args: { data: { frame: any; url: any } };\n        }) => {\n          this.log(`Frame-URL: ${url} | Frame-ID: ${frame}`);\n        }\n      );\n    } catch (error) {\n      this.error(`${error}`);\n    }\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"51860800d86b3c2672521fb7dd0725d60a0544c4"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_1wmjbuuxyq=function(){return actualCoverage;};return actualCoverage;}cov_1wmjbuuxyq().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});/* eslint-disable @typescript-eslint/explicit-function-return-type */const core_1=(cov_1wmjbuuxyq().s[1]++,require("@tracerbench/core"));const fs_extra_1=(cov_1wmjbuuxyq().s[2]++,require("fs-extra"));const path_1=(cov_1wmjbuuxyq().s[3]++,require("path"));const command_config_1=(cov_1wmjbuuxyq().s[4]++,require("../command-config"));const flags_1=(cov_1wmjbuuxyq().s[5]++,require("../helpers/flags"));const utils_1=(cov_1wmjbuuxyq().s[6]++,require("../helpers/utils"));class Trace extends(command_config_1.TBBaseCommand){async run(){cov_1wmjbuuxyq().f[0]++;const{flags}=(cov_1wmjbuuxyq().s[7]++,this.parse(Trace));const{url,cpuThrottleRate,cookiespath,tbResultsFolder,network,harpath}=(cov_1wmjbuuxyq().s[8]++,flags);let cookies=(cov_1wmjbuuxyq().s[9]++,[{name:"",value:"",domain:"",path:""}]);const methods=(cov_1wmjbuuxyq().s[10]++,[""]);const traceHAR=(cov_1wmjbuuxyq().s[11]++,path_1.resolve(harpath));const traceHARJSON=(cov_1wmjbuuxyq().s[12]++,await fs_extra_1.readJson(traceHAR));const conditions=(cov_1wmjbuuxyq().s[13]++,{cpu:cpuThrottleRate,network});cov_1wmjbuuxyq().s[14]++;if(cookiespath.length){cov_1wmjbuuxyq().b[0][0]++;cov_1wmjbuuxyq().s[15]++;cookies=await fs_extra_1.readJson(path_1.resolve(cookiespath));}else{cov_1wmjbuuxyq().b[0][1]++;}// if the folder for the tracerbench results file
// does not exist then create it
cov_1wmjbuuxyq().s[16]++;try{cov_1wmjbuuxyq().s[17]++;if(!fs_extra_1.existsSync(tbResultsFolder)){cov_1wmjbuuxyq().b[1][0]++;cov_1wmjbuuxyq().s[18]++;fs_extra_1.mkdirSync(tbResultsFolder);}else{cov_1wmjbuuxyq().b[1][1]++;}}catch(error){cov_1wmjbuuxyq().s[19]++;this.error(error);}// write the trace.json
cov_1wmjbuuxyq().s[20]++;fs_extra_1.writeFileSync(path_1.join(tbResultsFolder,"trace.json"),JSON.stringify(traceHARJSON,null,2));// run the liveTrace
const{traceEvents}=(cov_1wmjbuuxyq().s[21]++,await core_1.liveTrace(url,tbResultsFolder,cookies,conditions));const analyzeOptions=(cov_1wmjbuuxyq().s[22]++,{traceEvents,traceHARJSON,methods});// analyze the liveTrace
cov_1wmjbuuxyq().s[23]++;await core_1.analyze(analyzeOptions);// js-eval-time
let trace;let totalJSDuration=(cov_1wmjbuuxyq().s[24]++,0);let totalCSSDuration=(cov_1wmjbuuxyq().s[25]++,0);const methodsSet=(cov_1wmjbuuxyq().s[26]++,new Set());cov_1wmjbuuxyq().s[27]++;try{cov_1wmjbuuxyq().s[28]++;trace=utils_1.setTraceEvents(traceEvents);}catch(error){cov_1wmjbuuxyq().s[29]++;this.error(`${error}`);}cov_1wmjbuuxyq().s[30]++;trace.filter(event=>{cov_1wmjbuuxyq().f[1]++;cov_1wmjbuuxyq().s[31]++;return event.name==="EvaluateScript";}).filter(event=>{cov_1wmjbuuxyq().f[2]++;cov_1wmjbuuxyq().s[32]++;return event.args.data.url;}).forEach(event=>{cov_1wmjbuuxyq().f[3]++;const url=(cov_1wmjbuuxyq().s[33]++,event.args.data.url);const durationInMs=(cov_1wmjbuuxyq().s[34]++,event.dur/1000);cov_1wmjbuuxyq().s[35]++;totalJSDuration+=durationInMs;cov_1wmjbuuxyq().s[36]++;this.log(`JS: ${url}: ${durationInMs.toFixed(2)}`);});// log js-eval-time
cov_1wmjbuuxyq().s[37]++;this.log(`JS: Evaluation Total Duration: ${totalJSDuration.toFixed(2)}ms \n\n`);// css-parse
cov_1wmjbuuxyq().s[38]++;trace.filter(event=>{cov_1wmjbuuxyq().f[4]++;cov_1wmjbuuxyq().s[39]++;return event.name==="ParseAuthorStyleSheet";}).filter(event=>{cov_1wmjbuuxyq().f[5]++;cov_1wmjbuuxyq().s[40]++;return event.args.data.styleSheetUrl;}).forEach(event=>{cov_1wmjbuuxyq().f[6]++;const url=(cov_1wmjbuuxyq().s[41]++,event.args.data.styleSheetUrl);const durationInMs=(cov_1wmjbuuxyq().s[42]++,event.dur/1000);cov_1wmjbuuxyq().s[43]++;totalCSSDuration+=durationInMs;cov_1wmjbuuxyq().s[44]++;this.log(`CSS: ${url}: ${durationInMs.toFixed(2)}`);});// log css-parse-time
cov_1wmjbuuxyq().s[45]++;this.log(`CSS: Evaluation Total Duration: ${totalCSSDuration.toFixed(2)}ms \n\n`);// list-functions
cov_1wmjbuuxyq().s[46]++;try{const profile=(cov_1wmjbuuxyq().s[47]++,core_1.loadTrace(trace).cpuProfile(-1,-1));cov_1wmjbuuxyq().s[48]++;profile.nodeMap.forEach(node=>{cov_1wmjbuuxyq().f[7]++;const{functionName,url,lineNumber,columnNumber}=(cov_1wmjbuuxyq().s[49]++,node.callFrame);cov_1wmjbuuxyq().s[50]++;methodsSet.add(`${url}:${lineNumber}:${columnNumber}.${utils_1.normalizeFnName(functionName)}`);});}catch(error){cov_1wmjbuuxyq().s[51]++;this.error(error);}cov_1wmjbuuxyq().s[52]++;try{cov_1wmjbuuxyq().s[53]++;trace=utils_1.setTraceEvents(traceEvents);const traceLoad=(cov_1wmjbuuxyq().s[54]++,trace.filter(utils_1.isCommitLoad));cov_1wmjbuuxyq().s[55]++;traceLoad.forEach(({args:{data:{frame,url}}})=>{cov_1wmjbuuxyq().f[8]++;cov_1wmjbuuxyq().s[56]++;this.log(`Frame-URL: ${url} | Frame-ID: ${frame}`);});}catch(error){cov_1wmjbuuxyq().s[57]++;this.error(`${error}`);}}}cov_1wmjbuuxyq().s[58]++;exports.default=Trace;cov_1wmjbuuxyq().s[59]++;Trace.description=`Parses a CPU profile and aggregates time across heuristics. Can be vertically sliced with event names.`;cov_1wmjbuuxyq().s[60]++;Trace.flags={cpuThrottleRate:flags_1.cpuThrottleRate({required:true}),tbResultsFolder:flags_1.tbResultsFolder({required:true}),harpath:flags_1.harpath({required:true}),network:flags_1.network(),url:flags_1.url({required:true}),cookiespath:flags_1.cookiespath({required:true}),iterations:flags_1.iterations({required:true})};//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,