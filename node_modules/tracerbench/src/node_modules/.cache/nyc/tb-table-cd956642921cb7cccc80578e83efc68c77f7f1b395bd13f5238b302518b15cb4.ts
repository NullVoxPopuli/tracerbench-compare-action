"use strict";function cov_qzte9is1h(){var path="/Users/malynch/D/tracerbench/packages/cli/src/helpers/tb-table.ts";var hash="f12b7c4dcfb7d6302fa63cb46f36ce28e78d71f1";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/malynch/D/tracerbench/packages/cli/src/helpers/tb-table.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:14},end:{line:3,column:30}},"2":{start:{line:4,column:14},end:{line:4,column:35}},"3":{start:{line:5,column:16},end:{line:5,column:34}},"4":{start:{line:8,column:8},end:{line:8,column:31}},"5":{start:{line:9,column:8},end:{line:11,column:11}},"6":{start:{line:12,column:8},end:{line:12,column:26}},"7":{start:{line:13,column:8},end:{line:13,column:29}},"8":{start:{line:14,column:8},end:{line:14,column:34}},"9":{start:{line:22,column:18},end:{line:22,column:20}},"10":{start:{line:23,column:8},end:{line:40,column:11}},"11":{start:{line:24,column:12},end:{line:37,column:15}},"12":{start:{line:38,column:12},end:{line:38,column:64}},"13":{start:{line:39,column:12},end:{line:39,column:54}},"14":{start:{line:41,column:8},end:{line:41,column:17}},"15":{start:{line:44,column:8},end:{line:44,column:28}},"16":{start:{line:45,column:8},end:{line:45,column:37}},"17":{start:{line:48,column:38},end:{line:48,column:84}},"18":{start:{line:49,column:41},end:{line:49,column:90}},"19":{start:{line:50,column:8},end:{line:120,column:11}},"20":{start:{line:52,column:40},end:{line:52,column:59}},"21":{start:{line:54,column:12},end:{line:67,column:13}},"22":{start:{line:55,column:16},end:{line:63,column:17}},"23":{start:{line:56,column:20},end:{line:56,column:77}},"24":{start:{line:58,column:21},end:{line:63,column:17}},"25":{start:{line:59,column:20},end:{line:59,column:78}},"26":{start:{line:62,column:20},end:{line:62,column:79}},"27":{start:{line:66,column:16},end:{line:66,column:74}},"28":{start:{line:68,column:12},end:{line:119,column:15}},"29":{start:{line:121,column:8},end:{line:121,column:26}},"30":{start:{line:124,column:0},end:{line:124,column:26}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:7,column:4},end:{line:7,column:5}},loc:{start:{line:7,column:25},end:{line:15,column:5}},line:7},"1":{name:"(anonymous_1)",decl:{start:{line:21,column:4},end:{line:21,column:5}},loc:{start:{line:21,column:14},end:{line:42,column:5}},line:21},"2":{name:"(anonymous_2)",decl:{start:{line:23,column:29},end:{line:23,column:30}},loc:{start:{line:23,column:39},end:{line:40,column:9}},line:23},"3":{name:"(anonymous_3)",decl:{start:{line:43,column:4},end:{line:43,column:5}},loc:{start:{line:43,column:13},end:{line:46,column:5}},line:43},"4":{name:"(anonymous_4)",decl:{start:{line:47,column:4},end:{line:47,column:5}},loc:{start:{line:47,column:19},end:{line:122,column:5}},line:47},"5":{name:"(anonymous_5)",decl:{start:{line:50,column:29},end:{line:50,column:30}},loc:{start:{line:50,column:39},end:{line:120,column:9}},line:50}},branchMap:{"0":{loc:{start:{line:54,column:12},end:{line:67,column:13}},type:"if",locations:[{start:{line:54,column:12},end:{line:67,column:13}},{start:{line:54,column:12},end:{line:67,column:13}}],line:54},"1":{loc:{start:{line:55,column:16},end:{line:63,column:17}},type:"if",locations:[{start:{line:55,column:16},end:{line:63,column:17}},{start:{line:55,column:16},end:{line:63,column:17}}],line:55},"2":{loc:{start:{line:58,column:21},end:{line:63,column:17}},type:"if",locations:[{start:{line:58,column:21},end:{line:63,column:17}},{start:{line:58,column:21},end:{line:63,column:17}}],line:58}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},inputSourceMap:{version:3,file:"/Users/malynch/D/tracerbench/packages/cli/src/helpers/tb-table.ts",sources:["/Users/malynch/D/tracerbench/packages/cli/src/helpers/tb-table.ts"],names:[],mappings:"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",sourcesContent:["import { Stats } from \"@tracerbench/stats\";\nimport * as chalk from \"chalk\";\nimport * as Table from \"cli-table3\";\n\nimport { ICompareJSONResult } from \"./log-compare-results\";\nimport { chalkScheme } from \"./utils\";\n\nexport default class TBTable {\n  public table: Table.Table;\n  public display: Stats[];\n  public estimatorDeltas: number[];\n  public isSigArray: boolean[];\n  private heading: string;\n\n  constructor(heading: string) {\n    this.heading = heading;\n    this.table = new Table({\n      colWidths: [40, 30],\n    });\n    this.display = [];\n    this.isSigArray = [];\n    this.estimatorDeltas = [];\n  }\n\n  // return table data for JSON results\n  // confidence interval and estimatorDelta are inverted\n  // to show a regression as a positive number\n  // and an improvement as a negative number ie (N * -1)\n  // JSON results, stdout, PDF, HTML have parity\n  public getData(): ICompareJSONResult[] {\n    const a: ICompareJSONResult[] = [];\n    this.display.forEach((stat) => {\n      a.push({\n        heading: this.heading,\n        phaseName: stat.name,\n        isSignificant: stat.confidenceInterval.isSig,\n        estimatorDelta: `${stat.estimator * -1}ms`,\n        controlSampleCount: stat.sampleCount.control,\n        experimentSampleCount: stat.sampleCount.experiment,\n        confidenceInterval: [\n          `${stat.confidenceInterval.max * -1}ms`,\n          `${stat.confidenceInterval.min * -1}ms`,\n        ],\n        controlSevenFigureSummary: stat.sevenFigureSummary.control,\n        experimentSevenFigureSummary: stat.sevenFigureSummary.experiment,\n      });\n\n      this.isSigArray.push(stat.confidenceInterval.isSig);\n      this.estimatorDeltas.push(stat.estimator);\n    });\n    return a;\n  }\n\n  public render(): string {\n    this.setTableData();\n    return this.table.toString();\n  }\n\n  private setTableData(): Table.Table {\n    const controlLabelWithColor = chalkScheme.tbBranding.lime(\"Control\");\n    const experimentLabelWithColor = chalkScheme.tbBranding.aqua(\"Experiment\");\n    this.display.forEach((stat) => {\n      // setting the color for the Hodges\u2013Lehmann estimated delta\n      const estimatorForDisplay = stat.estimator * -1;\n      let hlDeltaWithColor;\n\n      if (stat.confidenceInterval.isSig) {\n        if (estimatorForDisplay > 0) {\n          hlDeltaWithColor = chalk.red(`${estimatorForDisplay}ms`);\n        } else if (!estimatorForDisplay) {\n          hlDeltaWithColor = chalk.grey(`${estimatorForDisplay}ms`);\n        } else {\n          hlDeltaWithColor = chalk.green(`${estimatorForDisplay}ms`);\n        }\n      } else {\n        hlDeltaWithColor = chalk.grey(`${estimatorForDisplay}ms`);\n      }\n\n      this.table.push(\n        [\n          {\n            colSpan: 2,\n            content: `${chalkScheme.tbBranding.blue(\n              `${this.heading} : ${stat.name}`\n            )}`,\n          },\n        ],\n        [\n          {\n            vAlign: \"center\",\n            rowSpan: 2,\n            colSpan: 1,\n            content: \"Sample Counts:\",\n          },\n          `${controlLabelWithColor}: ${stat.sampleCount.control}`,\n        ],\n        [`${experimentLabelWithColor}: ${stat.sampleCount.experiment}`],\n        [],\n        [\n          {\n            vAlign: \"center\",\n            rowSpan: 7,\n            colSpan: 1,\n            content: `${controlLabelWithColor} Seven Figure Summary:`,\n          },\n          `MIN: ${stat.sevenFigureSummary.control.min}ms`,\n        ],\n        [`MAX: ${stat.sevenFigureSummary.control.max}ms`],\n        [`10th: ${stat.sevenFigureSummary.control[10]}ms`],\n        [`25th: ${stat.sevenFigureSummary.control[25]}ms`],\n        [`50th: ${stat.sevenFigureSummary.control[50]}ms`],\n        [`75th: ${stat.sevenFigureSummary.control[75]}ms`],\n        [`90th: ${stat.sevenFigureSummary.control[90]}ms`],\n        [],\n        [\n          {\n            vAlign: \"center\",\n            rowSpan: 7,\n            colSpan: 1,\n            content: `${experimentLabelWithColor} Seven Figure Summary:`,\n          },\n          `MIN: ${stat.sevenFigureSummary.experiment.min}ms`,\n        ],\n        [`MAX: ${stat.sevenFigureSummary.experiment.max}ms`],\n        [`10th: ${stat.sevenFigureSummary.experiment[10]}ms`],\n        [`25th: ${stat.sevenFigureSummary.experiment[25]}ms`],\n        [`50th: ${stat.sevenFigureSummary.experiment[50]}ms`],\n        [`75th: ${stat.sevenFigureSummary.experiment[75]}ms`],\n        [`90th: ${stat.sevenFigureSummary.experiment[90]}ms`],\n        [],\n        [\n          {\n            content: \"Hodges\u2013Lehmann estimated delta:\",\n          },\n          // Reverse the signs when displaying\n          { content: `${hlDeltaWithColor}` },\n        ],\n        [],\n        [\n          {\n            content: `95% confident the delta is between:`,\n          },\n          {\n            // For display flip the min and max\n            content: `${stat.confidenceInterval.max * -1}ms to ${\n              stat.confidenceInterval.min * -1\n            }ms`,\n          },\n        ],\n        [],\n        [\n          { content: \"Is Significant:\" },\n          { content: `${stat.confidenceInterval.isSig}` },\n        ],\n        [],\n        [\"Control Sparkline\", { content: `${stat.sparkLine.control}` }],\n        [\n          \"Experiment Sparkline\",\n          {\n            content: `${stat.sparkLine.experiment}`,\n          },\n        ]\n      );\n    });\n\n    return this.table;\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"f12b7c4dcfb7d6302fa63cb46f36ce28e78d71f1"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_qzte9is1h=function(){return actualCoverage;};return actualCoverage;}cov_qzte9is1h().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const chalk=(cov_qzte9is1h().s[1]++,require("chalk"));const Table=(cov_qzte9is1h().s[2]++,require("cli-table3"));const utils_1=(cov_qzte9is1h().s[3]++,require("./utils"));class TBTable{constructor(heading){cov_qzte9is1h().f[0]++;cov_qzte9is1h().s[4]++;this.heading=heading;cov_qzte9is1h().s[5]++;this.table=new Table({colWidths:[40,30]});cov_qzte9is1h().s[6]++;this.display=[];cov_qzte9is1h().s[7]++;this.isSigArray=[];cov_qzte9is1h().s[8]++;this.estimatorDeltas=[];}// return table data for JSON results
// confidence interval and estimatorDelta are inverted
// to show a regression as a positive number
// and an improvement as a negative number ie (N * -1)
// JSON results, stdout, PDF, HTML have parity
getData(){cov_qzte9is1h().f[1]++;const a=(cov_qzte9is1h().s[9]++,[]);cov_qzte9is1h().s[10]++;this.display.forEach(stat=>{cov_qzte9is1h().f[2]++;cov_qzte9is1h().s[11]++;a.push({heading:this.heading,phaseName:stat.name,isSignificant:stat.confidenceInterval.isSig,estimatorDelta:`${stat.estimator*-1}ms`,controlSampleCount:stat.sampleCount.control,experimentSampleCount:stat.sampleCount.experiment,confidenceInterval:[`${stat.confidenceInterval.max*-1}ms`,`${stat.confidenceInterval.min*-1}ms`],controlSevenFigureSummary:stat.sevenFigureSummary.control,experimentSevenFigureSummary:stat.sevenFigureSummary.experiment});cov_qzte9is1h().s[12]++;this.isSigArray.push(stat.confidenceInterval.isSig);cov_qzte9is1h().s[13]++;this.estimatorDeltas.push(stat.estimator);});cov_qzte9is1h().s[14]++;return a;}render(){cov_qzte9is1h().f[3]++;cov_qzte9is1h().s[15]++;this.setTableData();cov_qzte9is1h().s[16]++;return this.table.toString();}setTableData(){cov_qzte9is1h().f[4]++;const controlLabelWithColor=(cov_qzte9is1h().s[17]++,utils_1.chalkScheme.tbBranding.lime("Control"));const experimentLabelWithColor=(cov_qzte9is1h().s[18]++,utils_1.chalkScheme.tbBranding.aqua("Experiment"));cov_qzte9is1h().s[19]++;this.display.forEach(stat=>{cov_qzte9is1h().f[5]++;// setting the color for the Hodges–Lehmann estimated delta
const estimatorForDisplay=(cov_qzte9is1h().s[20]++,stat.estimator*-1);let hlDeltaWithColor;cov_qzte9is1h().s[21]++;if(stat.confidenceInterval.isSig){cov_qzte9is1h().b[0][0]++;cov_qzte9is1h().s[22]++;if(estimatorForDisplay>0){cov_qzte9is1h().b[1][0]++;cov_qzte9is1h().s[23]++;hlDeltaWithColor=chalk.red(`${estimatorForDisplay}ms`);}else{cov_qzte9is1h().b[1][1]++;cov_qzte9is1h().s[24]++;if(!estimatorForDisplay){cov_qzte9is1h().b[2][0]++;cov_qzte9is1h().s[25]++;hlDeltaWithColor=chalk.grey(`${estimatorForDisplay}ms`);}else{cov_qzte9is1h().b[2][1]++;cov_qzte9is1h().s[26]++;hlDeltaWithColor=chalk.green(`${estimatorForDisplay}ms`);}}}else{cov_qzte9is1h().b[0][1]++;cov_qzte9is1h().s[27]++;hlDeltaWithColor=chalk.grey(`${estimatorForDisplay}ms`);}cov_qzte9is1h().s[28]++;this.table.push([{colSpan:2,content:`${utils_1.chalkScheme.tbBranding.blue(`${this.heading} : ${stat.name}`)}`}],[{vAlign:"center",rowSpan:2,colSpan:1,content:"Sample Counts:"},`${controlLabelWithColor}: ${stat.sampleCount.control}`],[`${experimentLabelWithColor}: ${stat.sampleCount.experiment}`],[],[{vAlign:"center",rowSpan:7,colSpan:1,content:`${controlLabelWithColor} Seven Figure Summary:`},`MIN: ${stat.sevenFigureSummary.control.min}ms`],[`MAX: ${stat.sevenFigureSummary.control.max}ms`],[`10th: ${stat.sevenFigureSummary.control[10]}ms`],[`25th: ${stat.sevenFigureSummary.control[25]}ms`],[`50th: ${stat.sevenFigureSummary.control[50]}ms`],[`75th: ${stat.sevenFigureSummary.control[75]}ms`],[`90th: ${stat.sevenFigureSummary.control[90]}ms`],[],[{vAlign:"center",rowSpan:7,colSpan:1,content:`${experimentLabelWithColor} Seven Figure Summary:`},`MIN: ${stat.sevenFigureSummary.experiment.min}ms`],[`MAX: ${stat.sevenFigureSummary.experiment.max}ms`],[`10th: ${stat.sevenFigureSummary.experiment[10]}ms`],[`25th: ${stat.sevenFigureSummary.experiment[25]}ms`],[`50th: ${stat.sevenFigureSummary.experiment[50]}ms`],[`75th: ${stat.sevenFigureSummary.experiment[75]}ms`],[`90th: ${stat.sevenFigureSummary.experiment[90]}ms`],[],[{content:"Hodges–Lehmann estimated delta:"},// Reverse the signs when displaying
{content:`${hlDeltaWithColor}`}],[],[{content:`95% confident the delta is between:`},{// For display flip the min and max
content:`${stat.confidenceInterval.max*-1}ms to ${stat.confidenceInterval.min*-1}ms`}],[],[{content:"Is Significant:"},{content:`${stat.confidenceInterval.isSig}`}],[],["Control Sparkline",{content:`${stat.sparkLine.control}`}],["Experiment Sparkline",{content:`${stat.sparkLine.experiment}`}]);});cov_qzte9is1h().s[29]++;return this.table;}}cov_qzte9is1h().s[30]++;exports.default=TBTable;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,