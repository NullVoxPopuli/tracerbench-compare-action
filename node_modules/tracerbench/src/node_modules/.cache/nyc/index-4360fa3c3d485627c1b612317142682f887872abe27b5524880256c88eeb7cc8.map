{"version":3,"file":"/Users/malynch/D/tracerbench/packages/cli/src/commands/compare/index.ts","sources":["/Users/malynch/D/tracerbench/packages/cli/src/commands/compare/index.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { IConfig } from \"@oclif/config\";\nimport {\n  IInitialRenderBenchmarkParams,\n  IMarker,\n  InitialRenderBenchmark,\n  networkConditions,\n  Runner,\n} from \"@tracerbench/core\";\nimport Protocol from \"devtools-protocol\";\nimport * as fs from \"fs-extra\";\nimport * as path from \"path\";\n\nimport { flags, getConfig, TBBaseCommand } from \"../../command-config\";\nimport {\n  defaultFlagArgs,\n  fidelityLookup,\n  headlessFlags,\n} from \"../../command-config/default-flag-args\";\nimport {\n  CONTROL_ENV_OVERRIDE_ATTR,\n  EXPERIMENT_ENV_OVERRIDE_ATTR,\n  ITBConfig,\n} from \"../../command-config/tb-config\";\nimport { getEmulateDeviceSettingForKeyAndOrientation } from \"../../helpers/device-settings\";\nimport {\n  browserArgs,\n  config,\n  controlURL,\n  cpuThrottleRate,\n  debug,\n  emulateDevice,\n  emulateDeviceOrientation,\n  experimentURL,\n  fidelity,\n  headless,\n  isCIEnv,\n  markers,\n  network,\n  regressionThreshold,\n  report,\n  runtimeStats,\n  socksPorts,\n  tbResultsFolder,\n  tracingLocationSearch,\n} from \"../../helpers/flags\";\nimport {\n  chalkScheme,\n  checkEnvironmentSpecificOverride,\n  durationInSec,\n  parseMarkers,\n  timestamp,\n} from \"../../helpers/utils\";\nimport CompareAnalyze from \"./analyze\";\nimport CompareReport from \"./report\";\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst archiver = require(\"archiver\");\nexport interface ICompareFlags {\n  hideAnalysis: boolean;\n  browserArgs: string[];\n  cpuThrottleRate: number;\n  fidelity: number;\n  markers: IMarker[];\n  network: Protocol.Network.EmulateNetworkConditionsRequest;\n  tbResultsFolder: string;\n  controlURL: string | undefined;\n  experimentURL: string | undefined;\n  tracingLocationSearch: string;\n  runtimeStats: boolean;\n  emulateDevice?: string;\n  emulateDeviceOrientation?: string;\n  socksPorts?: [string, string] | [number, number] | undefined;\n  debug: boolean;\n  regressionThreshold?: number;\n  headless: boolean;\n  config?: string;\n  report?: boolean;\n  isCIEnv?: boolean;\n}\n\nexport default class Compare extends TBBaseCommand {\n  public static description =\n    \"Compare the performance delta between an experiment and control\";\n  public static flags = {\n    hideAnalysis: flags.boolean({\n      default: false,\n      description: \"Hide the the analysis output in terminal\",\n    }),\n    browserArgs: browserArgs({ required: true }),\n    cpuThrottleRate: cpuThrottleRate({ required: true }),\n    fidelity: fidelity({ required: true }),\n    markers: markers({ required: true }),\n    network: network({ required: true }),\n    tbResultsFolder: tbResultsFolder({ required: true }),\n    controlURL: controlURL({ required: false }),\n    experimentURL: experimentURL({ required: false }),\n    tracingLocationSearch: tracingLocationSearch({ required: true }),\n    emulateDevice: emulateDevice(),\n    emulateDeviceOrientation: emulateDeviceOrientation(),\n    socksPorts: socksPorts(),\n    regressionThreshold: regressionThreshold(),\n    config: config(),\n    runtimeStats,\n    report,\n    debug,\n    headless,\n    isCIEnv: isCIEnv(),\n  };\n  public compareFlags: ICompareFlags;\n  public parsedConfig: ITBConfig = defaultFlagArgs;\n  // flags explicitly specified within the cli when\n  // running the command. these will override all\n  public explicitFlags: string[];\n  public analyzedJSONString = \"\";\n  constructor(argv: string[], config: IConfig) {\n    super(argv, config);\n    const { flags } = this.parse(Compare);\n    this.explicitFlags = argv;\n    this.compareFlags = flags;\n  }\n\n  // instantiated before this.run()\n  public async init(): Promise<void> {\n    const { flags } = this.parse(Compare);\n    this.parsedConfig = getConfig(flags.config, flags, this.explicitFlags);\n    this.compareFlags = flags;\n    await this.parseFlags();\n  }\n\n  public async run(): Promise<string> {\n    const { hideAnalysis } = this.compareFlags;\n    const [\n      controlSettings,\n      experimentSettings,\n    ] = this.generateControlExperimentServerConfig();\n\n    // this should be directly above the instantiation of the InitialRenderBenchmarks\n    if (this.parsedConfig.debug) {\n      Object.entries(this.parsedConfig).forEach(([key, value]) => {\n        if (value) {\n          this.log(`${key}: ${JSON.stringify(value)}`);\n        }\n      });\n    }\n\n    const benchmarks = {\n      control: new InitialRenderBenchmark(controlSettings),\n      experiment: new InitialRenderBenchmark(experimentSettings),\n    };\n\n    const runner = new Runner([benchmarks.control, benchmarks.experiment]);\n    const startTime = timestamp();\n    await runner\n      .run(this.compareFlags.fidelity, this.log)\n      .then(async (results: any) => {\n        const endTime = timestamp();\n        if (!results[0].samples[0]) {\n          this.error(\n            `Could not sample from provided urls\\nCONTROL: ${this.parsedConfig.controlURL}\\nEXPERIMENT: ${this.parsedConfig.experimentURL}.`\n          );\n        }\n        const resultJSONPath = `${this.parsedConfig.tbResultsFolder}/compare.json`;\n\n        fs.writeFileSync(resultJSONPath, JSON.stringify(results, null, 2));\n\n        const tracesDir = `${this.parsedConfig.tbResultsFolder}/traces`;\n        const zipOutput = fs.createWriteStream(\n          `${this.parsedConfig.tbResultsFolder}/traces.zip`\n        );\n        const archive = archiver(\"zip\", {\n          zlib: { level: 9 },\n        });\n        archive.directory(tracesDir, \"traces\");\n        archive.pipe(zipOutput);\n        archive.finalize();\n\n        // eslint:disable-next-line: max-line-length\n        const message = `${chalkScheme.blackBgGreen(\n          `    ${chalkScheme.white(\"SUCCESS!\")}    `\n        )} ${this.parsedConfig.fidelity} test samples took ${durationInSec(\n          endTime,\n          startTime\n        )} seconds`;\n\n        this.log(`\\n${message}`);\n\n        if (!hideAnalysis) {\n          this.analyzedJSONString = await CompareAnalyze.run([\n            resultJSONPath,\n            \"--fidelity\",\n            `${this.parsedConfig.fidelity}`,\n            \"--regressionThreshold\",\n            `${this.parsedConfig.regressionThreshold}`,\n            \"--isCIEnv\",\n            `${this.parsedConfig.isCIEnv}`,\n          ]);\n\n          fs.writeFileSync(\n            `${this.parsedConfig.tbResultsFolder}/report.json`,\n            this.analyzedJSONString\n          );\n        }\n\n        // if we want to run the CompareReport without calling a separate command\n        if (this.parsedConfig.report) {\n          await CompareReport.run([\n            \"--tbResultsFolder\",\n            `${this.parsedConfig.tbResultsFolder}`,\n            \"--config\",\n            `${this.parsedConfig.config}`,\n          ]);\n        }\n\n        // with debug flag output three files\n        // on config specifics\n        if (this.parsedConfig.debug) {\n          fs.writeFileSync(\n            `${this.parsedConfig.tbResultsFolder}/server-control-settings.json`,\n            JSON.stringify(Object.assign(controlSettings), null, 2)\n          );\n\n          fs.writeFileSync(\n            `${this.parsedConfig.tbResultsFolder}/server-experiment-settings.json`,\n            JSON.stringify(Object.assign(experimentSettings), null, 2)\n          );\n\n          fs.writeFileSync(\n            `${this.parsedConfig.tbResultsFolder}/compare-flags-settings.json`,\n            JSON.stringify(Object.assign(this.parsedConfig), null, 2)\n          );\n        }\n      })\n      .catch((err: any) => {\n        this.error(err);\n      });\n\n    return this.analyzedJSONString;\n  }\n\n  private async parseFlags(): Promise<void> {\n    const {\n      tbResultsFolder,\n      fidelity,\n      markers,\n      regressionThreshold,\n      headless,\n      controlURL,\n      experimentURL,\n    } = (this.parsedConfig as unknown) as ICompareFlags;\n\n    // modifies properties of flags that were not set\n    // during flag.parse(). these are intentionally\n    // not deconstructed as to maintain the mutable\n    // flags object state\n    if (typeof fidelity === \"string\") {\n      this.compareFlags.fidelity = parseInt(\n        (fidelityLookup as any)[fidelity],\n        10\n      );\n    }\n    if (typeof markers === \"string\") {\n      this.parsedConfig.markers = parseMarkers(markers);\n    }\n    if (typeof regressionThreshold === \"string\") {\n      this.parsedConfig.regressionThreshold = parseInt(regressionThreshold, 10);\n    }\n    if (typeof controlURL === undefined) {\n      this.error(\n        \"controlURL is required either in the tbconfig.json or as cli flag\"\n      );\n    }\n\n    if (typeof experimentURL === undefined) {\n      this.error(\n        \"experimentURL is required either in the tbconfig.json or as cli flag\"\n      );\n    }\n\n    // if headless flag is true include the headless flags\n    if (headless) {\n      this.parsedConfig.browserArgs = this.compareFlags.browserArgs.concat(\n        headlessFlags\n      );\n    }\n\n    // if the folder for the tracerbench results file\n    // does not exist then create it\n    fs.mkdirpSync(path.join(tbResultsFolder, \"traces\"));\n  }\n\n  /**\n   * Final result of the configs are in the following order:\n   *\n   * controlConfigs = tbconfig:controlBenchmarkEnvironment > command line > tbconfig > default\n   * experimentConfigs = tbconfig:experimentBenchmarkEnvironment > command line > tbconfig > default\n   *\n   * This functions handles the tsconfig:** part since it is assumed that parent function that passed input \"flags\"\n   * would've handled \"command line > tbconfig > default\"\n   *\n   * @param this.parsedConfig - Object containing configs parsed from the Command class\n   */\n  private generateControlExperimentServerConfig(): [\n    IInitialRenderBenchmarkParams,\n    IInitialRenderBenchmarkParams\n  ] {\n    // delay in ms times the number of samples. this improves variance.\n    // eg 100 total samples X 200ms per sample = 20 seconds total added to the trace time\n    const delay = 200;\n    const controlBrowser = {\n      additionalArguments: this.compareFlags.browserArgs,\n    };\n    const experimentBrowser = {\n      additionalArguments: this.compareFlags.browserArgs,\n    };\n\n    // config for the browsers to leverage socks proxy\n    if (this.parsedConfig.socksPorts) {\n      controlBrowser.additionalArguments = controlBrowser.additionalArguments.concat(\n        [`--proxy-server=socks5://0.0.0.0:${this.parsedConfig.socksPorts[0]}`]\n      );\n      experimentBrowser.additionalArguments = experimentBrowser.additionalArguments.concat(\n        [`--proxy-server=socks5://0.0.0.0:${this.parsedConfig.socksPorts[1]}`]\n      );\n    }\n    const controlNetwork: string = checkEnvironmentSpecificOverride(\n      \"network\",\n      this.compareFlags,\n      CONTROL_ENV_OVERRIDE_ATTR,\n      this.parsedConfig\n    );\n    const controlEmulateDevice = checkEnvironmentSpecificOverride(\n      \"emulateDevice\",\n      this.compareFlags,\n      CONTROL_ENV_OVERRIDE_ATTR,\n      this.parsedConfig\n    );\n    const controlEmulateDeviceOrientation = checkEnvironmentSpecificOverride(\n      \"emulateDeviceOrientation\",\n      this.compareFlags,\n      CONTROL_ENV_OVERRIDE_ATTR,\n      this.parsedConfig\n    );\n    const experimentNetwork: string = checkEnvironmentSpecificOverride(\n      \"network\",\n      this.compareFlags,\n      EXPERIMENT_ENV_OVERRIDE_ATTR,\n      this.parsedConfig\n    );\n    const experimentEmulateDevice = checkEnvironmentSpecificOverride(\n      \"emulateDevice\",\n      this.compareFlags,\n      EXPERIMENT_ENV_OVERRIDE_ATTR,\n      this.parsedConfig\n    );\n    const experimentEmulateDeviceOrientation = checkEnvironmentSpecificOverride(\n      \"emulateDeviceOrientation\",\n      this.compareFlags,\n      EXPERIMENT_ENV_OVERRIDE_ATTR,\n      this.parsedConfig\n    );\n\n    const controlSettings: IInitialRenderBenchmarkParams = {\n      browser: controlBrowser,\n      cpuThrottleRate: checkEnvironmentSpecificOverride(\n        \"cpuThrottleRate\",\n        this.compareFlags,\n        CONTROL_ENV_OVERRIDE_ATTR,\n        this.parsedConfig\n      ),\n      delay,\n      emulateDeviceSettings: controlEmulateDevice\n        ? getEmulateDeviceSettingForKeyAndOrientation(\n            controlEmulateDevice,\n            controlEmulateDeviceOrientation\n          )\n        : undefined,\n      markers: this.compareFlags.markers,\n      networkConditions: controlNetwork\n        ? networkConditions[controlNetwork as keyof typeof networkConditions]\n        : this.compareFlags.network,\n      name: \"control\",\n      runtimeStats: this.compareFlags.runtimeStats,\n      saveTraces: (i) =>\n        `${this.compareFlags.tbResultsFolder}/traces/control${i}.json`,\n      url: path.join(\n        this.compareFlags.controlURL + this.compareFlags.tracingLocationSearch\n      ),\n    };\n\n    const experimentSettings: IInitialRenderBenchmarkParams = {\n      browser: experimentBrowser,\n      cpuThrottleRate: checkEnvironmentSpecificOverride(\n        \"cpuThrottleRate\",\n        this.compareFlags,\n        EXPERIMENT_ENV_OVERRIDE_ATTR,\n        this.parsedConfig\n      ),\n      delay,\n      emulateDeviceSettings: experimentEmulateDevice\n        ? getEmulateDeviceSettingForKeyAndOrientation(\n            experimentEmulateDevice,\n            experimentEmulateDeviceOrientation\n          )\n        : undefined,\n      markers: this.compareFlags.markers,\n      networkConditions: experimentNetwork\n        ? networkConditions[experimentNetwork as keyof typeof networkConditions]\n        : this.compareFlags.network,\n      name: \"experiment\",\n      runtimeStats: this.compareFlags.runtimeStats,\n      saveTraces: (i) =>\n        `${this.compareFlags.tbResultsFolder}/traces/experiment${i}.json`,\n      url: path.join(\n        this.compareFlags.experimentURL +\n          this.compareFlags.tracingLocationSearch\n      ),\n    };\n\n    return [controlSettings, experimentSettings];\n  }\n}\n"]}