"use strict";/* eslint-disable @typescript-eslint/explicit-function-return-type */ /* eslint-disable @typescript-eslint/no-explicit-any */ /* eslint:disable:no-console*/function cov_vm1o9b4bx(){var path="/Users/malynch/D/tracerbench/packages/cli/src/helpers/utils.ts";var hash="8d1e473db68206f97295599a0616f0ad1b298bad";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/malynch/D/tracerbench/packages/cli/src/helpers/utils.ts",statementMap:{"0":{start:{line:5,column:0},end:{line:5,column:62}},"1":{start:{line:6,column:14},end:{line:6,column:30}},"2":{start:{line:7,column:19},end:{line:7,column:41}},"3":{start:{line:19,column:4},end:{line:21,column:5}},"4":{start:{line:20,column:8},end:{line:20,column:36}},"5":{start:{line:23,column:39},end:{line:23,column:67}},"6":{start:{line:24,column:4},end:{line:26,column:5}},"7":{start:{line:25,column:8},end:{line:25,column:36}},"8":{start:{line:27,column:4},end:{line:27,column:53}},"9":{start:{line:29,column:0},end:{line:29,column:76}},"10":{start:{line:40,column:4},end:{line:51,column:7}},"11":{start:{line:41,column:26},end:{line:41,column:35}},"12":{start:{line:42,column:27},end:{line:42,column:36}},"13":{start:{line:43,column:35},end:{line:43,column:98}},"14":{start:{line:44,column:27},end:{line:44,column:80}},"15":{start:{line:45,column:8},end:{line:50,column:9}},"16":{start:{line:46,column:12},end:{line:46,column:45}},"17":{start:{line:49,column:12},end:{line:49,column:35}},"18":{start:{line:52,column:4},end:{line:52,column:16}},"19":{start:{line:54,column:0},end:{line:54,column:30}},"20":{start:{line:56,column:4},end:{line:56,column:56}},"21":{start:{line:57,column:4},end:{line:57,column:41}},"22":{start:{line:59,column:0},end:{line:59,column:58}},"23":{start:{line:61,column:4},end:{line:61,column:56}},"24":{start:{line:62,column:4},end:{line:62,column:33}},"25":{start:{line:64,column:0},end:{line:64,column:58}},"26":{start:{line:66,column:18},end:{line:66,column:20}},"27":{start:{line:67,column:4},end:{line:71,column:7}},"28":{start:{line:68,column:8},end:{line:70,column:9}},"29":{start:{line:69,column:12},end:{line:69,column:49}},"30":{start:{line:73,column:4},end:{line:73,column:52}},"31":{start:{line:75,column:0},end:{line:75,column:46}},"32":{start:{line:77,column:4},end:{line:79,column:5}},"33":{start:{line:78,column:8},end:{line:78,column:29}},"34":{start:{line:80,column:4},end:{line:80,column:16}},"35":{start:{line:82,column:0},end:{line:82,column:42}},"36":{start:{line:84,column:4},end:{line:84,column:58}},"37":{start:{line:86,column:0},end:{line:86,column:40}},"38":{start:{line:88,column:4},end:{line:88,column:19}},"39":{start:{line:89,column:4},end:{line:89,column:16}},"40":{start:{line:91,column:0},end:{line:91,column:26}},"41":{start:{line:93,column:4},end:{line:93,column:50}},"42":{start:{line:95,column:0},end:{line:95,column:44}},"43":{start:{line:97,column:4},end:{line:97,column:28}},"44":{start:{line:99,column:0},end:{line:99,column:24}},"45":{start:{line:101,column:4},end:{line:101,column:58}},"46":{start:{line:103,column:0},end:{line:103,column:34}},"47":{start:{line:105,column:4},end:{line:113,column:5}},"48":{start:{line:106,column:8},end:{line:108,column:9}},"49":{start:{line:107,column:12},end:{line:107,column:24}},"50":{start:{line:109,column:8},end:{line:109,column:21}},"51":{start:{line:112,column:8},end:{line:112,column:21}},"52":{start:{line:115,column:0},end:{line:115,column:40}},"53":{start:{line:117,column:4},end:{line:119,column:36}},"54":{start:{line:121,column:0},end:{line:121,column:56}},"55":{start:{line:123,column:4},end:{line:125,column:46}},"56":{start:{line:127,column:0},end:{line:127,column:32}},"57":{start:{line:129,column:4},end:{line:132,column:37}},"58":{start:{line:134,column:0},end:{line:134,column:36}},"59":{start:{line:136,column:4},end:{line:136,column:23}},"60":{start:{line:138,column:0},end:{line:138,column:24}},"61":{start:{line:140,column:18},end:{line:142,column:53}},"62":{start:{line:142,column:21},end:{line:142,column:52}},"63":{start:{line:143,column:4},end:{line:145,column:5}},"64":{start:{line:144,column:8},end:{line:144,column:37}},"65":{start:{line:146,column:4},end:{line:146,column:14}},"66":{start:{line:148,column:0},end:{line:148,column:30}},"67":{start:{line:150,column:14},end:{line:150,column:16}},"68":{start:{line:151,column:4},end:{line:153,column:5}},"69":{start:{line:152,column:8},end:{line:152,column:25}},"70":{start:{line:154,column:4},end:{line:159,column:7}},"71":{start:{line:155,column:8},end:{line:158,column:11}},"72":{start:{line:160,column:4},end:{line:160,column:13}},"73":{start:{line:162,column:0},end:{line:162,column:36}},"74":{start:{line:164,column:4},end:{line:164,column:36}},"75":{start:{line:166,column:0},end:{line:166,column:44}},"76":{start:{line:168,column:14},end:{line:168,column:16}},"77":{start:{line:169,column:4},end:{line:175,column:5}},"78":{start:{line:170,column:8},end:{line:172,column:9}},"79":{start:{line:171,column:12},end:{line:171,column:25}},"80":{start:{line:173,column:8},end:{line:173,column:28}},"81":{start:{line:174,column:8},end:{line:174,column:27}},"82":{start:{line:176,column:4},end:{line:176,column:13}},"83":{start:{line:178,column:0},end:{line:178,column:30}},"84":{start:{line:186,column:18},end:{line:186,column:33}},"85":{start:{line:187,column:28},end:{line:187,column:86}},"86":{start:{line:187,column:48},end:{line:187,column:85}},"87":{start:{line:188,column:4},end:{line:188,column:37}},"88":{start:{line:190,column:0},end:{line:190,column:44}},"89":{start:{line:192,column:4},end:{line:192,column:37}},"90":{start:{line:194,column:0},end:{line:194,column:46}},"91":{start:{line:195,column:0},end:{line:217,column:2}},"92":{start:{line:219,column:19},end:{line:219,column:49}},"93":{start:{line:220,column:4},end:{line:220,column:60}},"94":{start:{line:222,column:0},end:{line:222,column:46}},"95":{start:{line:224,column:4},end:{line:224,column:107}},"96":{start:{line:226,column:0},end:{line:226,column:32}},"97":{start:{line:228,column:25},end:{line:228,column:27}},"98":{start:{line:229,column:20},end:{line:229,column:23}},"99":{start:{line:230,column:23},end:{line:230,column:55}},"100":{start:{line:231,column:25},end:{line:231,column:50}},"101":{start:{line:232,column:26},end:{line:232,column:53}},"102":{start:{line:233,column:16},end:{line:233,column:155}},"103":{start:{line:234,column:4},end:{line:234,column:55}},"104":{start:{line:236,column:0},end:{line:236,column:24}},"105":{start:{line:238,column:4},end:{line:238,column:32}},"106":{start:{line:240,column:0},end:{line:240,column:30}},"107":{start:{line:242,column:4},end:{line:242,column:52}},"108":{start:{line:244,column:0},end:{line:244,column:38}}},fnMap:{"0":{name:"checkEnvironmentSpecificOverride",decl:{start:{line:18,column:9},end:{line:18,column:41}},loc:{start:{line:18,column:94},end:{line:28,column:1}},line:18},"1":{name:"mergeLeft",decl:{start:{line:39,column:9},end:{line:39,column:18}},loc:{start:{line:39,column:32},end:{line:53,column:1}},line:39},"2":{name:"(anonymous_2)",decl:{start:{line:40,column:31},end:{line:40,column:32}},loc:{start:{line:40,column:40},end:{line:51,column:5}},line:40},"3":{name:"convertMicrosecondsToMS",decl:{start:{line:55,column:9},end:{line:55,column:32}},loc:{start:{line:55,column:37},end:{line:58,column:1}},line:55},"4":{name:"convertMSToMicroseconds",decl:{start:{line:60,column:9},end:{line:60,column:32}},loc:{start:{line:60,column:37},end:{line:63,column:1}},line:60},"5":{name:"getCookiesFromHAR",decl:{start:{line:65,column:9},end:{line:65,column:26}},loc:{start:{line:65,column:32},end:{line:74,column:1}},line:65},"6":{name:"(anonymous_6)",decl:{start:{line:67,column:28},end:{line:67,column:29}},loc:{start:{line:67,column:39},end:{line:71,column:5}},line:67},"7":{name:"normalizeFnName",decl:{start:{line:76,column:9},end:{line:76,column:24}},loc:{start:{line:76,column:31},end:{line:81,column:1}},line:76},"8":{name:"setTraceEvents",decl:{start:{line:83,column:9},end:{line:83,column:23}},loc:{start:{line:83,column:30},end:{line:85,column:1}},line:83},"9":{name:"collect",decl:{start:{line:87,column:9},end:{line:87,column:16}},loc:{start:{line:87,column:28},end:{line:90,column:1}},line:87},"10":{name:"formatToDuration",decl:{start:{line:92,column:9},end:{line:92,column:25}},loc:{start:{line:92,column:37},end:{line:94,column:1}},line:92},"11":{name:"isMark",decl:{start:{line:96,column:9},end:{line:96,column:15}},loc:{start:{line:96,column:23},end:{line:98,column:1}},line:96},"12":{name:"isFrameMark",decl:{start:{line:100,column:9},end:{line:100,column:20}},loc:{start:{line:100,column:35},end:{line:102,column:1}},line:100},"13":{name:"isDocLoaderURL",decl:{start:{line:104,column:9},end:{line:104,column:23}},loc:{start:{line:104,column:36},end:{line:114,column:1}},line:104},"14":{name:"isFrameNavigationStart",decl:{start:{line:116,column:9},end:{line:116,column:31}},loc:{start:{line:116,column:51},end:{line:120,column:1}},line:116},"15":{name:"isUserMark",decl:{start:{line:122,column:9},end:{line:122,column:19}},loc:{start:{line:122,column:27},end:{line:126,column:1}},line:122},"16":{name:"isCommitLoad",decl:{start:{line:128,column:9},end:{line:128,column:21}},loc:{start:{line:128,column:29},end:{line:133,column:1}},line:128},"17":{name:"byTime",decl:{start:{line:135,column:9},end:{line:135,column:15}},loc:{start:{line:135,column:22},end:{line:137,column:1}},line:135},"18":{name:"findFrame",decl:{start:{line:139,column:9},end:{line:139,column:18}},loc:{start:{line:139,column:32},end:{line:147,column:1}},line:139},"19":{name:"(anonymous_19)",decl:{start:{line:142,column:14},end:{line:142,column:15}},loc:{start:{line:142,column:21},end:{line:142,column:52}},line:142},"20":{name:"parseMarkers",decl:{start:{line:149,column:9},end:{line:149,column:21}},loc:{start:{line:149,column:25},end:{line:161,column:1}},line:149},"21":{name:"(anonymous_21)",decl:{start:{line:154,column:14},end:{line:154,column:15}},loc:{start:{line:154,column:26},end:{line:159,column:5}},line:154},"22":{name:"removeDuplicates",decl:{start:{line:163,column:9},end:{line:163,column:25}},loc:{start:{line:163,column:38},end:{line:165,column:1}},line:163},"23":{name:"fillArray",decl:{start:{line:167,column:9},end:{line:167,column:18}},loc:{start:{line:167,column:49},end:{line:177,column:1}},line:167},"24":{name:"convertToTypable",decl:{start:{line:185,column:9},end:{line:185,column:25}},loc:{start:{line:185,column:32},end:{line:189,column:1}},line:185},"25":{name:"(anonymous_25)",decl:{start:{line:187,column:38},end:{line:187,column:39}},loc:{start:{line:187,column:48},end:{line:187,column:85}},line:187},"26":{name:"toNearestHundreth",decl:{start:{line:191,column:9},end:{line:191,column:26}},loc:{start:{line:191,column:30},end:{line:193,column:1}},line:191},"27":{name:"convertToSentCase",decl:{start:{line:218,column:9},end:{line:218,column:26}},loc:{start:{line:218,column:32},end:{line:221,column:1}},line:218},"28":{name:"logHeading",decl:{start:{line:223,column:9},end:{line:223,column:19}},loc:{start:{line:223,column:29},end:{line:225,column:1}},line:223},"29":{name:"logBar",decl:{start:{line:227,column:9},end:{line:227,column:15}},loc:{start:{line:227,column:21},end:{line:235,column:1}},line:227},"30":{name:"timestamp",decl:{start:{line:237,column:9},end:{line:237,column:18}},loc:{start:{line:237,column:21},end:{line:239,column:1}},line:237},"31":{name:"durationInSec",decl:{start:{line:241,column:9},end:{line:241,column:22}},loc:{start:{line:241,column:43},end:{line:243,column:1}},line:241}},branchMap:{"0":{loc:{start:{line:19,column:4},end:{line:21,column:5}},type:"if",locations:[{start:{line:19,column:4},end:{line:21,column:5}},{start:{line:19,column:4},end:{line:21,column:5}}],line:19},"1":{loc:{start:{line:19,column:8},end:{line:19,column:50}},type:"binary-expr",locations:[{start:{line:19,column:8},end:{line:19,column:17}},{start:{line:19,column:21},end:{line:19,column:50}}],line:19},"2":{loc:{start:{line:24,column:4},end:{line:26,column:5}},type:"if",locations:[{start:{line:24,column:4},end:{line:26,column:5}},{start:{line:24,column:4},end:{line:26,column:5}}],line:24},"3":{loc:{start:{line:43,column:35},end:{line:43,column:98}},type:"binary-expr",locations:[{start:{line:43,column:35},end:{line:43,column:64}},{start:{line:43,column:68},end:{line:43,column:98}}],line:43},"4":{loc:{start:{line:44,column:27},end:{line:44,column:80}},type:"binary-expr",locations:[{start:{line:44,column:27},end:{line:44,column:51}},{start:{line:44,column:55},end:{line:44,column:80}}],line:44},"5":{loc:{start:{line:45,column:8},end:{line:50,column:9}},type:"if",locations:[{start:{line:45,column:8},end:{line:50,column:9}},{start:{line:45,column:8},end:{line:50,column:9}}],line:45},"6":{loc:{start:{line:45,column:12},end:{line:45,column:74}},type:"binary-expr",locations:[{start:{line:45,column:12},end:{line:45,column:30}},{start:{line:45,column:35},end:{line:45,column:44}},{start:{line:45,column:48},end:{line:45,column:58}},{start:{line:45,column:63},end:{line:45,column:74}}],line:45},"7":{loc:{start:{line:56,column:9},end:{line:56,column:55}},type:"cond-expr",locations:[{start:{line:56,column:34},end:{line:56,column:50}},{start:{line:56,column:53},end:{line:56,column:55}}],line:56},"8":{loc:{start:{line:61,column:9},end:{line:61,column:55}},type:"cond-expr",locations:[{start:{line:61,column:34},end:{line:61,column:50}},{start:{line:61,column:53},end:{line:61,column:55}}],line:61},"9":{loc:{start:{line:68,column:8},end:{line:70,column:9}},type:"if",locations:[{start:{line:68,column:8},end:{line:70,column:9}},{start:{line:68,column:8},end:{line:70,column:9}}],line:68},"10":{loc:{start:{line:77,column:4},end:{line:79,column:5}},type:"if",locations:[{start:{line:77,column:4},end:{line:79,column:5}},{start:{line:77,column:4},end:{line:79,column:5}}],line:77},"11":{loc:{start:{line:84,column:11},end:{line:84,column:57}},type:"cond-expr",locations:[{start:{line:84,column:34},end:{line:84,column:50}},{start:{line:84,column:53},end:{line:84,column:57}}],line:84},"12":{loc:{start:{line:101,column:11},end:{line:101,column:57}},type:"binary-expr",locations:[{start:{line:101,column:11},end:{line:101,column:27}},{start:{line:101,column:31},end:{line:101,column:57}}],line:101},"13":{loc:{start:{line:106,column:8},end:{line:108,column:9}},type:"if",locations:[{start:{line:106,column:8},end:{line:108,column:9}},{start:{line:106,column:8},end:{line:108,column:9}}],line:106},"14":{loc:{start:{line:117,column:12},end:{line:119,column:34}},type:"binary-expr",locations:[{start:{line:117,column:12},end:{line:117,column:37}},{start:{line:118,column:8},end:{line:118,column:40}},{start:{line:119,column:8},end:{line:119,column:34}}],line:117},"15":{loc:{start:{line:123,column:12},end:{line:125,column:44}},type:"binary-expr",locations:[{start:{line:123,column:12},end:{line:123,column:28}},{start:{line:124,column:8},end:{line:124,column:41}},{start:{line:125,column:8},end:{line:125,column:44}}],line:123},"16":{loc:{start:{line:129,column:12},end:{line:132,column:35}},type:"binary-expr",locations:[{start:{line:129,column:12},end:{line:129,column:28}},{start:{line:130,column:8},end:{line:130,column:35}},{start:{line:131,column:8},end:{line:131,column:37}},{start:{line:132,column:8},end:{line:132,column:35}}],line:129},"17":{loc:{start:{line:143,column:4},end:{line:145,column:5}},type:"if",locations:[{start:{line:143,column:4},end:{line:145,column:5}},{start:{line:143,column:4},end:{line:145,column:5}}],line:143},"18":{loc:{start:{line:151,column:4},end:{line:153,column:5}},type:"if",locations:[{start:{line:151,column:4},end:{line:153,column:5}},{start:{line:151,column:4},end:{line:153,column:5}}],line:151},"19":{loc:{start:{line:167,column:29},end:{line:167,column:37}},type:"default-arg",locations:[{start:{line:167,column:36},end:{line:167,column:37}}],line:167},"20":{loc:{start:{line:167,column:39},end:{line:167,column:47}},type:"default-arg",locations:[{start:{line:167,column:46},end:{line:167,column:47}}],line:167},"21":{loc:{start:{line:170,column:8},end:{line:172,column:9}},type:"if",locations:[{start:{line:170,column:8},end:{line:172,column:9}},{start:{line:170,column:8},end:{line:172,column:9}}],line:170}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0,0],"16":[0,0,0,0],"17":[0,0],"18":[0,0],"19":[0],"20":[0],"21":[0,0]},inputSourceMap:{version:3,file:"/Users/malynch/D/tracerbench/packages/cli/src/helpers/utils.ts",sources:["/Users/malynch/D/tracerbench/packages/cli/src/helpers/utils.ts"],names:[],mappings:"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",sourcesContent:["/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint:disable:no-console*/\n\nimport { IMarker, ITraceEventFrame } from \"@tracerbench/core\";\nimport * as chalk from \"chalk\";\nimport * as logSymbols from \"log-symbols\";\n\nimport {\n  IBenchmarkEnvironmentOverride,\n  ITBConfig,\n} from \"../command-config/tb-config\";\nimport { ICompareFlags } from \"../commands/compare\";\n\n/**\n * Handles checking if there is a specific override for the attributeName in the tbConfigs for the given overrideObjectName.\n * Defaults to whatever is in the flags object if there is no override.\n *\n * @param attributeName - Attribute name to check if there is an override in overrideObjectName from tbConfig\n * @param flags - Object containing configs parsed from the Command class\n * @param overrideObjectName - Either \"controlBenchmarkEnvironment\" or \"experimentBenchmarkEnvironment\"\n * @param tbConfig - This refers to the parsed JSON from the config file if it exists\n */\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function checkEnvironmentSpecificOverride(\n  attributeName: keyof ICompareFlags,\n  flags: ICompareFlags,\n  overrideObjectName: string,\n  tbConfig?: ITBConfig\n) {\n  if (!tbConfig || !tbConfig[overrideObjectName]) {\n    return flags[attributeName];\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const environmentSpecificConfigs: IBenchmarkEnvironmentOverride = tbConfig[\n    overrideObjectName\n  ]!;\n\n  if (!environmentSpecificConfigs[attributeName]) {\n    return flags[attributeName];\n  }\n\n  return environmentSpecificConfigs[attributeName];\n}\n\n/**\n * Merge the contents of the right object into the left. Simply replace numbers, strings, arrays\n * and recursively call this function with objects.\n *\n * Note that typeof null == 'object'\n *\n * @param left - Destination object\n * @param right - Content of this object takes precedence\n */\nexport function mergeLeft(\n  left: { [key: string]: any },\n  right: { [key: string]: any }\n): { [key: string]: any } {\n  Object.keys(right).forEach((key) => {\n    const leftValue = left[key];\n    const rightValue = left[key];\n    const matchingObjectType =\n      typeof leftValue === \"object\" && typeof rightValue === \"object\";\n    const isOneArray = Array.isArray(leftValue) || Array.isArray(rightValue);\n\n    if (matchingObjectType && (left[key] || right[key]) && !isOneArray) {\n      mergeLeft(left[key], right[key]);\n    } else {\n      left[key] = right[key];\n    }\n  });\n\n  return left;\n}\n\nexport function convertMicrosecondsToMS(ms: string | number): number {\n  ms = typeof ms === \"string\" ? parseInt(ms, 10) : ms;\n  return Math.floor(ms * 100) / 100000;\n}\n\nexport function convertMSToMicroseconds(ms: string | number): number {\n  ms = typeof ms === \"string\" ? parseInt(ms, 10) : ms;\n  return Math.floor(ms * 1000);\n}\n\nexport function getCookiesFromHAR(har: any) {\n  let cookies: any = [];\n  har.log.entries.forEach((entry: any) => {\n    if (entry.response.cookies.length > 0) {\n      cookies.push(entry.response.cookies);\n    }\n  });\n  // eslint-disable-next-line prefer-spread\n  return (cookies = [].concat.apply([], cookies));\n}\n\nexport function normalizeFnName(name: string) {\n  if (name === \"\") {\n    name = \"(anonymous)\";\n  }\n  return name;\n}\n\nexport function setTraceEvents(\n  file: ITraceEventFrame[] | { metadata: {}; traceEvents: ITraceEventFrame[] }\n) {\n  return !Array.isArray(file) ? file.traceEvents : file;\n}\n\nexport function collect(val: any, memo: any) {\n  memo.push(val);\n  return memo;\n}\n\nexport function formatToDuration(ts: number, start: number): number {\n  return toNearestHundreth((ts - start) / 1000);\n}\n\nexport function isMark(event: ITraceEventFrame): boolean {\n  return event.ph === \"R\";\n}\n\nexport function isFrameMark(frame: string, event: ITraceEventFrame): boolean {\n  return event.ph === \"R\" && event.args.frame === frame;\n}\n\nexport function isDocLoaderURL(event: any, url: string): boolean {\n  try {\n    if (event.args.data.documentLoaderURL === url) {\n      return true;\n    }\n    return false;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport function isFrameNavigationStart(\n  frame: string,\n  event: ITraceEventFrame,\n  url: string\n): boolean {\n  return (\n    isFrameMark(frame, event) &&\n    event.name === \"navigationStart\" &&\n    isDocLoaderURL(event, url)\n  );\n}\n\nexport function isUserMark(event: ITraceEventFrame): boolean {\n  return (\n    event.ph === \"R\" &&\n    event.cat === \"blink.user_timing\" &&\n    Object.keys(event.args).length === 0\n  );\n}\n\nexport function isCommitLoad(event: ITraceEventFrame): boolean {\n  return (\n    event.ph === \"X\" &&\n    event.name === \"CommitLoad\" &&\n    event.args.data !== undefined &&\n    event.args.data.isMainFrame\n  );\n}\n\nexport function byTime(a: { ts: number }, b: { ts: number }): number {\n  return a.ts - b.ts;\n}\n\nexport function findFrame(events: any[], url: string): string {\n  const event = events\n    .filter(isCommitLoad)\n    .find((e: any) => e.args.data.url.startsWith(url));\n  if (event) {\n    return event.args.data.frame;\n  }\n  return \"\";\n}\n\nexport function parseMarkers(m: string | string[]): IMarker[] {\n  const a: IMarker[] = [];\n  if (typeof m === \"string\") {\n    m = m.split(\",\");\n  }\n\n  m.forEach((marker) => {\n    a.push({\n      label: marker,\n      start: marker,\n    });\n  });\n  return a;\n}\n\nexport function removeDuplicates<T>(collection: T[]) {\n  return [...new Set(collection)];\n}\n\nexport function fillArray(arrLngth: number, incr = 1, strt = 0): number[] {\n  const a = [];\n  while (a.length < arrLngth) {\n    if (a.length < 1) {\n      a.push(strt);\n    }\n    a.push(strt + incr);\n    strt = strt + incr;\n  }\n  return a;\n}\n\n/**\n * \"name\" is expected to be a titlecased string. We want something the user can type easily so the passed string\n * is converted into lowercased words dasherized. Any extra \"/\" will also be removed.\n *\n * @param str - String to be converted to dasherized case\n */\nexport function convertToTypable(name: string): string {\n  const split = name.split(\" \");\n  const lowercasedWords = split.map((word) =>\n    word.toLowerCase().replace(/\\//g, \"\")\n  );\n  return lowercasedWords.join(\"-\");\n}\n\nexport function toNearestHundreth(n: number): number {\n  return Math.round(n * 100) / 100;\n}\n\nexport const chalkScheme = {\n  white: chalk.rgb(255, 255, 255),\n  warning: chalk.rgb(255, 174, 66),\n  header: chalk.rgb(255, 255, 255),\n  regress: chalk.rgb(239, 100, 107),\n  neutral: chalk.rgb(225, 225, 225),\n  significant: chalk.rgb(0, 191, 255),\n  imprv: chalk.rgb(135, 197, 113),\n  phase: chalk.rgb(225, 225, 225),\n  faint: chalk.rgb(80, 80, 80),\n  checkmark: chalk.rgb(133, 153, 36)(`${logSymbols.success}`),\n  blackBgGreen: chalk.green.bgGreen,\n  blackBgRed: chalk.rgb(239, 100, 107).bgRed,\n  blackBgBlue: chalk.rgb(24, 132, 228).bgRgb(24, 132, 228),\n  blackBgYellow: chalk.rgb(255, 174, 66).bgRgb(255, 174, 66),\n  tbBranding: {\n    lime: chalk.rgb(199, 241, 106),\n    blue: chalk.rgb(24, 132, 228),\n    aqua: chalk.rgb(56, 210, 211),\n    dkBlue: chalk.rgb(10, 45, 70),\n    grey: chalk.rgb(153, 153, 153),\n  },\n};\n\nexport function convertToSentCase(str: string): string {\n  const result = str.replace(/([A-Z])/g, \" $1\");\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport function logHeading(heading: string): void {\n  console.log(\n    `\\n${chalkScheme.blackBgBlue(`    ${chalkScheme.white(heading)}    `)}\\n`\n  );\n}\n\nexport type logBarOptions = {\n  totalDuration: number;\n  duration: number;\n  title: string;\n};\n\nexport function logBar(ops: logBarOptions): string {\n  const maxBarLength = 60;\n  const barTick = \"\u25A0\";\n  const barSegment = ops.totalDuration / maxBarLength;\n  const fullSegments = ops.duration / barSegment;\n  const emptySegments = maxBarLength - fullSegments;\n  const bar = `${chalkScheme.tbBranding.blue(\n    barTick.repeat(fullSegments)\n  )}${chalkScheme.tbBranding.grey(barTick.repeat(emptySegments))}`;\n\n  return `${ops.title}\\n${bar} ${ops.duration} ms\\n`;\n}\n\nexport function timestamp(): number {\n  return new Date().getTime();\n}\n\nexport function durationInSec(endTime: number, startTime: number): number {\n  return Math.round((endTime - startTime) / 1000);\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"8d1e473db68206f97295599a0616f0ad1b298bad"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_vm1o9b4bx=function(){return actualCoverage;};return actualCoverage;}cov_vm1o9b4bx().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const chalk=(cov_vm1o9b4bx().s[1]++,require("chalk"));const logSymbols=(cov_vm1o9b4bx().s[2]++,require("log-symbols"));/**
 * Handles checking if there is a specific override for the attributeName in the tbConfigs for the given overrideObjectName.
 * Defaults to whatever is in the flags object if there is no override.
 *
 * @param attributeName - Attribute name to check if there is an override in overrideObjectName from tbConfig
 * @param flags - Object containing configs parsed from the Command class
 * @param overrideObjectName - Either "controlBenchmarkEnvironment" or "experimentBenchmarkEnvironment"
 * @param tbConfig - This refers to the parsed JSON from the config file if it exists
 */ // eslint-disable-next-line @typescript-eslint/explicit-function-return-type
function checkEnvironmentSpecificOverride(attributeName,flags,overrideObjectName,tbConfig){cov_vm1o9b4bx().f[0]++;cov_vm1o9b4bx().s[3]++;if((cov_vm1o9b4bx().b[1][0]++,!tbConfig)||(cov_vm1o9b4bx().b[1][1]++,!tbConfig[overrideObjectName])){cov_vm1o9b4bx().b[0][0]++;cov_vm1o9b4bx().s[4]++;return flags[attributeName];}else{cov_vm1o9b4bx().b[0][1]++;}// eslint-disable-next-line @typescript-eslint/no-non-null-assertion
const environmentSpecificConfigs=(cov_vm1o9b4bx().s[5]++,tbConfig[overrideObjectName]);cov_vm1o9b4bx().s[6]++;if(!environmentSpecificConfigs[attributeName]){cov_vm1o9b4bx().b[2][0]++;cov_vm1o9b4bx().s[7]++;return flags[attributeName];}else{cov_vm1o9b4bx().b[2][1]++;}cov_vm1o9b4bx().s[8]++;return environmentSpecificConfigs[attributeName];}cov_vm1o9b4bx().s[9]++;exports.checkEnvironmentSpecificOverride=checkEnvironmentSpecificOverride;/**
 * Merge the contents of the right object into the left. Simply replace numbers, strings, arrays
 * and recursively call this function with objects.
 *
 * Note that typeof null == 'object'
 *
 * @param left - Destination object
 * @param right - Content of this object takes precedence
 */function mergeLeft(left,right){cov_vm1o9b4bx().f[1]++;cov_vm1o9b4bx().s[10]++;Object.keys(right).forEach(key=>{cov_vm1o9b4bx().f[2]++;const leftValue=(cov_vm1o9b4bx().s[11]++,left[key]);const rightValue=(cov_vm1o9b4bx().s[12]++,left[key]);const matchingObjectType=(cov_vm1o9b4bx().s[13]++,(cov_vm1o9b4bx().b[3][0]++,typeof leftValue==="object")&&(cov_vm1o9b4bx().b[3][1]++,typeof rightValue==="object"));const isOneArray=(cov_vm1o9b4bx().s[14]++,(cov_vm1o9b4bx().b[4][0]++,Array.isArray(leftValue))||(cov_vm1o9b4bx().b[4][1]++,Array.isArray(rightValue)));cov_vm1o9b4bx().s[15]++;if((cov_vm1o9b4bx().b[6][0]++,matchingObjectType)&&((cov_vm1o9b4bx().b[6][1]++,left[key])||(cov_vm1o9b4bx().b[6][2]++,right[key]))&&(cov_vm1o9b4bx().b[6][3]++,!isOneArray)){cov_vm1o9b4bx().b[5][0]++;cov_vm1o9b4bx().s[16]++;mergeLeft(left[key],right[key]);}else{cov_vm1o9b4bx().b[5][1]++;cov_vm1o9b4bx().s[17]++;left[key]=right[key];}});cov_vm1o9b4bx().s[18]++;return left;}cov_vm1o9b4bx().s[19]++;exports.mergeLeft=mergeLeft;function convertMicrosecondsToMS(ms){cov_vm1o9b4bx().f[3]++;cov_vm1o9b4bx().s[20]++;ms=typeof ms==="string"?(cov_vm1o9b4bx().b[7][0]++,parseInt(ms,10)):(cov_vm1o9b4bx().b[7][1]++,ms);cov_vm1o9b4bx().s[21]++;return Math.floor(ms*100)/100000;}cov_vm1o9b4bx().s[22]++;exports.convertMicrosecondsToMS=convertMicrosecondsToMS;function convertMSToMicroseconds(ms){cov_vm1o9b4bx().f[4]++;cov_vm1o9b4bx().s[23]++;ms=typeof ms==="string"?(cov_vm1o9b4bx().b[8][0]++,parseInt(ms,10)):(cov_vm1o9b4bx().b[8][1]++,ms);cov_vm1o9b4bx().s[24]++;return Math.floor(ms*1000);}cov_vm1o9b4bx().s[25]++;exports.convertMSToMicroseconds=convertMSToMicroseconds;function getCookiesFromHAR(har){cov_vm1o9b4bx().f[5]++;let cookies=(cov_vm1o9b4bx().s[26]++,[]);cov_vm1o9b4bx().s[27]++;har.log.entries.forEach(entry=>{cov_vm1o9b4bx().f[6]++;cov_vm1o9b4bx().s[28]++;if(entry.response.cookies.length>0){cov_vm1o9b4bx().b[9][0]++;cov_vm1o9b4bx().s[29]++;cookies.push(entry.response.cookies);}else{cov_vm1o9b4bx().b[9][1]++;}});// eslint-disable-next-line prefer-spread
cov_vm1o9b4bx().s[30]++;return cookies=[].concat.apply([],cookies);}cov_vm1o9b4bx().s[31]++;exports.getCookiesFromHAR=getCookiesFromHAR;function normalizeFnName(name){cov_vm1o9b4bx().f[7]++;cov_vm1o9b4bx().s[32]++;if(name===""){cov_vm1o9b4bx().b[10][0]++;cov_vm1o9b4bx().s[33]++;name="(anonymous)";}else{cov_vm1o9b4bx().b[10][1]++;}cov_vm1o9b4bx().s[34]++;return name;}cov_vm1o9b4bx().s[35]++;exports.normalizeFnName=normalizeFnName;function setTraceEvents(file){cov_vm1o9b4bx().f[8]++;cov_vm1o9b4bx().s[36]++;return!Array.isArray(file)?(cov_vm1o9b4bx().b[11][0]++,file.traceEvents):(cov_vm1o9b4bx().b[11][1]++,file);}cov_vm1o9b4bx().s[37]++;exports.setTraceEvents=setTraceEvents;function collect(val,memo){cov_vm1o9b4bx().f[9]++;cov_vm1o9b4bx().s[38]++;memo.push(val);cov_vm1o9b4bx().s[39]++;return memo;}cov_vm1o9b4bx().s[40]++;exports.collect=collect;function formatToDuration(ts,start){cov_vm1o9b4bx().f[10]++;cov_vm1o9b4bx().s[41]++;return toNearestHundreth((ts-start)/1000);}cov_vm1o9b4bx().s[42]++;exports.formatToDuration=formatToDuration;function isMark(event){cov_vm1o9b4bx().f[11]++;cov_vm1o9b4bx().s[43]++;return event.ph==="R";}cov_vm1o9b4bx().s[44]++;exports.isMark=isMark;function isFrameMark(frame,event){cov_vm1o9b4bx().f[12]++;cov_vm1o9b4bx().s[45]++;return(cov_vm1o9b4bx().b[12][0]++,event.ph==="R")&&(cov_vm1o9b4bx().b[12][1]++,event.args.frame===frame);}cov_vm1o9b4bx().s[46]++;exports.isFrameMark=isFrameMark;function isDocLoaderURL(event,url){cov_vm1o9b4bx().f[13]++;cov_vm1o9b4bx().s[47]++;try{cov_vm1o9b4bx().s[48]++;if(event.args.data.documentLoaderURL===url){cov_vm1o9b4bx().b[13][0]++;cov_vm1o9b4bx().s[49]++;return true;}else{cov_vm1o9b4bx().b[13][1]++;}cov_vm1o9b4bx().s[50]++;return false;}catch(e){cov_vm1o9b4bx().s[51]++;return false;}}cov_vm1o9b4bx().s[52]++;exports.isDocLoaderURL=isDocLoaderURL;function isFrameNavigationStart(frame,event,url){cov_vm1o9b4bx().f[14]++;cov_vm1o9b4bx().s[53]++;return(cov_vm1o9b4bx().b[14][0]++,isFrameMark(frame,event))&&(cov_vm1o9b4bx().b[14][1]++,event.name==="navigationStart")&&(cov_vm1o9b4bx().b[14][2]++,isDocLoaderURL(event,url));}cov_vm1o9b4bx().s[54]++;exports.isFrameNavigationStart=isFrameNavigationStart;function isUserMark(event){cov_vm1o9b4bx().f[15]++;cov_vm1o9b4bx().s[55]++;return(cov_vm1o9b4bx().b[15][0]++,event.ph==="R")&&(cov_vm1o9b4bx().b[15][1]++,event.cat==="blink.user_timing")&&(cov_vm1o9b4bx().b[15][2]++,Object.keys(event.args).length===0);}cov_vm1o9b4bx().s[56]++;exports.isUserMark=isUserMark;function isCommitLoad(event){cov_vm1o9b4bx().f[16]++;cov_vm1o9b4bx().s[57]++;return(cov_vm1o9b4bx().b[16][0]++,event.ph==="X")&&(cov_vm1o9b4bx().b[16][1]++,event.name==="CommitLoad")&&(cov_vm1o9b4bx().b[16][2]++,event.args.data!==undefined)&&(cov_vm1o9b4bx().b[16][3]++,event.args.data.isMainFrame);}cov_vm1o9b4bx().s[58]++;exports.isCommitLoad=isCommitLoad;function byTime(a,b){cov_vm1o9b4bx().f[17]++;cov_vm1o9b4bx().s[59]++;return a.ts-b.ts;}cov_vm1o9b4bx().s[60]++;exports.byTime=byTime;function findFrame(events,url){cov_vm1o9b4bx().f[18]++;const event=(cov_vm1o9b4bx().s[61]++,events.filter(isCommitLoad).find(e=>{cov_vm1o9b4bx().f[19]++;cov_vm1o9b4bx().s[62]++;return e.args.data.url.startsWith(url);}));cov_vm1o9b4bx().s[63]++;if(event){cov_vm1o9b4bx().b[17][0]++;cov_vm1o9b4bx().s[64]++;return event.args.data.frame;}else{cov_vm1o9b4bx().b[17][1]++;}cov_vm1o9b4bx().s[65]++;return"";}cov_vm1o9b4bx().s[66]++;exports.findFrame=findFrame;function parseMarkers(m){cov_vm1o9b4bx().f[20]++;const a=(cov_vm1o9b4bx().s[67]++,[]);cov_vm1o9b4bx().s[68]++;if(typeof m==="string"){cov_vm1o9b4bx().b[18][0]++;cov_vm1o9b4bx().s[69]++;m=m.split(",");}else{cov_vm1o9b4bx().b[18][1]++;}cov_vm1o9b4bx().s[70]++;m.forEach(marker=>{cov_vm1o9b4bx().f[21]++;cov_vm1o9b4bx().s[71]++;a.push({label:marker,start:marker});});cov_vm1o9b4bx().s[72]++;return a;}cov_vm1o9b4bx().s[73]++;exports.parseMarkers=parseMarkers;function removeDuplicates(collection){cov_vm1o9b4bx().f[22]++;cov_vm1o9b4bx().s[74]++;return[...new Set(collection)];}cov_vm1o9b4bx().s[75]++;exports.removeDuplicates=removeDuplicates;function fillArray(arrLngth,incr=(cov_vm1o9b4bx().b[19][0]++,1),strt=(cov_vm1o9b4bx().b[20][0]++,0)){cov_vm1o9b4bx().f[23]++;const a=(cov_vm1o9b4bx().s[76]++,[]);cov_vm1o9b4bx().s[77]++;while(a.length<arrLngth){cov_vm1o9b4bx().s[78]++;if(a.length<1){cov_vm1o9b4bx().b[21][0]++;cov_vm1o9b4bx().s[79]++;a.push(strt);}else{cov_vm1o9b4bx().b[21][1]++;}cov_vm1o9b4bx().s[80]++;a.push(strt+incr);cov_vm1o9b4bx().s[81]++;strt=strt+incr;}cov_vm1o9b4bx().s[82]++;return a;}cov_vm1o9b4bx().s[83]++;exports.fillArray=fillArray;/**
 * "name" is expected to be a titlecased string. We want something the user can type easily so the passed string
 * is converted into lowercased words dasherized. Any extra "/" will also be removed.
 *
 * @param str - String to be converted to dasherized case
 */function convertToTypable(name){cov_vm1o9b4bx().f[24]++;const split=(cov_vm1o9b4bx().s[84]++,name.split(" "));const lowercasedWords=(cov_vm1o9b4bx().s[85]++,split.map(word=>{cov_vm1o9b4bx().f[25]++;cov_vm1o9b4bx().s[86]++;return word.toLowerCase().replace(/\//g,"");}));cov_vm1o9b4bx().s[87]++;return lowercasedWords.join("-");}cov_vm1o9b4bx().s[88]++;exports.convertToTypable=convertToTypable;function toNearestHundreth(n){cov_vm1o9b4bx().f[26]++;cov_vm1o9b4bx().s[89]++;return Math.round(n*100)/100;}cov_vm1o9b4bx().s[90]++;exports.toNearestHundreth=toNearestHundreth;cov_vm1o9b4bx().s[91]++;exports.chalkScheme={white:chalk.rgb(255,255,255),warning:chalk.rgb(255,174,66),header:chalk.rgb(255,255,255),regress:chalk.rgb(239,100,107),neutral:chalk.rgb(225,225,225),significant:chalk.rgb(0,191,255),imprv:chalk.rgb(135,197,113),phase:chalk.rgb(225,225,225),faint:chalk.rgb(80,80,80),checkmark:chalk.rgb(133,153,36)(`${logSymbols.success}`),blackBgGreen:chalk.green.bgGreen,blackBgRed:chalk.rgb(239,100,107).bgRed,blackBgBlue:chalk.rgb(24,132,228).bgRgb(24,132,228),blackBgYellow:chalk.rgb(255,174,66).bgRgb(255,174,66),tbBranding:{lime:chalk.rgb(199,241,106),blue:chalk.rgb(24,132,228),aqua:chalk.rgb(56,210,211),dkBlue:chalk.rgb(10,45,70),grey:chalk.rgb(153,153,153)}};function convertToSentCase(str){cov_vm1o9b4bx().f[27]++;const result=(cov_vm1o9b4bx().s[92]++,str.replace(/([A-Z])/g," $1"));cov_vm1o9b4bx().s[93]++;return result.charAt(0).toUpperCase()+result.slice(1);}cov_vm1o9b4bx().s[94]++;exports.convertToSentCase=convertToSentCase;function logHeading(heading){cov_vm1o9b4bx().f[28]++;cov_vm1o9b4bx().s[95]++;console.log(`\n${exports.chalkScheme.blackBgBlue(`    ${exports.chalkScheme.white(heading)}    `)}\n`);}cov_vm1o9b4bx().s[96]++;exports.logHeading=logHeading;function logBar(ops){cov_vm1o9b4bx().f[29]++;const maxBarLength=(cov_vm1o9b4bx().s[97]++,60);const barTick=(cov_vm1o9b4bx().s[98]++,"■");const barSegment=(cov_vm1o9b4bx().s[99]++,ops.totalDuration/maxBarLength);const fullSegments=(cov_vm1o9b4bx().s[100]++,ops.duration/barSegment);const emptySegments=(cov_vm1o9b4bx().s[101]++,maxBarLength-fullSegments);const bar=(cov_vm1o9b4bx().s[102]++,`${exports.chalkScheme.tbBranding.blue(barTick.repeat(fullSegments))}${exports.chalkScheme.tbBranding.grey(barTick.repeat(emptySegments))}`);cov_vm1o9b4bx().s[103]++;return`${ops.title}\n${bar} ${ops.duration} ms\n`;}cov_vm1o9b4bx().s[104]++;exports.logBar=logBar;function timestamp(){cov_vm1o9b4bx().f[30]++;cov_vm1o9b4bx().s[105]++;return new Date().getTime();}cov_vm1o9b4bx().s[106]++;exports.timestamp=timestamp;function durationInSec(endTime,startTime){cov_vm1o9b4bx().f[31]++;cov_vm1o9b4bx().s[107]++;return Math.round((endTime-startTime)/1000);}cov_vm1o9b4bx().s[108]++;exports.durationInSec=durationInSec;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,