import type { ChromeWithPipeConnection, ProtocolConnection, SessionConnection } from 'chrome-debugging-client';
import type { Protocol } from 'devtools-protocol';
import { IConditions } from './conditions';
export declare function getBrowserArgs(explictArgs?: string[]): string[];
export declare function wait(dur: number): Promise<unknown>;
export declare function filterObjectByKeys(obj: {
    [key: string]: any;
}, keyArray: string[]): {
    [key: string]: any;
};
export declare function createBrowser(browserArgs?: string[], headless?: boolean): Promise<ChromeWithPipeConnection>;
export declare function getNewTab(browser: ProtocolConnection, url?: string): Promise<SessionConnection>;
export declare function getTab(browser: ProtocolConnection): Promise<SessionConnection>;
export declare function emulate(client: ProtocolConnection, conditions: IConditions): Promise<void>;
export declare function setCookies(page: ProtocolConnection, cookies: Protocol.Network.CookieParam[]): Promise<void>;
//# sourceMappingURL=utils.d.ts.map