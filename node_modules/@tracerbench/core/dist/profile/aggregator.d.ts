import { Archive } from '@tracerbench/har';
import { HierarchyNode } from 'd3-hierarchy';
import { ICallFrame, ICpuProfileNode } from '../trace';
import { ICategories, ILocator } from './analyze';
import { ParsedFile } from './metadata';
import { ModuleMatcher } from './module-matcher';
declare type ICallFrameInfo = {
    self: number;
    stack: ICallFrame[];
};
export declare type IAggregations = {
    [key: string]: IAggregationResult;
};
declare type IAggregationResult = {
    total: number;
    self: number;
    attributed: number;
    functionName: string;
    moduleName: string;
    callframes: ICallFrameInfo[];
};
export interface ICategorized {
    [key: string]: IAggregationResult[];
}
export declare function verifyMethods(array: ILocator[]): void;
export declare function categorizeAggregations(aggregations: IAggregations, categories: ICategories): ICategorized;
export interface IParsedFiles {
    [key: string]: ParsedFile;
}
export declare function collapseCallFrames(aggregations: IAggregations): IAggregations;
export declare function aggregate(hierarchy: HierarchyNode<ICpuProfileNode>, locators: ILocator[], archive: Archive, modMatcher: ModuleMatcher): IAggregations;
export {};
//# sourceMappingURL=aggregator.d.ts.map