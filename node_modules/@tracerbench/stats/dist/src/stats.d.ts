export interface ISevenFigureSummary {
    min: number;
    max: number;
    10: number;
    25: number;
    50: number;
    75: number;
    90: number;
}
export interface IOutliers {
    IQR: number;
    outliers: number[];
    lowerOutlier: number;
    upperOutlier: number;
}
export interface IStatsOptions {
    control: number[];
    experiment: number[];
    name: string;
    confidenceLevel?: 0.8 | 0.85 | 0.9 | 0.95 | 0.99 | 0.995 | 0.999;
}
export interface IConfidenceInterval {
    min: number;
    max: number;
    isSig: boolean;
}
export declare class Stats {
    readonly name: string;
    readonly estimator: number;
    readonly sparkLine: {
        control: string;
        experiment: string;
    };
    readonly confidenceIntervals: {
        [key: number]: IConfidenceInterval;
    };
    readonly confidenceInterval: IConfidenceInterval;
    readonly sevenFigureSummary: {
        control: ISevenFigureSummary;
        experiment: ISevenFigureSummary;
    };
    readonly outliers: {
        control: IOutliers;
        experiment: IOutliers;
    };
    readonly sampleCount: {
        control: number;
        experiment: number;
    };
    readonly experimentMS: number[];
    readonly controlMS: number[];
    readonly experimentSortedMS: number[];
    readonly controlSortedMS: number[];
    private range;
    constructor(options: IStatsOptions);
    private getOutliers;
    private getSevenFigureSummary;
    private getConfidenceInterval;
    private getHodgesLehmann;
    private getRange;
    private getHistogram;
    private getSparkline;
}
//# sourceMappingURL=stats.d.ts.map